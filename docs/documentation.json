{
  "metadata": {
    "project_name": "src",
    "version": "1.0.0",
    "generated_at": "2025-10-28T01:17:30.621351Z",
    "languages": [
      "python"
    ],
    "schema_version": "2.0"
  },
  "statistics": {
    "total_files": 154,
    "total_lines": 47764,
    "total_classes": 181,
    "total_functions": 677,
    "avg_complexity": 5.37,
    "max_complexity": 40,
    "high_complexity_functions": [
      "generate_report (40)",
      "format_execution_plan (39)",
      "execute_verify_task (38)",
      "update_task_status (37)",
      "print_discovery_report (35)"
    ],
    "by_language": {
      "python": {
        "files": 154,
        "lines": 47764,
        "classes": 181,
        "functions": 677,
        "avg_complexity": 5.37
      }
    }
  },
  "modules": [
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/__init__.py",
      "language": "python",
      "docstring": "Claude Code Skills - Spec-Driven Development Implementation\n\nA professional Python package for SDD workflows.",
      "classes": [],
      "functions": [],
      "imports": [
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 21
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/cli/__init__.py",
      "language": "python",
      "docstring": "Unified CLI entry points for claude_skills.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
      "language": "python",
      "docstring": "Unified SDD CLI - Single entry point for all SDD commands.",
      "classes": [],
      "functions": [
        "reorder_args_for_subcommand",
        "main"
      ],
      "imports": [
        "sys",
        "argparse",
        "pathlib.Path",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.metrics.track_metrics",
        "claude_skills.cli.sdd.options.add_global_options",
        "claude_skills.cli.sdd.options.create_global_parent_parser",
        "claude_skills.cli.sdd.registry.register_all_subcommands"
      ],
      "exports": [],
      "lines": 198
    },
    {
      "name": "options",
      "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
      "language": "python",
      "docstring": "Shared argument groups for unified CLI.",
      "classes": [],
      "functions": [
        "create_global_parent_parser",
        "add_global_options",
        "add_spec_options",
        "add_task_options"
      ],
      "imports": [
        "argparse"
      ],
      "exports": [],
      "lines": 93
    },
    {
      "name": "registry",
      "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
      "language": "python",
      "docstring": "Plugin registration system for subcommands.",
      "classes": [],
      "functions": [
        "register_all_subcommands",
        "_register_doc_cli",
        "_register_test_cli",
        "_register_skills_dev_cli"
      ],
      "imports": [
        "logging"
      ],
      "exports": [],
      "lines": 107
    },
    {
      "name": "gendocs",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
      "language": "python",
      "docstring": "Generate Documentation Commands\n\nGenerate SKILL.md documentation from CLI argparse definitions.\nWraps the existing generate_docs.py functionality.",
      "classes": [],
      "functions": [
        "cmd_gendocs",
        "register_gendocs"
      ],
      "imports": [
        "sys",
        "pathlib.Path",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 61
    },
    {
      "name": "migrate",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/migrate.py",
      "language": "python",
      "docstring": "Migration Guidance Commands\n\nProvides guidance for migrating from legacy commands to new unified CLI.",
      "classes": [],
      "functions": [
        "cmd_migrate",
        "register_migrate"
      ],
      "imports": [
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 79
    },
    {
      "name": "registry",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
      "language": "python",
      "docstring": "Plugin registration for skills development utilities.",
      "classes": [],
      "functions": [
        "register_all_subcommands"
      ],
      "imports": [
        "__future__.annotations",
        "argparse",
        "typing.Any",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 31
    },
    {
      "name": "setup_permissions",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/setup_permissions.py",
      "language": "python",
      "docstring": "Setup Project Permissions Commands\n\nConfigures .claude/settings.json with required SDD tool permissions.\nUsed by /sdd-start command and sdd-plan skill to ensure proper permissions.",
      "classes": [],
      "functions": [
        "cmd_update",
        "cmd_check",
        "register_setup_permissions"
      ],
      "imports": [
        "json",
        "sys",
        "pathlib.Path",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 203
    },
    {
      "name": "start_helper",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "language": "python",
      "docstring": "SDD Start Helper Commands\n\nProvides commands for /sdd-start slash command and session management.",
      "classes": [],
      "functions": [
        "cmd_check_permissions",
        "cmd_find_active_work",
        "cmd_format_output",
        "cmd_get_session_info",
        "register_start_helper"
      ],
      "imports": [
        "json",
        "sys",
        "pathlib.Path",
        "datetime.datetime",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.integrations.get_session_state"
      ],
      "exports": [],
      "lines": 312
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/code_doc/__init__.py",
      "language": "python",
      "docstring": "Codebase Documentation Generator\nModular documentation generation package.",
      "classes": [],
      "functions": [],
      "imports": [
        "parser.CodebaseAnalyzer",
        "calculator.calculate_complexity",
        "calculator.calculate_statistics",
        "formatter.MarkdownGenerator",
        "formatter.JSONGenerator",
        "generator.DocumentationGenerator"
      ],
      "exports": [],
      "lines": 18
    },
    {
      "name": "ai_consultation",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "language": "python",
      "docstring": "AI Consultation for Documentation Generation\n\nShells out to external AI CLI tools (gemini, codex, cursor-agent) to generate\ncontextual documentation (ARCHITECTURE.md, AI_CONTEXT.md) based on structural analysis.\n\nBased on run-tests/consultation.py pattern.",
      "classes": [],
      "functions": [
        "get_available_tools",
        "get_best_tool",
        "format_architecture_research_prompt",
        "format_ai_context_research_prompt",
        "compose_architecture_doc",
        "compose_ai_context_doc",
        "run_consultation",
        "consult_multi_agent",
        "_run_tool_capture",
        "generate_architecture_docs",
        "generate_ai_context_docs"
      ],
      "imports": [
        "subprocess",
        "sys",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "concurrent.futures.ThreadPoolExecutor",
        "concurrent.futures.as_completed",
        "time"
      ],
      "exports": [],
      "lines": 699
    },
    {
      "name": "ast_analysis",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "language": "python",
      "docstring": "Cross-reference tracking for AST analysis.\n\nThis module provides utilities for tracking caller/callee relationships,\nclass instantiations, and building bidirectional reference graphs during\nAST traversal across multiple programming languages.",
      "classes": [
        "ReferenceType",
        "DynamicPattern",
        "CallSite",
        "InstantiationSite",
        "DynamicPatternWarning",
        "CrossReferenceGraph"
      ],
      "functions": [
        "create_cross_reference_graph"
      ],
      "imports": [
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.Dict",
        "typing.List",
        "typing.Set",
        "typing.Optional",
        "typing.Any",
        "enum.Enum"
      ],
      "exports": [],
      "lines": 324
    },
    {
      "name": "calculator",
      "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
      "language": "python",
      "docstring": "Metrics and complexity calculation module.\nHandles code quality metrics, complexity analysis, and statistics.\nSupports multi-language analysis.",
      "classes": [],
      "functions": [
        "calculate_complexity",
        "calculate_statistics",
        "calculate_language_statistics",
        "analyze_code_quality"
      ],
      "imports": [
        "ast",
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "collections.defaultdict"
      ],
      "exports": [],
      "lines": 143
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "language": "python",
      "docstring": "Codebase Documentation Generator CLI\nMain command-line interface for generating comprehensive codebase documentation.\n\nUsage:\n    sdd doc generate <project_directory> [options]\n    sdd doc validate <json_file>\n    sdd doc analyze <project_directory> [options]\n\nSubcommands:\n    generate    Generate documentation (Markdown/JSON)\n    validate    Validate generated JSON against schema\n    analyze     Analyze codebase and print statistics only\n\nOptions for generate:\n    --output-dir DIR     Output directory for documentation (default: ./docs)\n    --format FORMAT      Output format: markdown, json, or both (default: both)\n    --name NAME          Project name (default: directory name)\n    --version VERSION    Project version (default: 1.0.0)\n    --language LANG      Filter by language (python, javascript, go, etc.)\n    --exclude PATTERN    Exclude files matching pattern\n    --verbose, -v        Verbose output\n\nExamples:\n    sdd doc generate ./src\n    sdd doc generate ./src --name MyProject --version 0.1.0\n    sdd doc generate ./src --format json --output-dir ./docs\n    sdd doc analyze ./src --verbose\n    sdd doc validate ./docs/documentation.json",
      "classes": [],
      "functions": [
        "_dump_json",
        "_print_if_json",
        "_exclude_patterns",
        "_handle_error",
        "cmd_generate",
        "cmd_validate",
        "cmd_analyze",
        "cmd_analyze_with_ai",
        "register_code_doc"
      ],
      "imports": [
        "__future__.annotations",
        "argparse",
        "json",
        "sys",
        "traceback",
        "pathlib.Path",
        "typing.Iterable",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.metrics.track_metrics",
        "claude_skills.code_doc.generator.DocumentationGenerator",
        "claude_skills.code_doc.parsers.Language",
        "claude_skills.code_doc.parsers.create_parser_factory",
        "claude_skills.code_doc.calculator.calculate_statistics",
        "claude_skills.code_doc.detectors.detect_framework",
        "claude_skills.code_doc.detectors.identify_key_files",
        "claude_skills.code_doc.detectors.detect_layers",
        "claude_skills.code_doc.detectors.suggest_reading_order",
        "claude_skills.code_doc.detectors.extract_readme",
        "claude_skills.code_doc.detectors.create_context_summary",
        "claude_skills.code_doc.ai_consultation.get_available_tools",
        "claude_skills.code_doc.ai_consultation.generate_architecture_docs",
        "claude_skills.code_doc.ai_consultation.generate_ai_context_docs",
        "claude_skills.code_doc.ai_consultation.compose_architecture_doc",
        "claude_skills.code_doc.ai_consultation.compose_ai_context_doc"
      ],
      "exports": [],
      "lines": 494
    },
    {
      "name": "detectors",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "language": "python",
      "docstring": "Framework and codebase pattern detection.\n\nSimple programmatic detection of frameworks, key files, and architectural layers.\nSupports multi-language projects.",
      "classes": [],
      "functions": [
        "_should_exclude_path",
        "detect_languages",
        "get_language_for_extension",
        "detect_framework",
        "identify_key_files",
        "detect_layers",
        "suggest_reading_order",
        "extract_readme",
        "create_context_summary"
      ],
      "imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "pathlib.Path",
        "collections.defaultdict",
        "fnmatch"
      ],
      "exports": [],
      "lines": 455
    },
    {
      "name": "formatter",
      "file": "src/claude_skills/claude_skills/code_doc/formatter.py",
      "language": "python",
      "docstring": "Output formatting module.\nGenerates Markdown and JSON documentation from analyzed codebase data.\nSupports multi-language projects.",
      "classes": [
        "MarkdownGenerator",
        "JSONGenerator"
      ],
      "functions": [],
      "imports": [
        "datetime.datetime",
        "datetime.timezone",
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "collections.defaultdict"
      ],
      "exports": [],
      "lines": 230
    },
    {
      "name": "generator",
      "file": "src/claude_skills/claude_skills/code_doc/generator.py",
      "language": "python",
      "docstring": "Documentation generation orchestration module.\nCoordinates parsing, analysis, and formatting to generate documentation.",
      "classes": [
        "DocumentationGenerator"
      ],
      "functions": [],
      "imports": [
        "json",
        "pathlib.Path",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.List"
      ],
      "exports": [],
      "lines": 294
    },
    {
      "name": "parser",
      "file": "src/claude_skills/claude_skills/code_doc/parser.py",
      "language": "python",
      "docstring": "AST parsing and codebase analysis module.\nHandles Python file discovery, parsing, and structure extraction.",
      "classes": [
        "CodebaseAnalyzer"
      ],
      "functions": [],
      "imports": [
        "ast",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "collections.defaultdict"
      ],
      "exports": [],
      "lines": 187
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/__init__.py",
      "language": "python",
      "docstring": "Multi-language parsers for codebase documentation generation.\n\nThis package provides abstract base classes and language-specific parsers\nfor analyzing codebases in multiple programming languages.",
      "classes": [],
      "functions": [],
      "imports": [
        "base.BaseParser",
        "base.Language",
        "base.ParsedParameter",
        "base.ParsedFunction",
        "base.ParsedClass",
        "base.ParsedModule",
        "base.ParseResult",
        "factory.ParserFactory",
        "factory.create_parser_factory",
        "python.PythonParser"
      ],
      "exports": [],
      "lines": 58
    },
    {
      "name": "base",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "language": "python",
      "docstring": "Abstract base parser interface for multi-language codebase documentation.\n\nThis module defines the common interface and data structures that all\nlanguage-specific parsers must implement.",
      "classes": [
        "Language",
        "ParsedParameter",
        "ParsedFunction",
        "ParsedClass",
        "ParsedModule",
        "ParseResult",
        "BaseParser"
      ],
      "functions": [],
      "imports": [
        "abc.ABC",
        "abc.abstractmethod",
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "pathlib.Path",
        "enum.Enum"
      ],
      "exports": [],
      "lines": 400
    },
    {
      "name": "css",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/css.py",
      "language": "python",
      "docstring": "CSS language parser using tree-sitter.\n\nThis module provides a parser for CSS files that extracts selectors,\nrules, variables, and @-rules.",
      "classes": [
        "CSSParser"
      ],
      "functions": [],
      "imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Dict",
        "typing.Optional",
        "sys",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult",
        "base.ParsedModule",
        "base.ParsedFunction"
      ],
      "exports": [],
      "lines": 205
    },
    {
      "name": "factory",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
      "language": "python",
      "docstring": "Parser factory for multi-language codebase analysis.\n\nThis module provides a factory that automatically detects languages\nand routes files to appropriate parsers.",
      "classes": [
        "ParserFactory"
      ],
      "functions": [
        "_auto_register_parsers",
        "create_parser_factory"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "typing.Type",
        "collections.defaultdict",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult"
      ],
      "exports": [],
      "lines": 306
    },
    {
      "name": "go",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
      "language": "python",
      "docstring": "Go language parser using tree-sitter.\n\nThis module provides a parser for Go files that extracts packages,\nfunctions, structs, interfaces, and methods.",
      "classes": [
        "GoParser"
      ],
      "functions": [],
      "imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Optional",
        "sys",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult",
        "base.ParsedModule",
        "base.ParsedClass",
        "base.ParsedFunction",
        "base.ParsedParameter"
      ],
      "exports": [],
      "lines": 340
    },
    {
      "name": "html",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/html.py",
      "language": "python",
      "docstring": "HTML language parser using tree-sitter.\n\nThis module provides a parser for HTML files that extracts elements,\ncustom components, HTMX attributes, and data attributes.",
      "classes": [
        "HTMLParser"
      ],
      "functions": [],
      "imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Dict",
        "typing.Optional",
        "sys",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult",
        "base.ParsedModule",
        "base.ParsedFunction"
      ],
      "exports": [],
      "lines": 195
    },
    {
      "name": "javascript",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
      "language": "python",
      "docstring": "JavaScript and TypeScript language parser using tree-sitter.\n\nThis module provides a parser for JavaScript/TypeScript files that extracts\nclasses, functions, imports, and exports.",
      "classes": [
        "JavaScriptParser"
      ],
      "functions": [],
      "imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Optional",
        "sys",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult",
        "base.ParsedModule",
        "base.ParsedClass",
        "base.ParsedFunction",
        "base.ParsedParameter"
      ],
      "exports": [],
      "lines": 335
    },
    {
      "name": "python",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
      "language": "python",
      "docstring": "Python language parser using AST analysis.\n\nThis module provides a parser for Python files that extracts classes,\nfunctions, imports, and complexity metrics.",
      "classes": [
        "PythonParser"
      ],
      "functions": [],
      "imports": [
        "ast",
        "sys",
        "pathlib.Path",
        "typing.List",
        "collections.defaultdict",
        "base.BaseParser",
        "base.Language",
        "base.ParseResult",
        "base.ParsedModule",
        "base.ParsedClass",
        "base.ParsedFunction",
        "base.ParsedParameter",
        "ast_analysis.CrossReferenceGraph",
        "ast_analysis.CallSite",
        "ast_analysis.InstantiationSite",
        "ast_analysis.ReferenceType",
        "ast_analysis.DynamicPattern",
        "ast_analysis.DynamicPatternWarning",
        "ast_analysis.create_cross_reference_graph"
      ],
      "exports": [],
      "lines": 475
    },
    {
      "name": "schema",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "language": "python",
      "docstring": "Centralized schema definitions for codebase documentation.\n\nThis module defines the JSON schema structure for documentation output,\nincluding support for cross-reference fields (callers/calls) to enable\nbidirectional function relationship tracking and usage tracking fields\n(instantiated_by/imported_by) for class usage analysis.\n\nSchema Version History:\n- v1.0: Initial schema with basic function/class/module structures\n- v1.1: (Transitional) Development version with new fields\n- v2.0: Stable release with cross-reference and usage tracking support\n  - Functions: callers, calls, call_count fields for bidirectional call tracking\n  - Classes: instantiated_by, imported_by, instantiation_count for usage analysis\n  - Backward compatible: Enhancement functions are opt-in\n  - Migration: Use enhance_function_with_cross_refs() and enhance_class_with_usage_tracking()\n\nMigration Guide (v1.0 \u2192 v2.0):\n\nThe v2.0 schema is backward compatible with v1.0. Existing code using\nParsedFunction.to_dict() and ParsedClass.to_dict() will continue to work\nwithout modifications.\n\nTo adopt v2.0 features:\n\n1. Function Cross-References:\n   ```python\n   from claude_skills.code_doc.schema import enhance_function_with_cross_refs, CallReference\n\n   # Existing v1.0 code works unchanged\n   func_dict = parsed_function.to_dict()\n\n   # Opt-in to v2.0 features\n   callers = [CallReference(\"main\", \"app.py\", 10, \"function_call\")]\n   enhanced_dict = enhance_function_with_cross_refs(parsed_function, callers=callers)\n   ```\n\n2. Class Usage Tracking:\n   ```python\n   from claude_skills.code_doc.schema import enhance_class_with_usage_tracking, InstantiationReference\n\n   # Existing v1.0 code works unchanged\n   class_dict = parsed_class.to_dict()\n\n   # Opt-in to v2.0 features\n   instantiations = [InstantiationReference(\"factory\", \"utils.py\", 5)]\n   enhanced_dict = enhance_class_with_usage_tracking(parsed_class, instantiated_by=instantiations)\n   ```\n\nBackward Compatibility Notes:\n\nv2.0 maintains full backward compatibility with v1.0:\n\n1. Base Schema Unchanged:\n   - ParsedFunction.to_dict() returns same fields as v1.0\n   - ParsedClass.to_dict() returns same fields as v1.0\n   - No changes to ParsedModule\n\n2. Opt-In Enhancement:\n   - New fields only appear when using enhancement functions\n   - Parsers can adopt v2.0 features incrementally\n   - Old parsers continue to work without changes\n\n3. JSON Compatibility:\n   - v1.0 JSON consumers can safely ignore new fields\n   - v2.0 JSON is a superset of v1.0 JSON\n   - Field names don't conflict\n\n4. Migration Path:\n   - Phase 1: Update parsers to populate cross-reference data\n   - Phase 2: Use enhancement functions in formatters\n   - Phase 3: Update consumers to query new fields\n   - Each phase is optional and independent\n\nExample Usage:\n\n    >>> # Parse a file\n    >>> from claude_skills.code_doc.parsers.python import PythonParser\n    >>> parser = PythonParser(root_path, [])\n    >>> result = parser.parse_file(\"example.py\")\n    >>>\n    >>> # v1.0 usage (still works)\n    >>> func = result.functions[0]\n    >>> basic_schema = func.to_dict()\n    >>>\n    >>> # v2.0 usage (opt-in)\n    >>> from claude_skills.code_doc.schema import (\n    ...     enhance_function_with_cross_refs,\n    ...     CallReference\n    ... )\n    >>> callers = [CallReference(\"main\", \"app.py\", 10, \"function_call\")]\n    >>> enhanced_schema = enhance_function_with_cross_refs(func, callers=callers)\n    >>> print(enhanced_schema['callers'])  # v2.0 field",
      "classes": [
        "CallReference",
        "InstantiationReference",
        "ImportReference"
      ],
      "functions": [
        "enhance_function_with_cross_refs",
        "enhance_class_with_usage_tracking"
      ],
      "imports": [
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "parsers.base.ParsedFunction",
        "parsers.base.ParsedClass"
      ],
      "exports": [],
      "lines": 361
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/common/__init__.py",
      "language": "python",
      "docstring": "Spec-Driven Development Common Utilities\n\nShared functionality for all SDD skills (sdd-plan, sdd-next, sdd-update).\nProvides JSON spec file operations, spec parsing, progress calculation, and path discovery.",
      "classes": [],
      "functions": [],
      "imports": [
        "spec.load_json_spec",
        "spec.save_json_spec",
        "spec.backup_json_spec",
        "spec.get_node",
        "spec.update_node",
        "spec.extract_frontmatter",
        "progress.recalculate_progress",
        "progress.update_parent_status",
        "progress.get_progress_summary",
        "progress.list_phases",
        "paths.find_specs_directory",
        "paths.validate_path",
        "paths.validate_and_normalize_paths",
        "paths.normalize_path",
        "paths.batch_check_paths_exist",
        "paths.find_files_by_pattern",
        "paths.ensure_directory",
        "paths.ensure_reports_directory",
        "paths.generate_reports_readme_content",
        "paths.ensure_reviews_directory",
        "paths.generate_reviews_readme_content",
        "paths.ensure_backups_directory",
        "paths.generate_backups_readme_content",
        "paths.ensure_human_readable_directory",
        "paths.generate_human_readable_readme_content",
        "printer.PrettyPrinter",
        "validation.EnhancedError",
        "validation.SpecValidationResult",
        "validation.JsonSpecValidationResult",
        "validation.validate_status",
        "validation.validate_node_type",
        "validation.validate_spec_id_format",
        "validation.validate_iso8601_date",
        "validation.normalize_message_text",
        "hierarchy_validation.validate_spec_hierarchy",
        "hierarchy_validation.validate_structure",
        "hierarchy_validation.validate_hierarchy",
        "hierarchy_validation.validate_nodes",
        "hierarchy_validation.validate_task_counts",
        "hierarchy_validation.validate_dependencies",
        "hierarchy_validation.validate_metadata",
        "reporting.generate_spec_report",
        "reporting.generate_json_spec_report",
        "reporting.generate_combined_report",
        "dependency_analysis.analyze_dependencies",
        "dependency_analysis.DEFAULT_BOTTLENECK_THRESHOLD",
        "dependency_analysis.has_dependency_cycle",
        "dependency_analysis.validate_dependency_graph",
        "dependency_analysis.get_dependency_chain",
        "dependency_analysis.find_blocking_tasks",
        "dependency_analysis.find_circular_dependencies",
        "query_operations.query_tasks",
        "query_operations.get_task",
        "query_operations.list_phases",
        "query_operations.check_complete",
        "query_operations.list_blockers",
        "metrics.track_metrics",
        "metrics.capture_metrics",
        "metrics.record_metric",
        "metrics.get_metrics_file_path",
        "metrics.is_metrics_enabled",
        "doc_helper.check_doc_query_available",
        "doc_helper.check_sdd_integration_available",
        "doc_helper.get_task_context_from_docs",
        "doc_helper.should_generate_docs",
        "doc_helper.ensure_documentation_exists",
        "integrations.validate_spec_before_proceed",
        "integrations.execute_verify_task",
        "integrations.get_session_state"
      ],
      "exports": [],
      "lines": 203
    },
    {
      "name": "dependency_analysis",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "language": "python",
      "docstring": "Dependency analysis and validation for SDD JSON specs.",
      "classes": [
        "DependencyAnalysis"
      ],
      "functions": [
        "analyze_dependencies",
        "find_circular_dependencies",
        "find_circular_dependencies",
        "has_dependency_cycle",
        "validate_dependency_graph",
        "get_dependency_chain",
        "find_blocking_tasks"
      ],
      "imports": [
        "dataclasses.dataclass",
        "typing.Dict",
        "typing.Iterable",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple"
      ],
      "exports": [],
      "lines": 375
    },
    {
      "name": "doc_helper",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "language": "python",
      "docstring": "Documentation Helper Functions\n\nProvides integration between SDD skills and the code-doc/doc-query system.\nThese functions enable proactive documentation generation and context gathering.",
      "classes": [],
      "functions": [
        "check_doc_query_available",
        "check_sdd_integration_available",
        "get_task_context_from_docs",
        "should_generate_docs",
        "ensure_documentation_exists"
      ],
      "imports": [
        "json",
        "subprocess",
        "shutil",
        "typing.Optional",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 293
    },
    {
      "name": "hierarchy_validation",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "language": "python",
      "docstring": "Hierarchy validation operations for sdd-plan.\nValidates the hierarchy structure within JSON spec files for compliance with sdd-plan requirements.",
      "classes": [],
      "functions": [
        "_extract_location",
        "_determine_severity",
        "_is_auto_fixable",
        "_suggest_fix",
        "_build_enhanced_errors",
        "validate_structure",
        "validate_hierarchy",
        "validate_nodes",
        "validate_task_counts",
        "validate_dependencies",
        "validate_metadata",
        "validate_spec_hierarchy"
      ],
      "imports": [
        "re",
        "pathlib.Path",
        "typing.Dict",
        "typing.Iterable",
        "typing.List",
        "typing.Tuple",
        "typing.Optional",
        "typing.Set",
        "claude_skills.common.EnhancedError",
        "claude_skills.common.JsonSpecValidationResult",
        "claude_skills.common.validate_status",
        "claude_skills.common.validate_node_type",
        "claude_skills.common.validate_spec_id_format",
        "claude_skills.common.validate_iso8601_date",
        "claude_skills.common.normalize_message_text"
      ],
      "exports": [],
      "lines": 712
    },
    {
      "name": "integrations",
      "file": "src/claude_skills/claude_skills/common/integrations.py",
      "language": "python",
      "docstring": "Cross-Skill Integration Utilities\n\nProvides integration functions for SDD skills to work together seamlessly.\nIncludes spec validation, verification task execution, and session state management.",
      "classes": [],
      "functions": [
        "validate_spec_before_proceed",
        "execute_verify_task",
        "get_session_state"
      ],
      "imports": [
        "json",
        "subprocess",
        "time",
        "typing.Optional",
        "pathlib.Path",
        "datetime.datetime",
        "hierarchy_validation.validate_spec_hierarchy"
      ],
      "exports": [],
      "lines": 506
    },
    {
      "name": "metrics",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "language": "python",
      "docstring": "Metrics collection system for Claude Skills.\n\nTracks skill and command usage, execution duration, and success/failure rates.\nAutomatically excludes metrics when running in test environments.",
      "classes": [],
      "functions": [
        "_is_test_environment",
        "_ensure_metrics_dir",
        "_rotate_metrics_file_if_needed",
        "record_metric",
        "capture_metrics",
        "track_metrics",
        "get_metrics_file_path",
        "is_metrics_enabled"
      ],
      "imports": [
        "os",
        "sys",
        "json",
        "time",
        "shlex",
        "functools",
        "pathlib.Path",
        "datetime.datetime",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "contextlib.contextmanager"
      ],
      "exports": [],
      "lines": 220
    },
    {
      "name": "paths",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "language": "python",
      "docstring": "Path discovery and validation utilities for SDD workflows.",
      "classes": [],
      "functions": [
        "find_specs_directory",
        "find_spec_file",
        "validate_path",
        "ensure_directory",
        "validate_and_normalize_paths",
        "normalize_path",
        "batch_check_paths_exist",
        "find_files_by_pattern",
        "generate_reports_readme_content",
        "ensure_reports_directory",
        "generate_reviews_readme_content",
        "ensure_reviews_directory",
        "generate_backups_readme_content",
        "ensure_backups_directory",
        "generate_human_readable_readme_content",
        "ensure_human_readable_directory"
      ],
      "imports": [
        "sys",
        "pathlib.Path",
        "typing.Optional",
        "typing.List",
        "typing.Dict"
      ],
      "exports": [],
      "lines": 566
    },
    {
      "name": "printer",
      "file": "src/claude_skills/claude_skills/common/printer.py",
      "language": "python",
      "docstring": "Pretty printer utility for consistent console output across SDD tools.",
      "classes": [
        "PrettyPrinter"
      ],
      "functions": [],
      "imports": [
        "sys"
      ],
      "exports": [],
      "lines": 84
    },
    {
      "name": "progress",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "language": "python",
      "docstring": "Progress calculation utilities for SDD JSON specs.\nProvides hierarchical progress recalculation and status updates.",
      "classes": [],
      "functions": [
        "recalculate_progress",
        "update_node_status",
        "update_parent_status",
        "get_progress_summary",
        "list_phases",
        "get_task_counts_by_status"
      ],
      "imports": [
        "typing.Dict",
        "typing.List"
      ],
      "exports": [],
      "lines": 280
    },
    {
      "name": "query_operations",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "language": "python",
      "docstring": "Query operations for SDD JSON specs.\nProvides filtering, searching, and retrieval of tasks and nodes.\nThese are pure read operations that don't modify state.",
      "classes": [],
      "functions": [
        "query_tasks",
        "get_task",
        "list_phases",
        "check_complete",
        "list_blockers",
        "get_journal_entries",
        "get_task_journal"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.List",
        "spec.load_json_spec",
        "spec.get_node",
        "progress.list_phases",
        "printer.PrettyPrinter"
      ],
      "exports": [],
      "lines": 540
    },
    {
      "name": "reporting",
      "file": "src/claude_skills/claude_skills/common/reporting.py",
      "language": "python",
      "docstring": "Reporting operations for sdd-plan.\nGenerates comprehensive validation reports for spec and JSON specs.",
      "classes": [],
      "functions": [
        "generate_spec_report",
        "generate_json_spec_report",
        "generate_combined_report"
      ],
      "imports": [
        "pathlib.Path",
        "datetime.datetime",
        "typing.List",
        "claude_skills.common.SpecValidationResult",
        "claude_skills.common.JsonSpecValidationResult"
      ],
      "exports": [],
      "lines": 190
    },
    {
      "name": "spec",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "language": "python",
      "docstring": "JSON spec file operations for SDD workflows.\nProvides loading, saving, and backup with atomic writes.",
      "classes": [],
      "functions": [
        "extract_frontmatter",
        "_extract_json_frontmatter",
        "_extract_markdown_frontmatter",
        "_coerce_scalar",
        "load_json_spec",
        "save_json_spec",
        "backup_json_spec",
        "_validate_spec_structure",
        "get_node",
        "update_node"
      ],
      "imports": [
        "sys",
        "json",
        "shutil",
        "datetime.datetime",
        "datetime.timezone",
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "typing.Union",
        "paths.find_spec_file",
        "paths.ensure_backups_directory"
      ],
      "exports": [],
      "lines": 372
    },
    {
      "name": "spec_analysis",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "language": "python",
      "docstring": "Spec file analysis and statistics.\n\nProvides functions for analyzing spec documents, counting elements,\nand extracting metadata.\n\nMigrated from sdd-next/scripts/validation.py to eliminate duplication.",
      "classes": [],
      "functions": [
        "get_spec_statistics",
        "count_spec_elements",
        "get_json_spec_metadata",
        "analyze_spec_complexity",
        "compare_spec_files"
      ],
      "imports": [
        "json",
        "re",
        "pathlib.Path",
        "typing.Dict",
        "typing.Optional",
        "spec.extract_frontmatter"
      ],
      "exports": [],
      "lines": 336
    },
    {
      "name": "validation",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "language": "python",
      "docstring": "Validation utilities and result classes for SDD workflows.\nProvides common validation result structures used across all SDD skills.",
      "classes": [
        "EnhancedError",
        "SpecValidationResult",
        "JsonSpecValidationResult"
      ],
      "functions": [
        "validate_status",
        "validate_node_type",
        "validate_spec_id_format",
        "validate_iso8601_date",
        "normalize_message_text"
      ],
      "imports": [
        "re",
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple"
      ],
      "exports": [],
      "lines": 249
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/dev_tools/__init__.py",
      "language": "python",
      "docstring": "Development tools for claude_skills package.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 3
    },
    {
      "name": "generate_docs",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "language": "python",
      "docstring": "Generate SKILL.md documentation from CLI argparse definitions.\n\nThis script dynamically introspects any claude_skills CLI module and generates\nmarkdown documentation for commands, arguments, and options.\n\nUsage:\n    claude-skills-gendocs sdd-validate\n    claude-skills-gendocs sdd-next --output-file /path/to/output.md\n    claude-skills-gendocs doc-query --section commands",
      "classes": [],
      "functions": [
        "get_parser_from_module",
        "format_argument",
        "generate_global_options",
        "extract_subparsers",
        "generate_command_reference",
        "generate_simple_usage",
        "generate_documentation",
        "main"
      ],
      "imports": [
        "argparse",
        "importlib",
        "sys",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Optional",
        "io",
        "contextlib.redirect_stdout",
        "contextlib.redirect_stderr"
      ],
      "exports": [],
      "lines": 365
    },
    {
      "name": "sdd_start_helper",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "language": "python",
      "docstring": "SDD Start Helper Script\n\nProvides commands for /sdd-start slash command and session management:\n- check-permissions: Check if SDD permissions are configured\n- format-output: Human-readable formatted text for active specs with last-accessed task\n- find-active-work: JSON with all resumable specs\n- get-session-info: Session state with last-accessed task (JSON)",
      "classes": [],
      "functions": [
        "check_permissions",
        "find_active_work",
        "format_output",
        "get_session_info",
        "main"
      ],
      "imports": [
        "argparse",
        "json",
        "os",
        "sys",
        "pathlib.Path",
        "datetime.datetime",
        "common.integrations.get_session_state"
      ],
      "exports": [],
      "lines": 295
    },
    {
      "name": "setup_project_permissions",
      "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
      "language": "python",
      "docstring": "Setup Project Permissions Script\n\nConfigures .claude/settings.json with required SDD tool permissions.\nUsed by /sdd-start command and sdd-plan skill to ensure proper permissions.",
      "classes": [],
      "functions": [
        "update_permissions",
        "check_permissions",
        "main"
      ],
      "imports": [
        "argparse",
        "json",
        "sys",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 181
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/doc_query/__init__.py",
      "language": "python",
      "docstring": "Documentation Query Module\n\nTools for querying generated codebase documentation.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 4
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "language": "python",
      "docstring": "Documentation query CLI with unified CLI integration.",
      "classes": [],
      "functions": [
        "_dump_json",
        "_maybe_json",
        "_ensure_query",
        "_results_to_json",
        "_context_to_json",
        "_print_results",
        "format_result",
        "format_call_graph_as_dot",
        "print_context",
        "print_module_summary",
        "cmd_find_class",
        "cmd_find_function",
        "cmd_find_module",
        "cmd_complexity",
        "cmd_dependencies",
        "cmd_search",
        "cmd_context",
        "cmd_describe_module",
        "cmd_stats",
        "cmd_list_classes",
        "cmd_list_functions",
        "cmd_list_modules",
        "cmd_callers",
        "cmd_callees",
        "cmd_call_graph",
        "cmd_trace_entry",
        "cmd_trace_data",
        "cmd_impact",
        "cmd_refactor_candidates",
        "register_doc_query"
      ],
      "imports": [
        "__future__.annotations",
        "argparse",
        "json",
        "sys",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.metrics.track_metrics",
        "claude_skills.doc_query.doc_query_lib.DocumentationQuery",
        "claude_skills.doc_query.doc_query_lib.QueryResult",
        "claude_skills.doc_query.doc_query_lib.check_docs_exist",
        "claude_skills.doc_query.doc_query_lib.check_documentation_staleness",
        "claude_skills.doc_query.workflows.trace_entry.trace_execution_flow",
        "claude_skills.doc_query.workflows.trace_entry.format_text_output",
        "claude_skills.doc_query.workflows.trace_entry.format_json_output",
        "claude_skills.doc_query.workflows.trace_data.trace_data_lifecycle",
        "claude_skills.doc_query.workflows.trace_data.format_text_output",
        "claude_skills.doc_query.workflows.trace_data.format_json_output",
        "claude_skills.doc_query.workflows.impact_analysis.analyze_impact",
        "claude_skills.doc_query.workflows.impact_analysis.format_text_output",
        "claude_skills.doc_query.workflows.impact_analysis.format_json_output",
        "claude_skills.doc_query.workflows.refactor_candidates.find_refactor_candidates",
        "claude_skills.doc_query.workflows.refactor_candidates.format_text_output",
        "claude_skills.doc_query.workflows.refactor_candidates.format_json_output"
      ],
      "exports": [],
      "lines": 1090
    },
    {
      "name": "doc_query_lib",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "language": "python",
      "docstring": "Core library for querying machine-readable codebase documentation.\n\nThis library provides functions to load and query documentation.json files\ngenerated by the code-doc skill.",
      "classes": [
        "QueryResult",
        "DocumentationQuery"
      ],
      "functions": [
        "check_docs_exist",
        "check_documentation_staleness",
        "_format_age",
        "load_documentation"
      ],
      "imports": [
        "json",
        "re",
        "textwrap",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Union",
        "typing.Any",
        "typing.Iterable",
        "dataclasses.dataclass"
      ],
      "exports": [],
      "lines": 1723
    },
    {
      "name": "sdd_integration",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "language": "python",
      "docstring": "SDD (Spec-Driven Development) integration helpers for doc-query.\n\nThis module provides functions that SDD tools (sdd-plan, sdd-next, sdd-update)\ncan use to gather relevant context from codebase documentation.",
      "classes": [
        "SDDContextGatherer"
      ],
      "functions": [
        "get_task_context",
        "suggest_files_for_task",
        "find_similar_implementations",
        "get_test_context",
        "get_impact_analysis",
        "main"
      ],
      "imports": [
        "re",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "doc_query_lib.DocumentationQuery",
        "doc_query_lib.QueryResult"
      ],
      "exports": [],
      "lines": 452
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/__init__.py",
      "language": "python",
      "docstring": "Workflow commands for doc-query CLI.\n\nThis package contains high-level workflow commands that automate\ncommon documentation query patterns.",
      "classes": [],
      "functions": [],
      "imports": [
        "trace_entry.trace_execution_flow",
        "trace_data.trace_data_lifecycle",
        "impact_analysis.analyze_impact",
        "refactor_candidates.find_refactor_candidates"
      ],
      "exports": [],
      "lines": 13
    },
    {
      "name": "impact_analysis",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "language": "python",
      "docstring": "Impact analysis workflow: Calculate blast radius of code changes.\n\nThis workflow provides change impact analysis showing what code will be affected\nby modifying a function or class, including test coverage and risk assessment.",
      "classes": [],
      "functions": [
        "analyze_impact",
        "_find_entity",
        "calculate_blast_radius",
        "_determine_layer",
        "find_test_coverage",
        "_is_test_file",
        "calculate_risk_score",
        "generate_recommendations",
        "format_dependency_tree",
        "format_test_coverage",
        "format_risk_assessment",
        "format_recommendations",
        "format_summary",
        "format_text_output",
        "format_json_output"
      ],
      "imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Set",
        "typing.Tuple",
        "typing.Optional",
        "json"
      ],
      "exports": [],
      "lines": 766
    },
    {
      "name": "refactor_candidates",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "language": "python",
      "docstring": "Refactor-candidates workflow: Identify high-priority functions to refactor.\n\nThis workflow provides technical debt prioritization by combining complexity\nmetrics with usage data to identify which functions would benefit most from\nrefactoring.",
      "classes": [],
      "functions": [
        "find_refactor_candidates",
        "calculate_priority_score",
        "categorize_risk_level",
        "identify_quick_wins",
        "identify_major_refactors",
        "format_candidates_list",
        "format_candidate_entry",
        "format_quick_wins",
        "format_major_refactors",
        "format_recommendations",
        "format_summary",
        "format_text_output",
        "format_json_output"
      ],
      "imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Set",
        "typing.Tuple",
        "typing.Optional",
        "json"
      ],
      "exports": [],
      "lines": 520
    },
    {
      "name": "trace_data",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "language": "python",
      "docstring": "Trace-data workflow: Trace data object lifecycle through the codebase.\n\nThis workflow provides lifecycle tracking for data objects (classes), showing\ncreation patterns, CRUD operations, data flow by layer, and mutation analysis.",
      "classes": [],
      "functions": [
        "trace_data_lifecycle",
        "detect_crud_operations",
        "build_data_flow",
        "analyze_property_access",
        "format_lifecycle_view",
        "format_usage_map",
        "format_property_analysis",
        "format_summary",
        "format_text_output",
        "format_json_output"
      ],
      "imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Set",
        "typing.Tuple",
        "typing.Optional",
        "json"
      ],
      "exports": [],
      "lines": 603
    },
    {
      "name": "trace_entry",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "language": "python",
      "docstring": "Trace-entry workflow: Trace execution flow from an entry function.\n\nThis workflow provides call chain traversal with architectural layer detection,\ncomplexity analysis, and hot spot identification.",
      "classes": [],
      "functions": [
        "trace_execution_flow",
        "identify_layers",
        "identify_hot_spots",
        "format_tree_view",
        "format_layer_summary",
        "format_hot_spots",
        "format_summary",
        "format_text_output",
        "format_json_output"
      ],
      "imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Set",
        "typing.Tuple",
        "typing.Optional",
        "json"
      ],
      "exports": [],
      "lines": 461
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/run_tests/__init__.py",
      "language": "python",
      "docstring": "Run-Tests Helper Scripts Package\n\nA modular testing and debugging framework for pytest.\nProvides operations for tool checking, external consultation, test discovery, and pytest execution.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 14
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "language": "python",
      "docstring": "Testing tools CLI with unified CLI integration.",
      "classes": [],
      "functions": [
        "_dump_json",
        "_maybe_json",
        "cmd_check_tools",
        "cmd_consult",
        "cmd_discover",
        "cmd_run",
        "register_run_tests"
      ],
      "imports": [
        "__future__.annotations",
        "argparse",
        "json",
        "sys",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.metrics.track_metrics",
        "claude_skills.run_tests.tool_checking.print_tool_status",
        "claude_skills.run_tests.tool_checking.get_tool_status_dict",
        "claude_skills.run_tests.tool_checking.FAILURE_TYPES",
        "claude_skills.run_tests.consultation.consult_with_auto_routing",
        "claude_skills.run_tests.consultation.consult_multi_agent",
        "claude_skills.run_tests.consultation.run_consultation",
        "claude_skills.run_tests.consultation.print_routing_matrix",
        "claude_skills.run_tests.consultation.should_auto_trigger_consensus",
        "claude_skills.run_tests.consultation.get_consensus_pair_for_failure",
        "claude_skills.run_tests.consultation.FAILURE_TYPES",
        "claude_skills.run_tests.consultation.MULTI_AGENT_PAIRS",
        "claude_skills.run_tests.consultation.get_available_tools",
        "claude_skills.run_tests.test_discovery.print_discovery_report",
        "claude_skills.run_tests.pytest_runner.run_pytest",
        "claude_skills.run_tests.pytest_runner.list_presets",
        "claude_skills.run_tests.pytest_runner.get_presets",
        "claude_skills.run_tests.pytest_runner.validate_preset"
      ],
      "exports": [],
      "lines": 250
    },
    {
      "name": "consultation",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "language": "python",
      "docstring": "External Tool Consultation Operations\n\nHandles consultation with external CLI tools (Gemini, Codex, Cursor) for test\ndebugging. Provides auto-routing based on failure type and prompt formatting.",
      "classes": [
        "ConsultationResponse"
      ],
      "functions": [
        "load_model_config",
        "get_model_for_tool",
        "get_flags_for_tool",
        "load_consensus_config",
        "should_auto_trigger_consensus",
        "get_consensus_pair_for_failure",
        "get_consensus_pairs",
        "get_consultation_timeout",
        "_build_tool_commands",
        "get_best_tool",
        "format_prompt",
        "read_code_file",
        "run_consultation",
        "print_routing_matrix",
        "consult_with_auto_routing",
        "run_tool_parallel",
        "analyze_response_similarity",
        "synthesize_responses",
        "format_synthesis_output",
        "consult_multi_agent"
      ],
      "imports": [
        "subprocess",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "typing.NamedTuple",
        "concurrent.futures.ThreadPoolExecutor",
        "concurrent.futures.as_completed",
        "time",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.run_tests.tool_checking.check_tool_availability",
        "claude_skills.run_tests.tool_checking.get_available_tools",
        "claude_skills.run_tests.tool_checking.get_config_path"
      ],
      "exports": [],
      "lines": 1118
    },
    {
      "name": "pytest_runner",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "language": "python",
      "docstring": "Pytest Runner Operations\n\nSmart pytest runner with presets for common testing scenarios.\nSimplifies running pytest with appropriate flags for different debugging and testing needs.",
      "classes": [],
      "functions": [
        "_detect_source_directory",
        "_get_presets",
        "build_pytest_command",
        "run_pytest",
        "get_presets",
        "list_presets",
        "validate_preset",
        "get_preset_description",
        "get_preset_flags"
      ],
      "imports": [
        "subprocess",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 293
    },
    {
      "name": "test_discovery",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "language": "python",
      "docstring": "Test Discovery Operations\n\nDiscovers and analyzes test structure in a project, including test files,\nfixtures, markers, configuration, and organization.",
      "classes": [],
      "functions": [
        "find_test_files",
        "find_conftest_files",
        "analyze_test_file",
        "analyze_conftest",
        "get_directory_structure",
        "print_tree_structure",
        "get_summary_stats",
        "collect_all_fixtures",
        "collect_all_markers",
        "print_discovery_report"
      ],
      "imports": [
        "re",
        "collections.defaultdict",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 455
    },
    {
      "name": "tool_checking",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "language": "python",
      "docstring": "Tool Checking Operations\n\nChecks availability of external CLI tools (Gemini, Codex, Cursor) and provides\nrouting suggestions for test debugging workflows.",
      "classes": [],
      "functions": [
        "get_config_path",
        "load_tool_config",
        "get_enabled_tools",
        "check_tool_availability",
        "get_available_tools",
        "get_missing_tools",
        "get_routing_suggestions",
        "get_quick_routing",
        "print_tool_status",
        "get_tool_status_dict",
        "load_consensus_config",
        "get_auto_trigger_failures",
        "get_consensus_info"
      ],
      "imports": [
        "shutil",
        "yaml",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 396
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_next/__init__.py",
      "language": "python",
      "docstring": "SDD Next Operations\n\nModular operations for spec-driven development task discovery and execution planning.",
      "classes": [],
      "functions": [],
      "imports": [
        "discovery.get_next_task",
        "discovery.get_task_info",
        "discovery.check_dependencies",
        "discovery.prepare_task",
        "project.detect_project",
        "project.find_tests",
        "project.check_environment",
        "project.find_related_files",
        "validation.validate_spec",
        "validation.find_circular_deps",
        "validation.validate_paths",
        "validation.spec_stats",
        "workflow.init_environment",
        "workflow.find_pattern"
      ],
      "exports": [],
      "lines": 34
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "language": "python",
      "docstring": "Spec-Driven Development Tools - Next Task Discovery\nA modular CLI utility for working with spec-driven development workflows.\n\nRefactored to use sdd-common utilities and modular operations.",
      "classes": [],
      "functions": [
        "format_execution_plan",
        "cmd_verify_tools",
        "cmd_find_specs",
        "cmd_next_task",
        "cmd_task_info",
        "cmd_check_deps",
        "_check_all_task_deps",
        "cmd_progress",
        "cmd_init_env",
        "cmd_prepare_task",
        "cmd_format_plan",
        "cmd_validate_spec",
        "cmd_find_pattern",
        "cmd_detect_project",
        "cmd_find_tests",
        "cmd_check_environment",
        "cmd_find_circular_deps",
        "cmd_find_related_files",
        "cmd_validate_paths",
        "cmd_spec_stats",
        "register_next"
      ],
      "imports": [
        "json",
        "sys",
        "argparse",
        "pathlib.Path",
        "typing.List",
        "os",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.get_progress_summary",
        "claude_skills.common.list_phases",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.ensure_reports_directory",
        "claude_skills.common.query_tasks",
        "claude_skills.common.check_complete",
        "claude_skills.common.list_blockers",
        "claude_skills.sdd_next.discovery.get_next_task",
        "claude_skills.sdd_next.discovery.get_task_info",
        "claude_skills.sdd_next.discovery.check_dependencies",
        "claude_skills.sdd_next.discovery.prepare_task",
        "claude_skills.sdd_next.project.detect_project",
        "claude_skills.sdd_next.project.find_tests",
        "claude_skills.sdd_next.project.check_environment",
        "claude_skills.sdd_next.project.find_related_files",
        "claude_skills.sdd_next.validation.validate_spec",
        "claude_skills.sdd_next.validation.find_circular_deps",
        "claude_skills.sdd_next.validation.validate_paths",
        "claude_skills.sdd_next.validation.spec_stats",
        "claude_skills.sdd_next.workflow.init_environment",
        "claude_skills.sdd_next.workflow.find_pattern"
      ],
      "exports": [],
      "lines": 1037
    },
    {
      "name": "discovery",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "language": "python",
      "docstring": "Task discovery and analysis operations for SDD workflows.",
      "classes": [],
      "functions": [
        "is_unblocked",
        "is_in_current_phase",
        "get_next_task",
        "get_task_info",
        "check_dependencies",
        "prepare_task"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.Tuple",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.get_node",
        "claude_skills.common.validate_spec_before_proceed",
        "claude_skills.common.get_task_context_from_docs",
        "claude_skills.common.check_doc_query_available"
      ],
      "exports": [],
      "lines": 335
    },
    {
      "name": "project",
      "file": "src/claude_skills/claude_skills/sdd_next/project.py",
      "language": "python",
      "docstring": "Project detection and analysis operations for sdd-next.\n\nThis module provides functions for detecting project types, finding tests,\nchecking environment requirements, and discovering related files.",
      "classes": [],
      "functions": [
        "detect_project",
        "find_tests",
        "check_environment",
        "find_related_files"
      ],
      "imports": [
        "json",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional"
      ],
      "exports": [],
      "lines": 375
    },
    {
      "name": "validation",
      "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
      "language": "python",
      "docstring": "JSON-aware validation helpers for sdd-next.",
      "classes": [],
      "functions": [
        "validate_spec",
        "find_circular_deps",
        "validate_paths",
        "spec_stats"
      ],
      "imports": [
        "json",
        "pathlib.Path",
        "typing.Dict",
        "typing.Optional",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.find_circular_dependencies",
        "claude_skills.common.validate_and_normalize_paths",
        "claude_skills.common.validate_spec_hierarchy",
        "claude_skills.common.spec_analysis.get_json_spec_metadata"
      ],
      "exports": [],
      "lines": 157
    },
    {
      "name": "workflow",
      "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
      "language": "python",
      "docstring": "Workflow operations for sdd-next.\n\nThis module provides functions for initializing the development environment\nand performing file pattern searches.",
      "classes": [],
      "functions": [
        "init_environment",
        "find_pattern"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.ensure_directory"
      ],
      "exports": [],
      "lines": 85
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_plan/__init__.py",
      "language": "python",
      "docstring": "SDD Plan - Specification creation and planning tools.",
      "classes": [],
      "functions": [],
      "imports": [
        "claude_skills.sdd_plan.templates.list_templates",
        "claude_skills.sdd_plan.templates.get_template",
        "claude_skills.sdd_plan.templates.generate_spec_from_template",
        "claude_skills.sdd_plan.templates.get_template_description",
        "claude_skills.sdd_plan.templates.infer_task_category",
        "claude_skills.sdd_plan.planner.analyze_codebase",
        "claude_skills.sdd_plan.planner.create_spec_interactive",
        "claude_skills.sdd_plan.planner.find_specs_directory",
        "claude_skills.sdd_plan.planner.get_project_context"
      ],
      "exports": [],
      "lines": 29
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
      "language": "python",
      "docstring": "SDD Plan CLI - Specification creation and planning commands.",
      "classes": [],
      "functions": [
        "cmd_create",
        "cmd_analyze",
        "cmd_template",
        "register_plan"
      ],
      "imports": [
        "argparse",
        "sys",
        "json",
        "pathlib.Path",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.ensure_reports_directory",
        "claude_skills.sdd_plan.list_templates",
        "claude_skills.sdd_plan.get_template_description",
        "claude_skills.sdd_plan.create_spec_interactive",
        "claude_skills.sdd_plan.analyze_codebase",
        "claude_skills.sdd_plan.get_project_context"
      ],
      "exports": [],
      "lines": 214
    },
    {
      "name": "planner",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "language": "python",
      "docstring": "Core planning logic for sdd-plan.\n\nProvides spec creation, codebase analysis, and planning workflows.",
      "classes": [],
      "functions": [
        "analyze_codebase",
        "parse_doc_query_stats",
        "create_spec_interactive",
        "find_specs_directory",
        "suggest_documentation_generation",
        "get_project_context"
      ],
      "imports": [
        "json",
        "subprocess",
        "pathlib.Path",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime"
      ],
      "exports": [],
      "lines": 210
    },
    {
      "name": "templates",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "language": "python",
      "docstring": "Spec template management for sdd-plan.\n\nProvides predefined templates for different types of specifications.",
      "classes": [],
      "functions": [
        "list_templates",
        "get_template",
        "generate_spec_from_template",
        "get_template_description",
        "infer_task_category"
      ],
      "imports": [
        "typing.Dict",
        "typing.Any",
        "datetime.datetime",
        "datetime.timezone"
      ],
      "exports": [],
      "lines": 297
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/__init__.py",
      "language": "python",
      "docstring": "SDD Plan Review - Multi-model specification review tools.",
      "classes": [],
      "functions": [],
      "imports": [
        "claude_skills.sdd_plan_review.reviewer.check_tool_available",
        "claude_skills.sdd_plan_review.reviewer.detect_available_tools",
        "claude_skills.sdd_plan_review.reviewer.review_with_tools",
        "claude_skills.sdd_plan_review.prompts.generate_review_prompt",
        "claude_skills.sdd_plan_review.synthesis.parse_response",
        "claude_skills.sdd_plan_review.synthesis.build_consensus",
        "claude_skills.sdd_plan_review.reporting.generate_markdown_report",
        "claude_skills.sdd_plan_review.reporting.generate_json_report"
      ],
      "exports": [],
      "lines": 31
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
      "language": "python",
      "docstring": "SDD Plan Review CLI - Multi-model specification review commands.\n\nUses external AI CLI tools (gemini, codex, cursor-agent) to review specs\nfrom multiple perspectives and provide actionable feedback.",
      "classes": [],
      "functions": [
        "cmd_review",
        "cmd_list_tools",
        "register_plan_review"
      ],
      "imports": [
        "argparse",
        "sys",
        "json",
        "pathlib.Path",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.ensure_reviews_directory",
        "claude_skills.sdd_plan_review.check_tool_available",
        "claude_skills.sdd_plan_review.detect_available_tools",
        "claude_skills.sdd_plan_review.review_with_tools",
        "claude_skills.sdd_plan_review.reporting.generate_markdown_report",
        "claude_skills.sdd_plan_review.reporting.generate_json_report"
      ],
      "exports": [],
      "lines": 275
    },
    {
      "name": "prompts",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "language": "python",
      "docstring": "Unbiased prompt generation for spec reviews.\n\nGenerates prompts that actively fight LLM sycophancy by assuming problems exist\nand demanding critical analysis.",
      "classes": [],
      "functions": [
        "generate_review_prompt",
        "_generate_full_review_prompt",
        "_generate_quick_review_prompt",
        "_generate_security_review_prompt",
        "_generate_feasibility_review_prompt",
        "get_stance_instruction"
      ],
      "imports": [
        "typing.Dict",
        "typing.Any"
      ],
      "exports": [],
      "lines": 341
    },
    {
      "name": "reporting",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "language": "python",
      "docstring": "Comprehensive report generation for spec reviews.\n\nGenerates markdown and JSON reports from multi-model consensus data.",
      "classes": [],
      "functions": [
        "generate_markdown_report",
        "_get_recommendation_summary",
        "_get_score_assessment",
        "_format_issue",
        "_format_model_summary",
        "generate_json_report"
      ],
      "imports": [
        "datetime.datetime",
        "datetime.timezone",
        "typing.Dict",
        "typing.Any",
        "typing.List"
      ],
      "exports": [],
      "lines": 255
    },
    {
      "name": "reviewer",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
      "language": "python",
      "docstring": "Multi-model review orchestration for sdd-plan-review.\n\nHandles parallel execution of AI CLI tools and response collection.",
      "classes": [],
      "functions": [
        "check_tool_available",
        "detect_available_tools",
        "call_tool",
        "review_with_tools"
      ],
      "imports": [
        "subprocess",
        "json",
        "time",
        "tempfile",
        "pathlib.Path",
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "concurrent.futures.ThreadPoolExecutor",
        "concurrent.futures.as_completed",
        "concurrent.futures.wait",
        "claude_skills.sdd_plan_review.prompts.generate_review_prompt",
        "claude_skills.sdd_plan_review.synthesis.parse_response",
        "claude_skills.sdd_plan_review.synthesis.build_consensus"
      ],
      "exports": [],
      "lines": 331
    },
    {
      "name": "synthesis",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py",
      "language": "python",
      "docstring": "Multi-model response synthesis for spec reviews.\n\nParses AI tool responses, extracts structured data, builds consensus,\nand generates overall recommendations.",
      "classes": [],
      "functions": [
        "parse_response",
        "synthesize_with_ai",
        "build_consensus"
      ],
      "imports": [
        "json",
        "re",
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "statistics.mean",
        "statistics.median"
      ],
      "exports": [],
      "lines": 277
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_render/__init__.py",
      "language": "python",
      "docstring": "sdd_render - Render JSON specs to human-readable markdown.\n\nThis module provides functionality to convert JSON specification files\ninto comprehensive, human-readable markdown documentation.",
      "classes": [],
      "functions": [],
      "imports": [
        "renderer.SpecRenderer"
      ],
      "exports": [],
      "lines": 9
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
      "language": "python",
      "docstring": "CLI command handlers for sdd render.",
      "classes": [],
      "functions": [
        "cmd_render",
        "register_render"
      ],
      "imports": [
        "json",
        "pathlib.Path",
        "typing.Optional",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.ensure_human_readable_directory",
        "claude_skills.common.PrettyPrinter",
        "renderer.SpecRenderer"
      ],
      "exports": [],
      "lines": 127
    },
    {
      "name": "renderer",
      "file": "src/claude_skills/claude_skills/sdd_render/renderer.py",
      "language": "python",
      "docstring": "Core rendering logic for converting JSON specs to markdown.",
      "classes": [
        "SpecRenderer"
      ],
      "functions": [],
      "imports": [
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 299
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_update/__init__.py",
      "language": "python",
      "docstring": "SDD Update Operations\n\nModular operations for spec-driven development progress tracking.",
      "classes": [],
      "functions": [],
      "imports": [
        "status.update_task_status",
        "status.mark_task_blocked",
        "status.unblock_task",
        "journal.add_journal_entry",
        "journal.update_metadata",
        "verification.add_verification_result",
        "lifecycle.move_spec",
        "lifecycle.complete_spec",
        "time_tracking.track_time",
        "time_tracking.generate_time_report",
        "validation.validate_spec",
        "validation.get_status_report",
        "validation.audit_spec",
        "query.query_tasks",
        "query.get_task",
        "query.list_phases",
        "query.check_complete",
        "query.phase_time",
        "query.list_blockers"
      ],
      "exports": [],
      "lines": 55
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "language": "python",
      "docstring": "SDD Update Tools - Progress tracking and documentation for spec-driven development.\n\nProvides commands for updating task status, journaling decisions, tracking time,\nand managing spec lifecycle.",
      "classes": [],
      "functions": [
        "cmd_execute_verify",
        "cmd_update_status",
        "cmd_mark_blocked",
        "cmd_unblock_task",
        "cmd_add_journal",
        "cmd_add_revision",
        "cmd_update_frontmatter",
        "cmd_add_verification",
        "cmd_format_verification_summary",
        "cmd_move_spec",
        "cmd_complete_spec",
        "cmd_track_time",
        "cmd_time_report",
        "cmd_status_report",
        "cmd_audit_spec",
        "cmd_query_tasks",
        "cmd_get_task",
        "cmd_get_journal",
        "cmd_list_phases",
        "cmd_check_complete",
        "cmd_phase_time",
        "cmd_list_blockers",
        "cmd_reconcile_state",
        "cmd_check_journaling",
        "cmd_bulk_journal",
        "cmd_complete_task",
        "cmd_sync_metadata",
        "register_update"
      ],
      "imports": [
        "argparse",
        "json",
        "sys",
        "pathlib.Path",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.PrettyPrinter",
        "claude_skills.common.execute_verify_task",
        "claude_skills.common.load_json_spec",
        "claude_skills.sdd_update.status.update_task_status",
        "claude_skills.sdd_update.status.mark_task_blocked",
        "claude_skills.sdd_update.status.unblock_task",
        "claude_skills.sdd_update.workflow.complete_task_workflow",
        "claude_skills.sdd_update.journal.add_journal_entry",
        "claude_skills.sdd_update.journal.update_metadata",
        "claude_skills.sdd_update.journal.bulk_journal_tasks",
        "claude_skills.sdd_update.journal.sync_metadata_from_state",
        "claude_skills.sdd_update.journal.add_revision_entry",
        "claude_skills.sdd_update.verification.add_verification_result",
        "claude_skills.sdd_update.verification.format_verification_summary",
        "claude_skills.sdd_update.lifecycle.move_spec",
        "claude_skills.sdd_update.lifecycle.complete_spec",
        "claude_skills.sdd_update.time_tracking.track_time",
        "claude_skills.sdd_update.time_tracking.generate_time_report",
        "claude_skills.sdd_update.validation.validate_spec",
        "claude_skills.sdd_update.validation.get_status_report",
        "claude_skills.sdd_update.validation.audit_spec",
        "claude_skills.sdd_update.validation.reconcile_state",
        "claude_skills.sdd_update.validation.detect_unjournaled_tasks",
        "claude_skills.sdd_update.query.query_tasks",
        "claude_skills.sdd_update.query.get_task",
        "claude_skills.sdd_update.query.list_phases",
        "claude_skills.sdd_update.query.check_complete",
        "claude_skills.sdd_update.query.phase_time",
        "claude_skills.sdd_update.query.list_blockers"
      ],
      "exports": [],
      "lines": 1027
    },
    {
      "name": "journal",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "language": "python",
      "docstring": "Journal and metadata operations for SDD workflows.\n\nAll operations work with JSON spec files only. No markdown files are used.",
      "classes": [],
      "functions": [
        "mark_task_journaled",
        "_build_journal_entry",
        "_ensure_journal_container",
        "add_journal_entry",
        "update_metadata",
        "add_revision_entry",
        "_render_template",
        "bulk_journal_tasks",
        "sync_metadata_from_state"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timezone",
        "string.Template",
        "claude_skills.common.printer.PrettyPrinter",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec",
        "claude_skills.common.spec.update_node",
        "claude_skills.common.paths.find_specs_directory"
      ],
      "exports": [],
      "lines": 643
    },
    {
      "name": "lifecycle",
      "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
      "language": "python",
      "docstring": "Spec lifecycle management operations for SDD workflows.\n\nAll operations work with JSON spec files only. No markdown files are used.",
      "classes": [],
      "functions": [
        "move_spec",
        "_regenerate_documentation",
        "complete_spec"
      ],
      "imports": [
        "shutil",
        "subprocess",
        "pathlib.Path",
        "typing.Optional",
        "datetime.datetime",
        "datetime.timezone",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec",
        "claude_skills.common.paths.ensure_directory",
        "claude_skills.common.paths.find_spec_file",
        "claude_skills.common.printer.PrettyPrinter"
      ],
      "exports": [],
      "lines": 244
    },
    {
      "name": "query",
      "file": "src/claude_skills/claude_skills/sdd_update/query.py",
      "language": "python",
      "docstring": "Query operations for SDD JSON specs.\nProvides filtering, searching, and retrieval of tasks and nodes.\n\nNote: Core query operations have been moved to sdd_common.query_operations.\nThis module now provides time tracking queries and re-exports common operations.",
      "classes": [],
      "functions": [
        "phase_time"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.List",
        "claude_skills.common.query_operations.query_tasks",
        "claude_skills.common.query_operations.get_task",
        "claude_skills.common.query_operations.list_phases",
        "claude_skills.common.query_operations.check_complete",
        "claude_skills.common.query_operations.list_blockers",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.printer.PrettyPrinter"
      ],
      "exports": [],
      "lines": 139
    },
    {
      "name": "status",
      "file": "src/claude_skills/claude_skills/sdd_update/status.py",
      "language": "python",
      "docstring": "Task status update operations for SDD workflows.",
      "classes": [],
      "functions": [
        "find_verify_tasks_for_task",
        "update_task_status",
        "mark_task_blocked",
        "unblock_task"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.List",
        "datetime.datetime",
        "datetime.timezone",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec",
        "claude_skills.common.spec.update_node",
        "claude_skills.common.progress.recalculate_progress",
        "claude_skills.common.printer.PrettyPrinter",
        "claude_skills.common.execute_verify_task"
      ],
      "exports": [],
      "lines": 449
    },
    {
      "name": "time_tracking",
      "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
      "language": "python",
      "docstring": "Time tracking operations for SDD workflows.\n\nAll operations work with JSON spec files only. No markdown files are used.",
      "classes": [],
      "functions": [
        "track_time",
        "generate_time_report"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec",
        "claude_skills.common.spec.update_node",
        "claude_skills.common.printer.PrettyPrinter"
      ],
      "exports": [],
      "lines": 166
    },
    {
      "name": "validation",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "language": "python",
      "docstring": "JSON spec validation and reporting operations for SDD workflows.",
      "classes": [],
      "functions": [
        "validate_spec",
        "get_status_report",
        "audit_spec",
        "reconcile_state",
        "detect_unjournaled_tasks"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.List",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.progress.get_progress_summary",
        "claude_skills.common.progress.list_phases",
        "claude_skills.common.progress.get_task_counts_by_status",
        "claude_skills.common.printer.PrettyPrinter",
        "claude_skills.common.dependency_analysis.find_circular_dependencies",
        "claude_skills.common.hierarchy_validation.validate_spec_hierarchy"
      ],
      "exports": [],
      "lines": 376
    },
    {
      "name": "verification",
      "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
      "language": "python",
      "docstring": "Verification result documentation for SDD workflows.\n\nAll operations work with JSON spec files only. No markdown files are used.",
      "classes": [],
      "functions": [
        "add_verification_result",
        "format_verification_summary"
      ],
      "imports": [
        "pathlib.Path",
        "typing.Optional",
        "datetime.datetime",
        "datetime.timezone",
        "claude_skills.common.printer.PrettyPrinter",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec",
        "claude_skills.common.spec.update_node",
        "claude_skills.common.paths.find_specs_directory"
      ],
      "exports": [],
      "lines": 221
    },
    {
      "name": "workflow",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "language": "python",
      "docstring": "Workflow utilities for orchestrating compound SDD update operations.",
      "classes": [],
      "functions": [
        "_get_timestamp",
        "_derive_default_journal",
        "_bump_version",
        "_simulate_workflow",
        "_calculate_diff",
        "_print_diff",
        "complete_task_workflow"
      ],
      "imports": [
        "__future__.annotations",
        "copy",
        "json",
        "datetime.datetime",
        "datetime.timezone",
        "pathlib.Path",
        "typing.Any",
        "typing.Dict",
        "typing.Optional",
        "typing.Tuple",
        "claude_skills.common.printer.PrettyPrinter",
        "claude_skills.common.spec.load_json_spec",
        "journal.add_journal_entry",
        "journal.add_revision_entry",
        "journal.mark_task_journaled",
        "journal.sync_metadata_from_state",
        "journal._build_journal_entry",
        "journal._ensure_journal_container",
        "status.update_task_status",
        "time_tracking.track_time"
      ],
      "exports": [],
      "lines": 408
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/sdd_validate/__init__.py",
      "language": "python",
      "docstring": "Spec validation skill package.",
      "classes": [],
      "functions": [],
      "imports": [
        "formatting.NormalizedValidationResult",
        "formatting.format_validation_summary",
        "formatting.normalize_validation_result",
        "fix.FixAction",
        "fix.FixReport",
        "fix.collect_fix_actions",
        "fix.apply_fix_actions",
        "stats.SpecStatistics",
        "stats.calculate_statistics",
        "stats.render_statistics",
        "reporting.generate_report",
        "diff.DiffReport",
        "diff.compute_diff",
        "diff.format_diff_markdown",
        "diff.format_diff_json"
      ],
      "exports": [],
      "lines": 25
    },
    {
      "name": "cli",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "language": "python",
      "docstring": "Standalone Spec Validation CLI\n\nValidates JSON spec files using sdd_common validation modules.\nProvides detailed reports for compliance issues.\n\nPart of the Spec-Driven Development (SDD) workflow.",
      "classes": [],
      "functions": [
        "_stats_to_dict",
        "_dependencies_to_dict",
        "_normalized_to_dict",
        "_serialize_fix_action",
        "_status_to_exit_code",
        "_filter_actions_by_selection",
        "_interactive_select_fixes",
        "cmd_validate",
        "cmd_fix",
        "cmd_report",
        "cmd_stats",
        "cmd_check_deps",
        "register_validate"
      ],
      "imports": [
        "argparse",
        "json",
        "sys",
        "pathlib.Path",
        "dataclasses.asdict",
        "typing.Any",
        "typing.Dict"
      ],
      "exports": [],
      "lines": 604
    },
    {
      "name": "diff",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "language": "python",
      "docstring": "Diff computation and formatting for before/after spec fix comparisons.",
      "classes": [
        "FieldChange",
        "DiffReport"
      ],
      "functions": [
        "compute_diff",
        "_compare_nodes",
        "_compare_dicts",
        "format_diff_markdown",
        "format_diff_json",
        "_format_value"
      ],
      "imports": [
        "__future__.annotations",
        "copy",
        "json",
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple"
      ],
      "exports": [],
      "lines": 264
    },
    {
      "name": "fix",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "language": "python",
      "docstring": "Auto-fix helpers for the `sdd-validate` CLI.\n\nThis module translates validation findings into concrete fix actions that can\nbe previewed or applied directly to SDD spec JSON files.",
      "classes": [
        "FixAction",
        "FixReport"
      ],
      "functions": [
        "collect_fix_actions",
        "apply_fix_actions",
        "_build_counts_action",
        "_build_metadata_action",
        "_build_task_category_action",
        "_build_hierarchy_action",
        "_build_date_action",
        "_build_status_action",
        "_normalize_timestamp",
        "_resolve_node_id",
        "_normalize_status",
        "_build_missing_fields_action",
        "_build_empty_title_action",
        "_build_invalid_type_action",
        "_normalize_node_type",
        "_build_verification_type_action",
        "_build_bidirectional_deps_action",
        "_build_missing_deps_structure_action",
        "_build_leaf_count_action",
        "_build_orphan_action",
        "_build_placeholder_file_path_action"
      ],
      "imports": [
        "__future__.annotations",
        "re",
        "copy",
        "dataclasses.asdict",
        "dataclasses.dataclass",
        "dataclasses.field",
        "json",
        "datetime.datetime",
        "datetime.timezone",
        "pathlib.Path",
        "typing.Any",
        "typing.Callable",
        "typing.Dict",
        "typing.Iterable",
        "typing.List",
        "typing.Optional",
        "typing.Sequence",
        "typing.Set",
        "claude_skills.common.backup_json_spec",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.recalculate_progress",
        "claude_skills.common.save_json_spec",
        "claude_skills.common.validate_status",
        "claude_skills.common.validate_spec_hierarchy",
        "claude_skills.common.validation.EnhancedError",
        "claude_skills.common.validation.JsonSpecValidationResult",
        "claude_skills.sdd_plan.templates.infer_task_category",
        "claude_skills.sdd_validate.formatting.normalize_validation_result"
      ],
      "exports": [],
      "lines": 926
    },
    {
      "name": "formatting",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "language": "python",
      "docstring": "Output formatting utilities for the `sdd-validate` CLI.",
      "classes": [
        "NormalizedValidationResult"
      ],
      "functions": [
        "_category_from_field",
        "_collect_messages",
        "_merge_enhanced_issues",
        "normalize_validation_result",
        "format_validation_summary"
      ],
      "imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "dataclasses.field",
        "typing.Any",
        "typing.Dict",
        "typing.Iterable",
        "typing.List",
        "typing.Optional",
        "typing.Sequence",
        "typing.Tuple",
        "claude_skills.common.validation.EnhancedError",
        "claude_skills.common.validation.JsonSpecValidationResult"
      ],
      "exports": [],
      "lines": 199
    },
    {
      "name": "reporting",
      "file": "src/claude_skills/claude_skills/sdd_validate/reporting.py",
      "language": "python",
      "docstring": "Report generation helpers for the `sdd-validate` CLI.",
      "classes": [],
      "functions": [
        "generate_report"
      ],
      "imports": [
        "__future__.annotations",
        "typing.Any",
        "typing.Dict",
        "typing.Optional",
        "claude_skills.common.JsonSpecValidationResult",
        "claude_skills.sdd_validate.formatting.NormalizedValidationResult",
        "claude_skills.sdd_validate.formatting.normalize_validation_result"
      ],
      "exports": [],
      "lines": 133
    },
    {
      "name": "stats",
      "file": "src/claude_skills/claude_skills/sdd_validate/stats.py",
      "language": "python",
      "docstring": "Statistics helpers for the `sdd-validate` CLI.",
      "classes": [
        "SpecStatistics"
      ],
      "functions": [
        "calculate_statistics",
        "render_statistics"
      ],
      "imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "pathlib.Path",
        "typing.Any",
        "typing.Dict"
      ],
      "exports": [],
      "lines": 156
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/__init__.py",
      "language": "python",
      "docstring": "Test suite for SDD Python tools.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "language": "python",
      "docstring": "Pytest configuration and shared fixtures for SDD Python Tools tests.\n\nProvides fixtures for:\n- Sample spec files and JSON specs\n- Temporary directories\n- Mock filesystem operations\n- Common test data",
      "classes": [],
      "functions": [
        "create_sample_spec_content",
        "create_sample_spec_data",
        "ensure_json_spec",
        "ensure_json_spec_file",
        "write_spec_data",
        "temp_dir",
        "specs_structure",
        "sample_spec_simple",
        "sample_spec_complex",
        "sample_spec_invalid",
        "sample_json_spec_simple",
        "sample_json_spec_complex",
        "sample_json_spec_with_deps",
        "sample_json_spec_circular_deps",
        "sample_json_spec_with_blockers",
        "sample_json_spec_with_time",
        "sample_json_spec_completed",
        "valid_json_spec",
        "state_with_orphaned_nodes",
        "invalid_state_structure",
        "state_with_circular_deps_plan",
        "sample_node_project",
        "sample_python_project",
        "sample_frontmatter",
        "sample_task_data",
        "mock_printer",
        "assert_json_structure",
        "create_temp_spec_file",
        "create_temp_json_spec",
        "sample_spec_invalid_frontmatter",
        "sample_spec_invalid_phases"
      ],
      "imports": [
        "json",
        "copy",
        "pytest",
        "tempfile",
        "shutil",
        "pathlib.Path",
        "datetime.datetime",
        "typing.Dict",
        "typing.Any",
        "typing.Optional"
      ],
      "exports": [],
      "lines": 1120
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/integration/__init__.py",
      "language": "python",
      "docstring": "Integration tests for SDD Python tools.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "test_doc_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
      "language": "python",
      "docstring": "Integration tests for the unified doc CLI.",
      "classes": [],
      "functions": [
        "run_doc_cli",
        "test_doc_help_lists_key_subcommands",
        "test_doc_requires_subcommand"
      ],
      "imports": [
        "__future__.annotations",
        "os",
        "subprocess",
        "sys",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 41
    },
    {
      "name": "test_sdd_next_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "language": "python",
      "docstring": "Integration tests for sdd_next_tools.py CLI.\n\nTests all CLI commands with various arguments, JSON output, and error handling.\n\nNote: Tests updated to use unified CLI (sdd next) instead of legacy sdd-next.",
      "classes": [
        "TestCLIBasics",
        "TestVerifyToolsCommand",
        "TestFindSpecsCommand",
        "TestNextTaskCommand",
        "TestTaskInfoCommand",
        "TestCheckDepsCommand",
        "TestProgressCommand",
        "TestListPhasesCommand",
        "TestCLIWorkflows"
      ],
      "functions": [
        "run_cli"
      ],
      "imports": [
        "sys",
        "pytest",
        "subprocess",
        "json",
        "shutil",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 342
    },
    {
      "name": "test_sdd_update_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "language": "python",
      "docstring": "Integration tests for sdd_update_tools.py CLI.\n\nTests all query CLI commands with various arguments, JSON output, and error handling.\n\nNote: Tests updated to use unified CLI (sdd update) instead of legacy sdd-update.",
      "classes": [
        "TestCLIBasics",
        "TestQueryTasksCLI",
        "TestGetTaskCLI",
        "TestListPhasesCLI",
        "TestCheckCompleteCLI",
        "TestPhaseTimeCLI",
        "TestListBlockersCLI",
        "TestUpdatedCLICommands"
      ],
      "functions": [
        "run_cli"
      ],
      "imports": [
        "sys",
        "pytest",
        "subprocess",
        "json",
        "shutil",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 645
    },
    {
      "name": "test_sdd_validate_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "language": "python",
      "docstring": "Integration tests for sdd-validate CLI.\n\nNote: Tests updated to use unified CLI (sdd validate) instead of legacy sdd-validate.",
      "classes": [
        "TestValidateCommand",
        "TestFixCommand",
        "TestReportCommand",
        "TestStatsCommand",
        "TestCheckDepsCommand",
        "TestGlobalFlags",
        "TestErrorHandling"
      ],
      "functions": [
        "run_cli"
      ],
      "imports": [
        "json",
        "pytest",
        "subprocess",
        "sys",
        "shutil",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 375
    },
    {
      "name": "test_sdd_validate_new_features",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "language": "python",
      "docstring": "Integration tests for new sdd-validate features.",
      "classes": [],
      "functions": [
        "spec_with_issues",
        "test_collect_fix_actions_finds_multiple_issues",
        "test_apply_fix_actions_with_diff",
        "test_selective_fix_application",
        "test_new_fix_builders_work",
        "test_diff_computation"
      ],
      "imports": [
        "json",
        "tempfile",
        "pathlib.Path",
        "pytest",
        "claude_skills.sdd_validate.collect_fix_actions",
        "claude_skills.sdd_validate.apply_fix_actions",
        "claude_skills.sdd_validate.compute_diff",
        "claude_skills.sdd_validate.format_diff_markdown",
        "claude_skills.common.validate_spec_hierarchy"
      ],
      "exports": [],
      "lines": 206
    },
    {
      "name": "test_skills_dev_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
      "language": "python",
      "docstring": "Integration tests for the unified skills-dev CLI.",
      "classes": [],
      "functions": [
        "run_skills_dev_cli",
        "test_skills_dev_help_lists_key_subcommands",
        "test_skills_dev_requires_subcommand",
        "test_skills_dev_migrate_shows_guidance"
      ],
      "imports": [
        "__future__.annotations",
        "os",
        "subprocess",
        "sys",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 48
    },
    {
      "name": "test_task_category_workflow",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "language": "python",
      "docstring": "Integration tests for task_category workflow.\n\nTests the complete workflow of task categorization including:\n- Spec generation with task_category\n- Validation of categorized specs\n- Migration from old format to new format\n- Backward compatibility with uncategorized specs\n- sdd-next integration with categorized tasks",
      "classes": [],
      "functions": [
        "spec_with_all_categories",
        "spec_without_categories",
        "spec_with_mixed_categories",
        "spec_with_placeholder_paths",
        "test_validate_spec_with_all_categories",
        "test_validate_spec_without_categories",
        "test_validate_spec_with_invalid_category",
        "test_validate_mixed_format_spec",
        "test_migrate_old_spec_preserves_functionality",
        "test_migrate_placeholder_file_paths",
        "test_full_workflow_with_categories",
        "test_backward_compatibility_no_breaking_changes",
        "test_gradual_migration_path",
        "test_empty_task_category_field",
        "test_case_sensitivity_of_categories"
      ],
      "imports": [
        "json",
        "tempfile",
        "pathlib.Path",
        "pytest",
        "claude_skills.sdd_plan.templates.generate_spec_from_template",
        "claude_skills.common.hierarchy_validation.validate_spec_hierarchy",
        "claude_skills.sdd_validate.fix.collect_fix_actions",
        "claude_skills.sdd_validate.fix.apply_fix_actions"
      ],
      "exports": [],
      "lines": 657
    },
    {
      "name": "test_test_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
      "language": "python",
      "docstring": "Integration tests for the unified test CLI.",
      "classes": [],
      "functions": [
        "run_test_cli",
        "test_test_help_lists_key_subcommands",
        "test_test_requires_subcommand",
        "test_test_run_list_presets_success"
      ],
      "imports": [
        "__future__.annotations",
        "os",
        "subprocess",
        "sys",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 47
    },
    {
      "name": "test_unified_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "language": "python",
      "docstring": "Integration tests for unified SDD CLI.\n\nTests the unified `sdd` command with all subcommands (next, update, validate),\nglobal flags, error handling, and command delegation.",
      "classes": [
        "TestUnifiedCLIBasics",
        "TestNextCommands",
        "TestUpdateCommands",
        "TestValidateCommands",
        "TestGlobalFlags",
        "TestErrorHandling",
        "TestCommandDelegation",
        "TestBackwardsCompatibility",
        "TestColdStartPerformance"
      ],
      "functions": [
        "has_sdd_command",
        "run_sdd_command",
        "minimal_specs_dir",
        "sample_spec_file"
      ],
      "imports": [
        "sys",
        "pytest",
        "subprocess",
        "json",
        "shutil",
        "pathlib.Path"
      ],
      "exports": [],
      "lines": 369
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/__init__.py",
      "language": "python",
      "docstring": "Unit tests for SDD Python tools.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/__init__.py",
      "language": "python",
      "docstring": "Unit tests for code-doc skill.\n\nTests for framework detection, key file identification, layer detection,\nand AI consultation prompt formatting.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 6
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "language": "python",
      "docstring": "Pytest fixtures for code-doc tests.",
      "classes": [],
      "functions": [
        "sample_modules",
        "django_modules",
        "flask_modules",
        "plain_modules",
        "sample_statistics",
        "sample_framework_info",
        "sample_layers",
        "mock_subprocess_run",
        "mock_subprocess_run_failure",
        "temp_project_dir"
      ],
      "imports": [
        "pytest",
        "pathlib.Path",
        "unittest.mock.MagicMock"
      ],
      "exports": [],
      "lines": 254
    },
    {
      "name": "test_ai_consultation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "language": "python",
      "docstring": "Unit tests for code-doc AI consultation module.\n\nTests prompt formatting, tool detection, and multi-agent coordination.",
      "classes": [
        "TestPromptFormatting",
        "TestToolSelection",
        "TestConsultation",
        "TestRoutingMatrix",
        "TestPromptContentValidation"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "unittest.mock.MagicMock",
        "unittest.mock.patch",
        "claude_skills.code_doc.ai_consultation.format_architecture_research_prompt",
        "claude_skills.code_doc.ai_consultation.format_ai_context_research_prompt",
        "claude_skills.code_doc.ai_consultation.get_best_tool",
        "claude_skills.code_doc.ai_consultation.run_consultation",
        "claude_skills.code_doc.ai_consultation.DOC_TYPE_ROUTING"
      ],
      "exports": [],
      "lines": 226
    },
    {
      "name": "test_detectors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "language": "python",
      "docstring": "Unit tests for code-doc detectors module.\n\nTests framework detection, key file identification, layer detection,\nand context summary generation.",
      "classes": [
        "TestFrameworkDetection",
        "TestKeyFileIdentification",
        "TestLayerDetection",
        "TestReadingOrder",
        "TestReadmeExtraction",
        "TestContextSummary"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.detectors.detect_framework",
        "claude_skills.code_doc.detectors.identify_key_files",
        "claude_skills.code_doc.detectors.detect_layers",
        "claude_skills.code_doc.detectors.suggest_reading_order",
        "claude_skills.code_doc.detectors.extract_readme",
        "claude_skills.code_doc.detectors.create_context_summary"
      ],
      "exports": [],
      "lines": 312
    },
    {
      "name": "test_parsers_base",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
      "language": "python",
      "docstring": "Tests for base parser interface and data structures.",
      "classes": [
        "TestLanguageEnum",
        "TestParsedDataStructures",
        "TestParseResult",
        "TestBaseParser"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language",
        "claude_skills.code_doc.parsers.base.ParsedParameter",
        "claude_skills.code_doc.parsers.base.ParsedFunction",
        "claude_skills.code_doc.parsers.base.ParsedClass",
        "claude_skills.code_doc.parsers.base.ParsedModule",
        "claude_skills.code_doc.parsers.base.ParseResult",
        "claude_skills.code_doc.parsers.base.BaseParser"
      ],
      "exports": [],
      "lines": 171
    },
    {
      "name": "test_parsers_css",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py",
      "language": "python",
      "docstring": "Tests for CSS parser.",
      "classes": [
        "TestCSSParser",
        "TestCSSParserAdvanced"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language"
      ],
      "exports": [],
      "lines": 250
    },
    {
      "name": "test_parsers_factory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
      "language": "python",
      "docstring": "Tests for ParserFactory multi-language coordination.",
      "classes": [
        "TestParserFactory",
        "TestCreateParserFactory",
        "TestParserFactoryMultiLanguage"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language",
        "claude_skills.code_doc.parsers.factory.ParserFactory",
        "claude_skills.code_doc.parsers.factory.create_parser_factory"
      ],
      "exports": [],
      "lines": 238
    },
    {
      "name": "test_parsers_go",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_go.py",
      "language": "python",
      "docstring": "Tests for Go parser.",
      "classes": [
        "TestGoParser"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language"
      ],
      "exports": [],
      "lines": 190
    },
    {
      "name": "test_parsers_html",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py",
      "language": "python",
      "docstring": "Tests for HTML parser.",
      "classes": [
        "TestHTMLParser",
        "TestHTMLParserAdvanced"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language"
      ],
      "exports": [],
      "lines": 211
    },
    {
      "name": "test_parsers_javascript",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py",
      "language": "python",
      "docstring": "Tests for JavaScript/TypeScript parser.",
      "classes": [
        "TestJavaScriptParser",
        "TestTypeScriptParser"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language"
      ],
      "exports": [],
      "lines": 312
    },
    {
      "name": "test_parsers_python",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "language": "python",
      "docstring": "Tests for Python parser.",
      "classes": [
        "TestPythonParser",
        "TestPythonParserAdvanced",
        "TestPythonParserCrossReferences",
        "TestPythonParserDynamicPatterns",
        "TestSchemaEnhancements",
        "TestClassSchemaEnhancements"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.code_doc.parsers.base.Language",
        "claude_skills.code_doc.parsers.python.PythonParser"
      ],
      "exports": [],
      "lines": 1782
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/__init__.py",
      "language": "python",
      "docstring": "Unit tests for dev_tools modules.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "test_sdd_start_helper",
      "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
      "language": "python",
      "docstring": "Unit tests for sdd_start_helper.py enhanced session resumption features.\n\nTests the integration of get_session_state() in the sdd_start_helper script,\nspecifically the new get_session_info command and enhanced format_output.",
      "classes": [
        "TestGetSessionInfo",
        "TestFormatOutputEnhanced",
        "TestIntegrationWithGetSessionState"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "json",
        "sys",
        "pathlib.Path",
        "unittest.mock.patch",
        "unittest.mock.MagicMock",
        "io.StringIO",
        "sdd_start_helper"
      ],
      "exports": [],
      "lines": 308
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/__init__.py",
      "language": "python",
      "docstring": "Unit tests for doc_query package.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/conftest.py",
      "language": "python",
      "docstring": null,
      "classes": [],
      "functions": [
        "doc_query_samples"
      ],
      "imports": [
        "json",
        "pathlib.Path",
        "typing.Dict",
        "pytest"
      ],
      "exports": [],
      "lines": 115
    },
    {
      "name": "test_lib",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "language": "python",
      "docstring": null,
      "classes": [],
      "functions": [
        "test_normalizes_modern_payload",
        "test_normalizes_legacy_payload",
        "test_describe_module_returns_summary",
        "test_context_for_area_includes_docstrings_and_stats",
        "test_get_callers_with_v2_schema",
        "test_get_callers_exclude_file",
        "test_get_callers_exclude_line",
        "test_get_callers_function_not_found",
        "test_get_callers_no_callers",
        "test_get_callees_with_v2_schema",
        "test_get_callees_exclude_file",
        "test_get_callees_function_not_found",
        "test_get_call_count_with_value",
        "test_get_call_count_none",
        "test_get_call_count_function_not_found",
        "test_normalize_v2_schema_fields",
        "test_build_call_graph_callees_only",
        "test_build_call_graph_callers_only",
        "test_build_call_graph_both_directions",
        "test_build_call_graph_max_depth",
        "test_build_call_graph_handles_cycles",
        "test_build_call_graph_function_not_found",
        "test_build_call_graph_isolated_function",
        "test_build_call_graph_include_metadata",
        "test_build_call_graph_without_metadata",
        "test_build_call_graph_depth_values",
        "test_build_call_graph_invalid_direction",
        "test_apply_pattern_filter_exact_match",
        "test_apply_pattern_filter_exact_match_no_results",
        "test_apply_pattern_filter_regex_pattern",
        "test_apply_pattern_filter_regex_case_insensitive",
        "test_apply_pattern_filter_regex_complex_pattern",
        "test_apply_pattern_filter_invalid_regex",
        "test_apply_pattern_filter_empty_items",
        "test_apply_pattern_filter_custom_key_function",
        "test_apply_pattern_filter_custom_key_exact_match",
        "test_apply_pattern_filter_missing_key",
        "test_apply_pattern_filter_empty_string_values",
        "test_apply_pattern_filter_regex_empty_string",
        "test_apply_pattern_filter_key_func_exception",
        "test_apply_pattern_filter_preserves_item_structure",
        "test_apply_pattern_filter_multiple_matches"
      ],
      "imports": [
        "pytest",
        "claude_skills.doc_query.doc_query_lib.DocumentationQuery"
      ],
      "exports": [],
      "lines": 939
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/__init__.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common module.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "test_doc_helper",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common.doc_helper module.\n\nTests documentation integration functions: check_doc_query_available,\ncheck_sdd_integration_available, get_task_context_from_docs,\nshould_generate_docs, and ensure_documentation_exists.",
      "classes": [
        "TestCheckDocQueryAvailable",
        "TestCheckSddIntegrationAvailable",
        "TestGetTaskContextFromDocs",
        "TestShouldGenerateDocs",
        "TestEnsureDocumentationExists"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "unittest.mock.patch",
        "unittest.mock.Mock",
        "unittest.mock.MagicMock",
        "subprocess",
        "claude_skills.common.doc_helper.check_doc_query_available",
        "claude_skills.common.doc_helper.check_sdd_integration_available",
        "claude_skills.common.doc_helper.get_task_context_from_docs",
        "claude_skills.common.doc_helper.should_generate_docs",
        "claude_skills.common.doc_helper.ensure_documentation_exists"
      ],
      "exports": [],
      "lines": 289
    },
    {
      "name": "test_integrations",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common.integrations module.\n\nTests cross-skill integration functions: validate_spec_before_proceed,\nexecute_verify_task, and get_session_state.",
      "classes": [
        "TestValidateSpecBeforeProceed",
        "TestExecuteVerifyTask",
        "TestGetSessionState"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "unittest.mock.patch",
        "unittest.mock.Mock",
        "unittest.mock.MagicMock",
        "subprocess",
        "json",
        "pathlib.Path",
        "claude_skills.common.integrations.validate_spec_before_proceed",
        "claude_skills.common.integrations.execute_verify_task",
        "claude_skills.common.integrations.get_session_state",
        "claude_skills.common.validation.EnhancedError",
        "claude_skills.common.validation.JsonSpecValidationResult",
        "claude_skills.common.spec.load_json_spec"
      ],
      "exports": [],
      "lines": 792
    },
    {
      "name": "test_paths",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common.paths module.\n\nTests path utilities: find_specs_directory, validate_path.",
      "classes": [
        "TestFindSpecsDirectory",
        "TestValidatePath",
        "TestPathIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.common.find_specs_directory",
        "claude_skills.common.validate_path"
      ],
      "exports": [],
      "lines": 150
    },
    {
      "name": "test_printer",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common.printer module.\n\nTests PrettyPrinter class for formatted output.",
      "classes": [
        "TestPrettyPrinterInit",
        "TestPrettyPrinterMethods",
        "TestPrettyPrinterColorMode",
        "TestPrettyPrinterVerbosity",
        "TestPrettyPrinterFormatting",
        "TestPrettyPrinterIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "io.StringIO",
        "claude_skills.common.PrettyPrinter"
      ],
      "exports": [],
      "lines": 227
    },
    {
      "name": "test_progress",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "language": "python",
      "docstring": "Unit tests for sdd_common.progress module.\n\nTests progress calculation: recalculate_progress, update_parent_status,\nget_progress_summary, list_phases.",
      "classes": [
        "TestGetProgressSummary",
        "TestListPhases",
        "TestRecalculateProgress",
        "TestUpdateParentStatus",
        "TestProgressIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "claude_skills.common.recalculate_progress",
        "claude_skills.common.update_parent_status",
        "claude_skills.common.get_progress_summary",
        "claude_skills.common.list_phases",
        "claude_skills.common.load_json_spec"
      ],
      "exports": [],
      "lines": 212
    },
    {
      "name": "test_spec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "language": "python",
      "docstring": "Unit tests for ``claude_skills.common.spec`` module.",
      "classes": [
        "TestExtractFrontmatter",
        "TestLoadJsonSpec",
        "TestSaveJsonSpec",
        "TestBackupJsonSpec",
        "TestGetNode",
        "TestJsonSpecIntegration"
      ],
      "functions": [],
      "imports": [
        "json",
        "pathlib.Path",
        "pytest",
        "claude_skills.common.extract_frontmatter",
        "claude_skills.common.load_json_spec",
        "claude_skills.common.save_json_spec",
        "claude_skills.common.backup_json_spec",
        "claude_skills.common.get_node"
      ],
      "exports": [],
      "lines": 289
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/__init__.py",
      "language": "python",
      "docstring": "Unit tests for sdd-next operations.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/conftest.py",
      "language": "python",
      "docstring": "Pytest configuration for sdd-next tests.",
      "classes": [],
      "functions": [],
      "imports": [
        "pytest"
      ],
      "exports": [],
      "lines": 6
    },
    {
      "name": "test_discovery",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "language": "python",
      "docstring": "Unit tests for sdd-next discovery operations.\n\nTests: get_next_task, get_task_info, check_dependencies, prepare_task.",
      "classes": [
        "TestGetNextTask",
        "TestGetTaskInfo",
        "TestCheckDependencies",
        "TestPrepareTask",
        "TestDiscoveryIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_next.discovery.get_next_task",
        "claude_skills.sdd_next.discovery.get_task_info",
        "claude_skills.sdd_next.discovery.check_dependencies",
        "claude_skills.sdd_next.discovery.prepare_task",
        "claude_skills.common.load_json_spec"
      ],
      "exports": [],
      "lines": 272
    },
    {
      "name": "test_project",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "language": "python",
      "docstring": "Unit tests for sdd-next project analysis operations.\n\nTests: detect_project, find_tests, check_environment, find_related_files.",
      "classes": [
        "TestDetectProject",
        "TestFindTests",
        "TestCheckEnvironment",
        "TestFindRelatedFiles",
        "TestProjectIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_next.project.detect_project",
        "claude_skills.sdd_next.project.find_tests",
        "claude_skills.sdd_next.project.check_environment",
        "claude_skills.sdd_next.project.find_related_files"
      ],
      "exports": [],
      "lines": 259
    },
    {
      "name": "test_validation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
      "language": "python",
      "docstring": "Unit tests for sdd-next validation operations.\n\nTests: validate_spec, find_circular_deps, validate_paths, spec_stats.",
      "classes": [
        "TestValidateSpec",
        "TestFindCircularDeps",
        "TestValidatePaths",
        "TestSpecStats"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_next.validation.validate_spec",
        "claude_skills.sdd_next.validation.find_circular_deps",
        "claude_skills.sdd_next.validation.validate_paths",
        "claude_skills.sdd_next.validation.spec_stats",
        "claude_skills.common.load_json_spec"
      ],
      "exports": [],
      "lines": 164
    },
    {
      "name": "test_workflow",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
      "language": "python",
      "docstring": "Unit tests for sdd-next workflow operations.",
      "classes": [
        "TestInitEnvironment",
        "TestFindPattern"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_next.workflow.init_environment",
        "claude_skills.sdd_next.workflow.find_pattern"
      ],
      "exports": [],
      "lines": 44
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/__init__.py",
      "language": "python",
      "docstring": "Unit tests for sdd-plan operations.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/conftest.py",
      "language": "python",
      "docstring": "Pytest configuration for sdd-plan tests.",
      "classes": [],
      "functions": [],
      "imports": [
        "pytest"
      ],
      "exports": [],
      "lines": 6
    },
    {
      "name": "test_hierarchy_validation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "language": "python",
      "docstring": "Unit tests for sdd-plan hierarchy validation operations.\n\nTests: validate_structure, validate_hierarchy, validate_nodes, validate_task_counts,\nvalidate_dependencies, validate_metadata, validate_spec_hierarchy.",
      "classes": [
        "TestValidateStructure",
        "TestValidateHierarchy",
        "TestValidateNodes",
        "TestValidateTaskCounts",
        "TestValidateDependencies",
        "TestValidateMetadata",
        "TestValidateJsonSpec",
        "TestJsonSpecValidationIntegration"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "json",
        "pathlib.Path",
        "claude_skills.common.hierarchy_validation.validate_structure",
        "claude_skills.common.hierarchy_validation.validate_hierarchy",
        "claude_skills.common.hierarchy_validation.validate_nodes",
        "claude_skills.common.hierarchy_validation.validate_task_counts",
        "claude_skills.common.hierarchy_validation.validate_dependencies",
        "claude_skills.common.hierarchy_validation.validate_metadata",
        "claude_skills.common.hierarchy_validation.validate_spec_hierarchy"
      ],
      "exports": [],
      "lines": 580
    },
    {
      "name": "test_templates",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
      "language": "python",
      "docstring": "Unit tests for sdd_plan.templates module.\n\nTests template management and task category inference.",
      "classes": [
        "TestInferTaskCategory",
        "TestTemplates",
        "TestGenerateSpecWithCategory"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "claude_skills.sdd_plan.templates.infer_task_category",
        "claude_skills.sdd_plan.templates.list_templates",
        "claude_skills.sdd_plan.templates.get_template"
      ],
      "exports": [],
      "lines": 234
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/__init__.py",
      "language": "python",
      "docstring": "Unit tests for sdd-update.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "conftest",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/conftest.py",
      "language": "python",
      "docstring": "Pytest configuration for sdd-update tests.",
      "classes": [],
      "functions": [],
      "imports": [
        "pytest"
      ],
      "exports": [],
      "lines": 6
    },
    {
      "name": "test_journal",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
      "language": "python",
      "docstring": "Tests for journal.py - JSON-only journal and metadata operations.",
      "classes": [
        "TestAddJournalEntry",
        "TestUpdateMetadata",
        "TestAddRevisionEntry",
        "TestSyncMetadataFromState"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "json",
        "pathlib.Path",
        "datetime.datetime",
        "claude_skills.sdd_update.journal.add_journal_entry",
        "claude_skills.sdd_update.journal.add_revision_entry",
        "claude_skills.sdd_update.journal.bulk_journal_tasks",
        "claude_skills.sdd_update.journal.sync_metadata_from_state",
        "claude_skills.sdd_update.journal.update_metadata",
        "claude_skills.common.spec.load_json_spec"
      ],
      "exports": [],
      "lines": 404
    },
    {
      "name": "test_lifecycle",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
      "language": "python",
      "docstring": "Tests for lifecycle.py - JSON-only lifecycle management operations.",
      "classes": [
        "TestMoveSpec",
        "TestCompleteSpec"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "json",
        "pathlib.Path",
        "claude_skills.sdd_update.lifecycle.move_spec",
        "claude_skills.sdd_update.lifecycle.complete_spec",
        "claude_skills.common.spec.load_json_spec",
        "claude_skills.common.spec.save_json_spec"
      ],
      "exports": [],
      "lines": 282
    },
    {
      "name": "test_query_operations",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "language": "python",
      "docstring": "Unit tests for sdd-update query operations.\n\nTests query_tasks, get_task, list_phases, check_complete, phase_time, and list_blockers.",
      "classes": [
        "TestQueryTasks",
        "TestGetTask",
        "TestListPhases",
        "TestCheckComplete",
        "TestPhaseTime",
        "TestListBlockers",
        "TestGetJournalEntries",
        "TestGetTaskJournal",
        "TestGetTaskWithJournal"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_update.query.query_tasks",
        "claude_skills.sdd_update.query.get_task",
        "claude_skills.sdd_update.query.list_phases",
        "claude_skills.sdd_update.query.check_complete",
        "claude_skills.sdd_update.query.phase_time",
        "claude_skills.sdd_update.query.list_blockers",
        "claude_skills.common.query_operations.get_journal_entries",
        "claude_skills.common.query_operations.get_task_journal"
      ],
      "exports": [],
      "lines": 906
    },
    {
      "name": "test_verification",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
      "language": "python",
      "docstring": "Tests for verification.py - JSON-only verification result operations.",
      "classes": [
        "TestAddVerificationResult",
        "TestFormatVerificationSummary"
      ],
      "functions": [],
      "imports": [
        "pytest",
        "pathlib.Path",
        "claude_skills.sdd_update.verification.add_verification_result",
        "claude_skills.sdd_update.verification.format_verification_summary",
        "claude_skills.common.spec.load_json_spec"
      ],
      "exports": [],
      "lines": 314
    },
    {
      "name": "__init__",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/__init__.py",
      "language": "python",
      "docstring": "Tests for sdd-validate CLI and helpers.",
      "classes": [],
      "functions": [],
      "imports": [],
      "exports": [],
      "lines": 1
    },
    {
      "name": "test_fix",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "language": "python",
      "docstring": "Unit tests for sdd_validate.fix module.",
      "classes": [],
      "functions": [
        "test_collect_fix_actions_empty",
        "test_collect_fix_actions_with_enhanced_errors",
        "test_build_counts_action",
        "test_build_metadata_action",
        "test_build_metadata_action_verify",
        "test_build_task_category_action",
        "test_build_task_category_action_investigation",
        "test_build_hierarchy_action",
        "test_build_date_action",
        "test_build_status_action",
        "test_normalize_timestamp",
        "test_normalize_status",
        "test_apply_fix_actions_dry_run",
        "test_apply_fix_actions_real_apply",
        "test_apply_fix_actions_handles_errors",
        "test_collect_fix_actions_deduplicates",
        "test_build_placeholder_file_path_action_category_name",
        "test_build_placeholder_file_path_action_tbd",
        "test_build_placeholder_file_path_action_case_insensitive",
        "test_build_placeholder_file_path_action_all_placeholders",
        "test_build_placeholder_file_path_action_non_placeholder",
        "test_build_placeholder_file_path_action_no_file_path",
        "test_build_placeholder_file_path_action_subtask",
        "test_build_placeholder_file_path_action_non_task_node",
        "test_build_placeholder_file_path_action_preserves_existing_category",
        "test_build_placeholder_file_path_action_whitespace",
        "test_build_placeholder_file_path_action_tbd_maps_to_decision",
        "test_build_placeholder_file_path_action_category_mapping",
        "test_build_placeholder_file_path_action_generic_placeholder_uses_title",
        "test_build_placeholder_file_path_action_preview_shows_category"
      ],
      "imports": [
        "json",
        "pytest",
        "pathlib.Path",
        "unittest.mock.patch",
        "unittest.mock.mock_open",
        "claude_skills.common.validation.EnhancedError",
        "claude_skills.common.validation.JsonSpecValidationResult",
        "claude_skills.sdd_validate.fix.collect_fix_actions",
        "claude_skills.sdd_validate.fix.apply_fix_actions",
        "claude_skills.sdd_validate.fix.FixAction",
        "claude_skills.sdd_validate.fix.FixReport",
        "claude_skills.sdd_validate.fix._build_counts_action",
        "claude_skills.sdd_validate.fix._build_metadata_action",
        "claude_skills.sdd_validate.fix._build_task_category_action",
        "claude_skills.sdd_validate.fix._build_placeholder_file_path_action",
        "claude_skills.sdd_validate.fix._build_hierarchy_action",
        "claude_skills.sdd_validate.fix._build_date_action",
        "claude_skills.sdd_validate.fix._build_status_action",
        "claude_skills.sdd_validate.fix._normalize_timestamp",
        "claude_skills.sdd_validate.fix._normalize_status"
      ],
      "exports": [],
      "lines": 1116
    },
    {
      "name": "test_formatting",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "language": "python",
      "docstring": "Unit tests for sdd_validate.formatting module.",
      "classes": [],
      "functions": [
        "test_normalize_validation_result_clean",
        "test_normalize_validation_result_with_errors",
        "test_normalize_validation_result_with_warnings",
        "test_format_validation_summary_basic",
        "test_format_validation_summary_verbose",
        "test_normalized_validation_result_properties"
      ],
      "imports": [
        "pytest",
        "claude_skills.common.validation.JsonSpecValidationResult",
        "claude_skills.sdd_validate.formatting.normalize_validation_result",
        "claude_skills.sdd_validate.formatting.format_validation_summary",
        "claude_skills.sdd_validate.formatting.NormalizedValidationResult"
      ],
      "exports": [],
      "lines": 142
    },
    {
      "name": "test_reporting",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "language": "python",
      "docstring": "Unit tests for sdd_validate.reporting module.",
      "classes": [],
      "functions": [
        "test_generate_report_markdown_clean",
        "test_generate_report_markdown_with_errors",
        "test_generate_report_markdown_with_warnings",
        "test_generate_report_json_clean",
        "test_generate_report_json_with_errors",
        "test_generate_report_with_stats",
        "test_generate_report_with_stats_json",
        "test_generate_report_with_dependencies_cycles",
        "test_generate_report_with_dependencies_orphaned",
        "test_generate_report_with_dependencies_deadlocks",
        "test_generate_report_with_dependencies_bottlenecks",
        "test_generate_report_with_dependencies_all_types",
        "test_generate_report_with_dependencies_json",
        "test_generate_report_legacy_dependency_keys",
        "test_generate_report_mixed_dependency_keys",
        "test_generate_report_invalid_format",
        "test_generate_report_empty_dependency_analysis"
      ],
      "imports": [
        "json",
        "pytest",
        "claude_skills.common.validation.JsonSpecValidationResult",
        "claude_skills.sdd_validate.reporting.generate_report"
      ],
      "exports": [],
      "lines": 370
    },
    {
      "name": "test_stats",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "language": "python",
      "docstring": "Unit tests for sdd_validate.stats module.",
      "classes": [],
      "functions": [
        "test_calculate_statistics_basic",
        "test_calculate_statistics_with_verifications",
        "test_calculate_statistics_empty_hierarchy",
        "test_calculate_statistics_status_counts",
        "test_render_statistics_text",
        "test_render_statistics_json"
      ],
      "imports": [
        "json",
        "pytest",
        "claude_skills.sdd_validate.stats.calculate_statistics",
        "claude_skills.sdd_validate.stats.render_statistics",
        "claude_skills.sdd_validate.stats.SpecStatistics"
      ],
      "exports": [],
      "lines": 220
    }
  ],
  "classes": [
    {
      "name": "ReferenceType",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 14,
      "language": "python",
      "docstring": "Types of cross-references that can be tracked.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "DynamicPattern",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 23,
      "language": "python",
      "docstring": "Dynamic patterns that may affect cross-reference accuracy.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "CallSite",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 34,
      "language": "python",
      "docstring": "Represents a location where a function/method is called.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 222,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "InstantiationSite",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 46,
      "language": "python",
      "docstring": "Represents a location where a class is instantiated.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 205,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "DynamicPatternWarning",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 56,
      "language": "python",
      "docstring": "Warning about a dynamic pattern that may affect accuracy.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "visit_FunctionDef",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 98,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_FunctionDef"
          ]
        },
        {
          "instantiator": "visit_AsyncFunctionDef",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 119,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_AsyncFunctionDef"
          ]
        },
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 153,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        },
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 165,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        },
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 177,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        },
        {
          "instantiator": "visit_Call",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 189,
          "context": [
            "PythonParser",
            "_CallTracker",
            "visit_Call"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 6
    },
    {
      "name": "CrossReferenceGraph",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 66,
      "language": "python",
      "docstring": "Bidirectional graph tracking caller/callee relationships and\nclass instantiations across the codebase.",
      "bases": [],
      "methods": [
        "__init__",
        "add_call",
        "add_instantiation",
        "add_import",
        "add_warning",
        "get_callers",
        "get_callees",
        "get_instantiation_sites",
        "get_instantiators",
        "get_imported_by",
        "get_imports",
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "create_cross_reference_graph",
          "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
          "line": 324,
          "context": [
            "create_cross_reference_graph"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "MarkdownGenerator",
      "file": "src/claude_skills/claude_skills/code_doc/formatter.py",
      "line": 18,
      "language": "python",
      "docstring": "Generates Markdown documentation.",
      "bases": [],
      "methods": [
        "__init__",
        "generate",
        "_header",
        "_statistics",
        "_language_breakdown",
        "_classes",
        "_functions",
        "_dependencies"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 76,
          "context": [
            "DocumentationGenerator",
            "__init__"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "JSONGenerator",
      "file": "src/claude_skills/claude_skills/code_doc/formatter.py",
      "line": 201,
      "language": "python",
      "docstring": "Generates JSON documentation.",
      "bases": [],
      "methods": [
        "__init__",
        "generate"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 77,
          "context": [
            "DocumentationGenerator",
            "__init__"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "DocumentationGenerator",
      "file": "src/claude_skills/claude_skills/code_doc/generator.py",
      "line": 39,
      "language": "python",
      "docstring": "Main orchestrator for documentation generation.\nCoordinates all stages: parsing, analysis, calculation, and formatting.\nSupports multiple programming languages.",
      "bases": [],
      "methods": [
        "__init__",
        "generate",
        "_convert_parse_result",
        "save_markdown",
        "save_json",
        "generate_all"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 136,
          "context": [
            "cmd_generate"
          ]
        },
        {
          "instantiator": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 292,
          "context": [
            "cmd_analyze_with_ai"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 2
    },
    {
      "name": "CodebaseAnalyzer",
      "file": "src/claude_skills/claude_skills/code_doc/parser.py",
      "line": 12,
      "language": "python",
      "docstring": "Analyzes Python codebase and extracts structure.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze",
        "_find_python_files",
        "_analyze_file",
        "_extract_class",
        "_extract_function",
        "_extract_imports",
        "_get_name",
        "_create_result"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "Language",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 15,
      "language": "python",
      "docstring": "Supported programming languages.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "from_extension"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/css.py",
          "line": 51,
          "context": [
            "CSSParser",
            "__init__"
          ]
        },
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 53,
          "context": [
            "GoParser",
            "__init__"
          ]
        },
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/html.py",
          "line": 51,
          "context": [
            "HTMLParser",
            "__init__"
          ]
        },
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 54,
          "context": [
            "JavaScriptParser",
            "__init__"
          ]
        },
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 55,
          "context": [
            "JavaScriptParser",
            "__init__"
          ]
        },
        {
          "instantiator": "test_language_from_string",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 32,
          "context": [
            "TestLanguageEnum",
            "test_language_from_string"
          ]
        },
        {
          "instantiator": "test_language_from_string",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 33,
          "context": [
            "TestLanguageEnum",
            "test_language_from_string"
          ]
        },
        {
          "instantiator": "test_language_from_string",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 34,
          "context": [
            "TestLanguageEnum",
            "test_language_from_string"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 8
    },
    {
      "name": "ParsedParameter",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 52,
      "language": "python",
      "docstring": "Represents a function/method parameter.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 244,
          "context": [
            "GoParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "_extract_method",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 279,
          "context": [
            "GoParser",
            "_extract_method"
          ]
        },
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 214,
          "context": [
            "JavaScriptParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "_extract_variable_functions",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 257,
          "context": [
            "JavaScriptParser",
            "_extract_variable_functions"
          ]
        },
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 425,
          "context": [
            "PythonParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "test_parsed_parameter_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 42,
          "context": [
            "TestParsedDataStructures",
            "test_parsed_parameter_creation"
          ]
        },
        {
          "instantiator": "test_parsed_function_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 55,
          "context": [
            "TestParsedDataStructures",
            "test_parsed_function_creation"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 7
    },
    {
      "name": "ParsedFunction",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 60,
      "language": "python",
      "docstring": "Represents a function or method in any language.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 246,
          "context": [
            "GoParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "_extract_method",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 281,
          "context": [
            "GoParser",
            "_extract_method"
          ]
        },
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 223,
          "context": [
            "JavaScriptParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "_extract_variable_functions",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 268,
          "context": [
            "JavaScriptParser",
            "_extract_variable_functions"
          ]
        },
        {
          "instantiator": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 440,
          "context": [
            "PythonParser",
            "_extract_function"
          ]
        },
        {
          "instantiator": "test_parsed_function_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 49,
          "context": [
            "TestParsedDataStructures",
            "test_parsed_function_creation"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 6
    },
    {
      "name": "ParsedClass",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 102,
      "language": "python",
      "docstring": "Represents a class, struct, or interface in any language.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_extract_struct",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 192,
          "context": [
            "GoParser",
            "_extract_struct"
          ]
        },
        {
          "instantiator": "_extract_interface",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 217,
          "context": [
            "GoParser",
            "_extract_interface"
          ]
        },
        {
          "instantiator": "_extract_class",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 184,
          "context": [
            "JavaScriptParser",
            "_extract_class"
          ]
        },
        {
          "instantiator": "_extract_class",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 400,
          "context": [
            "PythonParser",
            "_extract_class"
          ]
        },
        {
          "instantiator": "test_parsed_class_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 69,
          "context": [
            "TestParsedDataStructures",
            "test_parsed_class_creation"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 5
    },
    {
      "name": "ParsedModule",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 134,
      "language": "python",
      "docstring": "Represents a module, file, or compilation unit.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/css.py",
          "line": 87,
          "context": [
            "CSSParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 89,
          "context": [
            "GoParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/html.py",
          "line": 95,
          "context": [
            "HTMLParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 97,
          "context": [
            "JavaScriptParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 321,
          "context": [
            "PythonParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "test_parsed_module_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 87,
          "context": [
            "TestParsedDataStructures",
            "test_parsed_module_creation"
          ]
        },
        {
          "instantiator": "test_parse_result_with_data",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 117,
          "context": [
            "TestParseResult",
            "test_parse_result_with_data"
          ]
        },
        {
          "instantiator": "test_parse_result_merge",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 137,
          "context": [
            "TestParseResult",
            "test_parse_result_merge"
          ]
        },
        {
          "instantiator": "test_parse_result_merge",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 144,
          "context": [
            "TestParseResult",
            "test_parse_result_merge"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 9
    },
    {
      "name": "ParseResult",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 164,
      "language": "python",
      "docstring": "Result of parsing a file or codebase.",
      "bases": [],
      "methods": [
        "to_dict",
        "merge"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parse_all",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
          "line": 324,
          "context": [
            "BaseParser",
            "parse_all"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/css.py",
          "line": 74,
          "context": [
            "CSSParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_all",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 119,
          "context": [
            "ParserFactory",
            "parse_all"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 154,
          "context": [
            "ParserFactory",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 160,
          "context": [
            "ParserFactory",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
          "line": 76,
          "context": [
            "GoParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/html.py",
          "line": 82,
          "context": [
            "HTMLParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
          "line": 79,
          "context": [
            "JavaScriptParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 307,
          "context": [
            "PythonParser",
            "parse_file"
          ]
        },
        {
          "instantiator": "test_empty_parse_result",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 109,
          "context": [
            "TestParseResult",
            "test_empty_parse_result"
          ]
        },
        {
          "instantiator": "test_parse_result_with_data",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 128,
          "context": [
            "TestParseResult",
            "test_parse_result_with_data"
          ]
        },
        {
          "instantiator": "test_parse_result_merge",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 136,
          "context": [
            "TestParseResult",
            "test_parse_result_merge"
          ]
        },
        {
          "instantiator": "test_parse_result_merge",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 143,
          "context": [
            "TestParseResult",
            "test_parse_result_merge"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 13
    },
    {
      "name": "BaseParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/base.py",
      "line": 252,
      "language": "python",
      "docstring": "Abstract base class for language-specific parsers.\n\nAll language parsers must inherit from this class and implement\nthe required abstract methods.",
      "bases": [
        "ABC"
      ],
      "methods": [
        "__init__",
        "parse_file",
        "find_files",
        "parse_all",
        "_should_exclude",
        "_get_relative_path"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "test_base_parser_is_abstract",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
          "line": 164,
          "context": [
            "TestBaseParser",
            "test_base_parser_is_abstract"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "CSSParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/css.py",
      "line": 38,
      "language": "python",
      "docstring": "Parser for CSS files using tree-sitter.",
      "bases": [
        "BaseParser"
      ],
      "methods": [
        "__init__",
        "parse_file",
        "_extract_css_structure",
        "_count_selectors",
        "_extract_at_rule_name",
        "_get_node_text"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py",
          "line": 23,
          "context": [
            "TestCSSParser",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py",
          "line": 176,
          "context": [
            "TestCSSParserAdvanced",
            "parser"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 2
    },
    {
      "name": "ParserFactory",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
      "line": 15,
      "language": "python",
      "docstring": "Factory for creating and managing language-specific parsers.\n\nAutomatically detects languages in a project and coordinates\nparsing across multiple languages.",
      "bases": [],
      "methods": [
        "__init__",
        "register_parser",
        "detect_languages",
        "get_parser",
        "parse_all",
        "parse_file",
        "get_language_statistics",
        "_should_exclude",
        "_print_summary"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "create_parser_factory",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 304,
          "context": [
            "create_parser_factory"
          ]
        },
        {
          "instantiator": "test_factory_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 16,
          "context": [
            "TestParserFactory",
            "test_factory_creation"
          ]
        },
        {
          "instantiator": "test_factory_with_languages_filter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 24,
          "context": [
            "TestParserFactory",
            "test_factory_with_languages_filter"
          ]
        },
        {
          "instantiator": "test_factory_with_exclude_patterns",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 30,
          "context": [
            "TestParserFactory",
            "test_factory_with_exclude_patterns"
          ]
        },
        {
          "instantiator": "test_detect_languages_empty_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 35,
          "context": [
            "TestParserFactory",
            "test_detect_languages_empty_project"
          ]
        },
        {
          "instantiator": "test_detect_languages_python_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 45,
          "context": [
            "TestParserFactory",
            "test_detect_languages_python_project"
          ]
        },
        {
          "instantiator": "test_detect_languages_multi_language_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 58,
          "context": [
            "TestParserFactory",
            "test_detect_languages_multi_language_project"
          ]
        },
        {
          "instantiator": "test_parse_all_empty_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 95,
          "context": [
            "TestParserFactory",
            "test_parse_all_empty_project"
          ]
        },
        {
          "instantiator": "test_parse_all_with_language_filter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 130,
          "context": [
            "TestParserFactory",
            "test_parse_all_with_language_filter"
          ]
        },
        {
          "instantiator": "test_parse_all_respects_exclude_patterns",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 147,
          "context": [
            "TestParserFactory",
            "test_parse_all_respects_exclude_patterns"
          ]
        },
        {
          "instantiator": "test_verbose_output",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 233,
          "context": [
            "TestParserFactoryMultiLanguage",
            "test_verbose_output"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 11
    },
    {
      "name": "GoParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/go.py",
      "line": 40,
      "language": "python",
      "docstring": "Parser for Go files using tree-sitter.",
      "bases": [
        "BaseParser"
      ],
      "methods": [
        "__init__",
        "parse_file",
        "_extract_package_name",
        "_extract_type_declaration",
        "_extract_struct",
        "_extract_interface",
        "_extract_function",
        "_extract_method",
        "_extract_imports",
        "_extract_import_path",
        "_estimate_complexity",
        "_get_node_text"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_go.py",
          "line": 23,
          "context": [
            "TestGoParser",
            "parser"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "HTMLParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/html.py",
      "line": 38,
      "language": "python",
      "docstring": "Parser for HTML files using tree-sitter.",
      "bases": [
        "BaseParser"
      ],
      "methods": [
        "__init__",
        "parse_file",
        "_extract_html_structure",
        "_extract_attributes",
        "_get_node_text"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py",
          "line": 23,
          "context": [
            "TestHTMLParser",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py",
          "line": 147,
          "context": [
            "TestHTMLParserAdvanced",
            "parser"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 2
    },
    {
      "name": "JavaScriptParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/javascript.py",
      "line": 41,
      "language": "python",
      "docstring": "Parser for JavaScript and TypeScript files using tree-sitter.",
      "bases": [
        "BaseParser"
      ],
      "methods": [
        "__init__",
        "parse_file",
        "_extract_class",
        "_extract_function",
        "_extract_variable_functions",
        "_extract_imports",
        "_extract_exports",
        "_is_exported",
        "_estimate_complexity",
        "_get_node_text"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py",
          "line": 23,
          "context": [
            "TestJavaScriptParser",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py",
          "line": 233,
          "context": [
            "TestTypeScriptParser",
            "parser"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 2
    },
    {
      "name": "PythonParser",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
      "line": 34,
      "language": "python",
      "docstring": "Parser for Python source files using AST analysis.",
      "bases": [
        "BaseParser"
      ],
      "methods": [
        "parse_file",
        "_extract_class",
        "_extract_function",
        "_extract_imports",
        "_get_name"
      ],
      "properties": [
        "language",
        "file_extensions"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 17,
          "context": [
            "TestPythonParser",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 258,
          "context": [
            "TestPythonParserAdvanced",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 320,
          "context": [
            "TestPythonParserCrossReferences",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 862,
          "context": [
            "TestPythonParserDynamicPatterns",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1115,
          "context": [
            "TestSchemaEnhancements",
            "parser"
          ]
        },
        {
          "instantiator": "parser",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1425,
          "context": [
            "TestClassSchemaEnhancements",
            "parser"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 6
    },
    {
      "name": "CallReference",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "line": 108,
      "language": "python",
      "docstring": "Represents a reference to a function call.\n\nThis structure is used to represent both:\n- callers: functions that call this function\n- calls: functions called by this function\n\nAttributes:\n    name: Name of the function\n    file: File path where the function is defined/called\n    line: Line number of the call site or definition\n    call_type: Type of call (e.g., \"function_call\", \"method_call\",\n               \"class_instantiation\")\n\nExample:\n    >>> ref = CallReference(\n    ...     name=\"process_data\",\n    ...     file=\"src/utils.py\",\n    ...     line=42,\n    ...     call_type=\"function_call\"\n    ... )\n    >>> ref.to_dict()\n    {'name': 'process_data', 'file': 'src/utils.py', 'line': 42,\n     'call_type': 'function_call'}",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 126,
          "context": [
            "DocumentationGenerator",
            "_convert_parse_result"
          ]
        },
        {
          "instantiator": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 138,
          "context": [
            "DocumentationGenerator",
            "_convert_parse_result"
          ]
        },
        {
          "instantiator": "test_call_reference_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1121,
          "context": [
            "TestSchemaEnhancements",
            "test_call_reference_creation"
          ]
        },
        {
          "instantiator": "test_call_reference_to_dict",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1137,
          "context": [
            "TestSchemaEnhancements",
            "test_call_reference_to_dict"
          ]
        },
        {
          "instantiator": "test_enhance_function_with_callers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1167,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_with_callers"
          ]
        },
        {
          "instantiator": "test_enhance_function_with_callers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1168,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_with_callers"
          ]
        },
        {
          "instantiator": "test_enhance_function_with_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1195,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_with_calls"
          ]
        },
        {
          "instantiator": "test_enhance_function_with_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1196,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_with_calls"
          ]
        },
        {
          "instantiator": "test_enhance_function_preserves_base_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1258,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_preserves_base_fields"
          ]
        },
        {
          "instantiator": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1335,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1336,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1339,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1340,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1341,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_function_complete_example"
          ]
        },
        {
          "instantiator": "test_call_reference_different_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1384,
          "context": [
            "TestSchemaEnhancements",
            "test_call_reference_different_types"
          ]
        },
        {
          "instantiator": "test_call_reference_different_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1388,
          "context": [
            "TestSchemaEnhancements",
            "test_call_reference_different_types"
          ]
        },
        {
          "instantiator": "test_call_reference_different_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1392,
          "context": [
            "TestSchemaEnhancements",
            "test_call_reference_different_types"
          ]
        },
        {
          "instantiator": "test_enhance_with_method_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1409,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_with_method_calls"
          ]
        },
        {
          "instantiator": "test_enhance_with_method_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1410,
          "context": [
            "TestSchemaEnhancements",
            "test_enhance_with_method_calls"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 19
    },
    {
      "name": "InstantiationReference",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "line": 214,
      "language": "python",
      "docstring": "Represents a location where a class is instantiated.\n\nUsed to track where classes are being used/constructed throughout\nthe codebase, enabling reverse lookup from class to instantiation sites.\n\nAttributes:\n    instantiator: Name of function/method creating the instance\n    file: File containing the instantiation\n    line: Line number of instantiation\n    context: Optional context (e.g., \"module\", \"function\", \"method\")\n\nExample:\n    >>> ref = InstantiationReference(\n    ...     instantiator=\"create_user\",\n    ...     file=\"services/user.py\",\n    ...     line=42,\n    ...     context=\"function\"\n    ... )\n    >>> ref.to_dict()\n    {'instantiator': 'create_user', 'file': 'services/user.py',\n     'line': 42, 'context': 'function'}",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 166,
          "context": [
            "DocumentationGenerator",
            "_convert_parse_result"
          ]
        },
        {
          "instantiator": "test_instantiation_reference_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1431,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_reference_creation"
          ]
        },
        {
          "instantiator": "test_instantiation_reference_to_dict",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1447,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_reference_to_dict"
          ]
        },
        {
          "instantiator": "test_instantiation_reference_without_context",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1465,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_reference_without_context"
          ]
        },
        {
          "instantiator": "test_enhance_class_with_instantiated_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1547,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_with_instantiated_by"
          ]
        },
        {
          "instantiator": "test_enhance_class_with_instantiated_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1548,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_with_instantiated_by"
          ]
        },
        {
          "instantiator": "test_enhance_class_preserves_base_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1641,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_preserves_base_fields"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1718,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1719,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1720,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_instantiation_context_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1773,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_context_types"
          ]
        },
        {
          "instantiator": "test_instantiation_context_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1777,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_context_types"
          ]
        },
        {
          "instantiator": "test_instantiation_context_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1781,
          "context": [
            "TestClassSchemaEnhancements",
            "test_instantiation_context_types"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 13
    },
    {
      "name": "ImportReference",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "line": 256,
      "language": "python",
      "docstring": "Represents a location where a class/module is imported.\n\nTracks import statements to enable dependency analysis and\nunderstand how classes/modules are being used across the codebase.\n\nAttributes:\n    importer: File that imports the class/module\n    line: Line number of import statement\n    import_type: Type of import (\"direct\", \"from\", \"dynamic\")\n    alias: Optional import alias (e.g., \"import pandas as pd\")\n\nExample:\n    >>> ref = ImportReference(\n    ...     importer=\"app.py\",\n    ...     line=5,\n    ...     import_type=\"from\",\n    ...     alias=\"User\"\n    ... )\n    >>> ref.to_dict()\n    {'importer': 'app.py', 'line': 5, 'import_type': 'from',\n     'alias': 'User'}",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 179,
          "context": [
            "DocumentationGenerator",
            "_convert_parse_result"
          ]
        },
        {
          "instantiator": "test_import_reference_creation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1483,
          "context": [
            "TestClassSchemaEnhancements",
            "test_import_reference_creation"
          ]
        },
        {
          "instantiator": "test_import_reference_to_dict",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1499,
          "context": [
            "TestClassSchemaEnhancements",
            "test_import_reference_to_dict"
          ]
        },
        {
          "instantiator": "test_import_reference_without_alias",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1517,
          "context": [
            "TestClassSchemaEnhancements",
            "test_import_reference_without_alias"
          ]
        },
        {
          "instantiator": "test_enhance_class_with_imported_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1575,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_with_imported_by"
          ]
        },
        {
          "instantiator": "test_enhance_class_with_imported_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1576,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_with_imported_by"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1723,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1724,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1725,
          "context": [
            "TestClassSchemaEnhancements",
            "test_enhance_class_complete_example"
          ]
        },
        {
          "instantiator": "test_different_import_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1757,
          "context": [
            "TestClassSchemaEnhancements",
            "test_different_import_types"
          ]
        },
        {
          "instantiator": "test_different_import_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1761,
          "context": [
            "TestClassSchemaEnhancements",
            "test_different_import_types"
          ]
        },
        {
          "instantiator": "test_different_import_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1765,
          "context": [
            "TestClassSchemaEnhancements",
            "test_different_import_types"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 12
    },
    {
      "name": "DependencyAnalysis",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 8,
      "language": "python",
      "docstring": "Structured dependency diagnostics used by sdd-validate.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "analyze_dependencies",
          "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
          "line": 152,
          "context": [
            "analyze_dependencies"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "PrettyPrinter",
      "file": "src/claude_skills/claude_skills/common/printer.py",
      "line": 8,
      "language": "python",
      "docstring": "Utility for consistent, pretty console output optimized for Claude Code.",
      "bases": [],
      "methods": [
        "__init__",
        "_colorize",
        "action",
        "success",
        "info",
        "warning",
        "error",
        "header",
        "detail",
        "result",
        "blank",
        "item"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 175,
          "context": [
            "main"
          ]
        },
        {
          "instantiator": "run_consultation",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 510,
          "context": [
            "run_consultation"
          ]
        },
        {
          "instantiator": "print_routing_matrix",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 576,
          "context": [
            "print_routing_matrix"
          ]
        },
        {
          "instantiator": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 616,
          "context": [
            "consult_with_auto_routing"
          ]
        },
        {
          "instantiator": "format_synthesis_output",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 894,
          "context": [
            "format_synthesis_output"
          ]
        },
        {
          "instantiator": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1001,
          "context": [
            "consult_multi_agent"
          ]
        },
        {
          "instantiator": "run_pytest",
          "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
          "line": 189,
          "context": [
            "run_pytest"
          ]
        },
        {
          "instantiator": "list_presets",
          "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
          "line": 239,
          "context": [
            "list_presets"
          ]
        },
        {
          "instantiator": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 328,
          "context": [
            "print_discovery_report"
          ]
        },
        {
          "instantiator": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 271,
          "context": [
            "print_tool_status"
          ]
        },
        {
          "instantiator": "mark_task_journaled",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 48,
          "context": [
            "mark_task_journaled"
          ]
        },
        {
          "instantiator": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 149,
          "context": [
            "add_journal_entry"
          ]
        },
        {
          "instantiator": "update_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 233,
          "context": [
            "update_metadata"
          ]
        },
        {
          "instantiator": "add_revision_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 306,
          "context": [
            "add_revision_entry"
          ]
        },
        {
          "instantiator": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 415,
          "context": [
            "bulk_journal_tasks"
          ]
        },
        {
          "instantiator": "sync_metadata_from_state",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 562,
          "context": [
            "sync_metadata_from_state"
          ]
        },
        {
          "instantiator": "move_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 38,
          "context": [
            "move_spec"
          ]
        },
        {
          "instantiator": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 160,
          "context": [
            "complete_spec"
          ]
        },
        {
          "instantiator": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 79,
          "context": [
            "update_task_status"
          ]
        },
        {
          "instantiator": "mark_task_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 286,
          "context": [
            "mark_task_blocked"
          ]
        },
        {
          "instantiator": "unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 376,
          "context": [
            "unblock_task"
          ]
        },
        {
          "instantiator": "track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 38,
          "context": [
            "track_time"
          ]
        },
        {
          "instantiator": "generate_time_report",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 101,
          "context": [
            "generate_time_report"
          ]
        },
        {
          "instantiator": "validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 41,
          "context": [
            "validate_spec"
          ]
        },
        {
          "instantiator": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 90,
          "context": [
            "get_status_report"
          ]
        },
        {
          "instantiator": "audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 168,
          "context": [
            "audit_spec"
          ]
        },
        {
          "instantiator": "reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 250,
          "context": [
            "reconcile_state"
          ]
        },
        {
          "instantiator": "detect_unjournaled_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 346,
          "context": [
            "detect_unjournaled_tasks"
          ]
        },
        {
          "instantiator": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 48,
          "context": [
            "add_verification_result"
          ]
        },
        {
          "instantiator": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 260,
          "context": [
            "complete_task_workflow"
          ]
        },
        {
          "instantiator": "test_printer_default_initialization",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 17,
          "context": [
            "TestPrettyPrinterInit",
            "test_printer_default_initialization"
          ]
        },
        {
          "instantiator": "test_printer_with_no_color",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 26,
          "context": [
            "TestPrettyPrinterInit",
            "test_printer_with_no_color"
          ]
        },
        {
          "instantiator": "test_printer_with_verbose",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 32,
          "context": [
            "TestPrettyPrinterInit",
            "test_printer_with_verbose"
          ]
        },
        {
          "instantiator": "test_printer_with_quiet",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 38,
          "context": [
            "TestPrettyPrinterInit",
            "test_printer_with_quiet"
          ]
        },
        {
          "instantiator": "test_printer_success_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 48,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_success_message"
          ]
        },
        {
          "instantiator": "test_printer_error_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 56,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_error_message"
          ]
        },
        {
          "instantiator": "test_printer_warning_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 64,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_warning_message"
          ]
        },
        {
          "instantiator": "test_printer_info_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 72,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_info_message"
          ]
        },
        {
          "instantiator": "test_printer_action_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 80,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_action_message"
          ]
        },
        {
          "instantiator": "test_printer_result_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 88,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_result_message"
          ]
        },
        {
          "instantiator": "test_printer_detail_message",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 96,
          "context": [
            "TestPrettyPrinterMethods",
            "test_printer_detail_message"
          ]
        },
        {
          "instantiator": "test_colored_output_contains_ansi_codes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 108,
          "context": [
            "TestPrettyPrinterColorMode",
            "test_colored_output_contains_ansi_codes"
          ]
        },
        {
          "instantiator": "test_no_color_output_lacks_ansi_codes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 120,
          "context": [
            "TestPrettyPrinterColorMode",
            "test_no_color_output_lacks_ansi_codes"
          ]
        },
        {
          "instantiator": "test_quiet_mode_minimal_output",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 133,
          "context": [
            "TestPrettyPrinterVerbosity",
            "test_quiet_mode_minimal_output"
          ]
        },
        {
          "instantiator": "test_quiet_mode_shows_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 146,
          "context": [
            "TestPrettyPrinterVerbosity",
            "test_quiet_mode_shows_errors"
          ]
        },
        {
          "instantiator": "test_verbose_mode_shows_details",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 156,
          "context": [
            "TestPrettyPrinterVerbosity",
            "test_verbose_mode_shows_details"
          ]
        },
        {
          "instantiator": "test_result_formatting_aligns_output",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 170,
          "context": [
            "TestPrettyPrinterFormatting",
            "test_result_formatting_aligns_output"
          ]
        },
        {
          "instantiator": "test_detail_with_indentation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 187,
          "context": [
            "TestPrettyPrinterFormatting",
            "test_detail_with_indentation"
          ]
        },
        {
          "instantiator": "test_printer_combined_output_flow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 202,
          "context": [
            "TestPrettyPrinterIntegration",
            "test_printer_combined_output_flow"
          ]
        },
        {
          "instantiator": "test_printer_error_warning_flow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
          "line": 219,
          "context": [
            "TestPrettyPrinterIntegration",
            "test_printer_error_warning_flow"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 50
    },
    {
      "name": "EnhancedError",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 12,
      "language": "python",
      "docstring": "Enhanced error message with detailed location and fix information",
      "bases": [],
      "methods": [
        "__str__"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 141,
          "context": [
            "_build_enhanced_errors"
          ]
        },
        {
          "instantiator": "collect_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 107,
          "context": [
            "collect_fix_actions"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_with_enhanced_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 48,
          "context": [
            "test_collect_fix_actions_with_enhanced_errors"
          ]
        },
        {
          "instantiator": "test_build_counts_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 67,
          "context": [
            "test_build_counts_action"
          ]
        },
        {
          "instantiator": "test_build_metadata_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 93,
          "context": [
            "test_build_metadata_action"
          ]
        },
        {
          "instantiator": "test_build_metadata_action_verify",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 125,
          "context": [
            "test_build_metadata_action_verify"
          ]
        },
        {
          "instantiator": "test_build_task_category_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 156,
          "context": [
            "test_build_task_category_action"
          ]
        },
        {
          "instantiator": "test_build_task_category_action_investigation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 203,
          "context": [
            "test_build_task_category_action_investigation"
          ]
        },
        {
          "instantiator": "test_build_hierarchy_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 248,
          "context": [
            "test_build_hierarchy_action"
          ]
        },
        {
          "instantiator": "test_build_date_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 284,
          "context": [
            "test_build_date_action"
          ]
        },
        {
          "instantiator": "test_build_status_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 311,
          "context": [
            "test_build_status_action"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_deduplicates",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 491,
          "context": [
            "test_collect_fix_actions_deduplicates"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_deduplicates",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 499,
          "context": [
            "test_collect_fix_actions_deduplicates"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_category_name",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 524,
          "context": [
            "test_build_placeholder_file_path_action_category_name"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_tbd",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 577,
          "context": [
            "test_build_placeholder_file_path_action_tbd"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_case_insensitive",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 625,
          "context": [
            "test_build_placeholder_file_path_action_case_insensitive"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_all_placeholders",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 682,
          "context": [
            "test_build_placeholder_file_path_action_all_placeholders"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_non_placeholder",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 718,
          "context": [
            "test_build_placeholder_file_path_action_non_placeholder"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_no_file_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 745,
          "context": [
            "test_build_placeholder_file_path_action_no_file_path"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_subtask",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 772,
          "context": [
            "test_build_placeholder_file_path_action_subtask"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_non_task_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 820,
          "context": [
            "test_build_placeholder_file_path_action_non_task_node"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_preserves_existing_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 847,
          "context": [
            "test_build_placeholder_file_path_action_preserves_existing_category"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_whitespace",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 899,
          "context": [
            "test_build_placeholder_file_path_action_whitespace"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_tbd_maps_to_decision",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 943,
          "context": [
            "test_build_placeholder_file_path_action_tbd_maps_to_decision"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_category_mapping",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 997,
          "context": [
            "test_build_placeholder_file_path_action_category_mapping"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_generic_placeholder_uses_title",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 1043,
          "context": [
            "test_build_placeholder_file_path_action_generic_placeholder_uses_title"
          ]
        },
        {
          "instantiator": "test_build_placeholder_file_path_action_preview_shows_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 1089,
          "context": [
            "test_build_placeholder_file_path_action_preview_shows_category"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 27
    },
    {
      "name": "SpecValidationResult",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 56,
      "language": "python",
      "docstring": "Results of spec document validation",
      "bases": [],
      "methods": [
        "count_all_issues",
        "is_valid",
        "calculate_completion"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "JsonSpecValidationResult",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 130,
      "language": "python",
      "docstring": "Results of JSON spec file validation",
      "bases": [],
      "methods": [
        "count_all_issues",
        "is_valid"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 629,
          "context": [
            "validate_spec_hierarchy"
          ]
        },
        {
          "instantiator": "test_valid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 33,
          "context": [
            "TestValidateSpecBeforeProceed",
            "test_valid_spec"
          ]
        },
        {
          "instantiator": "test_spec_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 54,
          "context": [
            "TestValidateSpecBeforeProceed",
            "test_spec_with_errors"
          ]
        },
        {
          "instantiator": "test_spec_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 78,
          "context": [
            "TestValidateSpecBeforeProceed",
            "test_spec_with_warnings"
          ]
        },
        {
          "instantiator": "test_autofix_detection",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 120,
          "context": [
            "TestValidateSpecBeforeProceed",
            "test_autofix_detection"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_empty",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 28,
          "context": [
            "test_collect_fix_actions_empty"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_with_enhanced_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 42,
          "context": [
            "test_collect_fix_actions_with_enhanced_errors"
          ]
        },
        {
          "instantiator": "test_apply_fix_actions_real_apply",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 404,
          "context": [
            "test_apply_fix_actions_real_apply"
          ]
        },
        {
          "instantiator": "test_apply_fix_actions_handles_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 470,
          "context": [
            "test_apply_fix_actions_handles_errors"
          ]
        },
        {
          "instantiator": "test_collect_fix_actions_deduplicates",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 485,
          "context": [
            "test_collect_fix_actions_deduplicates"
          ]
        },
        {
          "instantiator": "test_normalize_validation_result_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 14,
          "context": [
            "test_normalize_validation_result_clean"
          ]
        },
        {
          "instantiator": "test_normalize_validation_result_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 34,
          "context": [
            "test_normalize_validation_result_with_errors"
          ]
        },
        {
          "instantiator": "test_normalize_validation_result_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 54,
          "context": [
            "test_normalize_validation_result_with_warnings"
          ]
        },
        {
          "instantiator": "test_generate_report_markdown_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 12,
          "context": [
            "test_generate_report_markdown_clean"
          ]
        },
        {
          "instantiator": "test_generate_report_markdown_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 29,
          "context": [
            "test_generate_report_markdown_with_errors"
          ]
        },
        {
          "instantiator": "test_generate_report_markdown_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 49,
          "context": [
            "test_generate_report_markdown_with_warnings"
          ]
        },
        {
          "instantiator": "test_generate_report_json_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 65,
          "context": [
            "test_generate_report_json_clean"
          ]
        },
        {
          "instantiator": "test_generate_report_json_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 84,
          "context": [
            "test_generate_report_json_with_errors"
          ]
        },
        {
          "instantiator": "test_generate_report_with_stats",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 102,
          "context": [
            "test_generate_report_with_stats"
          ]
        },
        {
          "instantiator": "test_generate_report_with_stats_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 125,
          "context": [
            "test_generate_report_with_stats_json"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_cycles",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 146,
          "context": [
            "test_generate_report_with_dependencies_cycles"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_orphaned",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 169,
          "context": [
            "test_generate_report_with_dependencies_orphaned"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_deadlocks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 192,
          "context": [
            "test_generate_report_with_dependencies_deadlocks"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_bottlenecks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 215,
          "context": [
            "test_generate_report_with_dependencies_bottlenecks"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_all_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 238,
          "context": [
            "test_generate_report_with_dependencies_all_types"
          ]
        },
        {
          "instantiator": "test_generate_report_with_dependencies_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 262,
          "context": [
            "test_generate_report_with_dependencies_json"
          ]
        },
        {
          "instantiator": "test_generate_report_legacy_dependency_keys",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 288,
          "context": [
            "test_generate_report_legacy_dependency_keys"
          ]
        },
        {
          "instantiator": "test_generate_report_mixed_dependency_keys",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 315,
          "context": [
            "test_generate_report_mixed_dependency_keys"
          ]
        },
        {
          "instantiator": "test_generate_report_invalid_format",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 338,
          "context": [
            "test_generate_report_invalid_format"
          ]
        },
        {
          "instantiator": "test_generate_report_empty_dependency_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 350,
          "context": [
            "test_generate_report_empty_dependency_analysis"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 30
    },
    {
      "name": "QueryResult",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 18,
      "language": "python",
      "docstring": "Represents a query result with metadata.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 469,
          "context": [
            "cmd_complexity"
          ]
        },
        {
          "instantiator": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 584,
          "context": [
            "cmd_list_classes"
          ]
        },
        {
          "instantiator": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 621,
          "context": [
            "cmd_list_functions"
          ]
        },
        {
          "instantiator": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 658,
          "context": [
            "cmd_list_modules"
          ]
        },
        {
          "instantiator": "find_class",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 521,
          "context": [
            "DocumentationQuery",
            "find_class"
          ]
        },
        {
          "instantiator": "find_class",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 529,
          "context": [
            "DocumentationQuery",
            "find_class"
          ]
        },
        {
          "instantiator": "find_function",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 557,
          "context": [
            "DocumentationQuery",
            "find_function"
          ]
        },
        {
          "instantiator": "find_function",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 565,
          "context": [
            "DocumentationQuery",
            "find_function"
          ]
        },
        {
          "instantiator": "find_module",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 594,
          "context": [
            "DocumentationQuery",
            "find_module"
          ]
        },
        {
          "instantiator": "find_module",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 602,
          "context": [
            "DocumentationQuery",
            "find_module"
          ]
        },
        {
          "instantiator": "find_module",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 610,
          "context": [
            "DocumentationQuery",
            "find_module"
          ]
        },
        {
          "instantiator": "get_high_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 652,
          "context": [
            "DocumentationQuery",
            "get_high_complexity"
          ]
        },
        {
          "instantiator": "get_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 685,
          "context": [
            "DocumentationQuery",
            "get_dependencies"
          ]
        },
        {
          "instantiator": "get_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 694,
          "context": [
            "DocumentationQuery",
            "get_dependencies"
          ]
        },
        {
          "instantiator": "search_entities",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 728,
          "context": [
            "DocumentationQuery",
            "search_entities"
          ]
        },
        {
          "instantiator": "search_entities",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 746,
          "context": [
            "DocumentationQuery",
            "search_entities"
          ]
        },
        {
          "instantiator": "get_context_for_area",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 808,
          "context": [
            "DocumentationQuery",
            "get_context_for_area"
          ]
        },
        {
          "instantiator": "get_context_for_area",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 834,
          "context": [
            "DocumentationQuery",
            "get_context_for_area"
          ]
        },
        {
          "instantiator": "get_context_for_area",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 868,
          "context": [
            "DocumentationQuery",
            "get_context_for_area"
          ]
        },
        {
          "instantiator": "list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1038,
          "context": [
            "DocumentationQuery",
            "list_classes"
          ]
        },
        {
          "instantiator": "list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1062,
          "context": [
            "DocumentationQuery",
            "list_functions"
          ]
        },
        {
          "instantiator": "list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1081,
          "context": [
            "DocumentationQuery",
            "list_modules"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 22
    },
    {
      "name": "DocumentationQuery",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 26,
      "language": "python",
      "docstring": "Main class for querying codebase documentation.",
      "bases": [],
      "methods": [
        "__init__",
        "_resolve_docs_path",
        "_find_documentation_dir",
        "load",
        "_normalize_data",
        "_reindex",
        "_assemble_module_entry",
        "_compute_module_complexity",
        "_get_docstring_excerpt",
        "_resolve_module_key",
        "_copy_module_info",
        "apply_pattern_filter",
        "_ensure_loaded",
        "find_class",
        "find_function",
        "find_module",
        "_get_module_info",
        "get_high_complexity",
        "get_dependencies",
        "search_entities",
        "get_context_for_area",
        "describe_module",
        "get_stats",
        "list_classes",
        "list_functions",
        "list_modules",
        "get_callers",
        "get_callees",
        "get_call_count",
        "_create_graph_node",
        "build_call_graph"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 69,
          "context": [
            "_ensure_query"
          ]
        },
        {
          "instantiator": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 121,
          "context": [
            "_ensure_query"
          ]
        },
        {
          "instantiator": "load_documentation",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1721,
          "context": [
            "load_documentation"
          ]
        },
        {
          "instantiator": "__init__",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 26,
          "context": [
            "SDDContextGatherer",
            "__init__"
          ]
        },
        {
          "instantiator": "test_normalizes_modern_payload",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 8,
          "context": [
            "test_normalizes_modern_payload"
          ]
        },
        {
          "instantiator": "test_normalizes_legacy_payload",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 27,
          "context": [
            "test_normalizes_legacy_payload"
          ]
        },
        {
          "instantiator": "test_describe_module_returns_summary",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 42,
          "context": [
            "test_describe_module_returns_summary"
          ]
        },
        {
          "instantiator": "test_context_for_area_includes_docstrings_and_stats",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 54,
          "context": [
            "test_context_for_area_includes_docstrings_and_stats"
          ]
        },
        {
          "instantiator": "test_get_callers_with_v2_schema",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 94,
          "context": [
            "test_get_callers_with_v2_schema"
          ]
        },
        {
          "instantiator": "test_get_callers_exclude_file",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 124,
          "context": [
            "test_get_callers_exclude_file"
          ]
        },
        {
          "instantiator": "test_get_callers_exclude_line",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 152,
          "context": [
            "test_get_callers_exclude_line"
          ]
        },
        {
          "instantiator": "test_get_callers_function_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 167,
          "context": [
            "test_get_callers_function_not_found"
          ]
        },
        {
          "instantiator": "test_get_callers_no_callers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 185,
          "context": [
            "test_get_callers_no_callers"
          ]
        },
        {
          "instantiator": "test_get_callees_with_v2_schema",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 213,
          "context": [
            "test_get_callees_with_v2_schema"
          ]
        },
        {
          "instantiator": "test_get_callees_exclude_file",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 243,
          "context": [
            "test_get_callees_exclude_file"
          ]
        },
        {
          "instantiator": "test_get_callees_function_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 256,
          "context": [
            "test_get_callees_function_not_found"
          ]
        },
        {
          "instantiator": "test_get_call_count_with_value",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 274,
          "context": [
            "test_get_call_count_with_value"
          ]
        },
        {
          "instantiator": "test_get_call_count_none",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 292,
          "context": [
            "test_get_call_count_none"
          ]
        },
        {
          "instantiator": "test_get_call_count_function_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 304,
          "context": [
            "test_get_call_count_function_not_found"
          ]
        },
        {
          "instantiator": "test_normalize_v2_schema_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 334,
          "context": [
            "test_normalize_v2_schema_fields"
          ]
        },
        {
          "instantiator": "test_build_call_graph_callees_only",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 389,
          "context": [
            "test_build_call_graph_callees_only"
          ]
        },
        {
          "instantiator": "test_build_call_graph_callers_only",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 429,
          "context": [
            "test_build_call_graph_callers_only"
          ]
        },
        {
          "instantiator": "test_build_call_graph_both_directions",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 463,
          "context": [
            "test_build_call_graph_both_directions"
          ]
        },
        {
          "instantiator": "test_build_call_graph_max_depth",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 509,
          "context": [
            "test_build_call_graph_max_depth"
          ]
        },
        {
          "instantiator": "test_build_call_graph_handles_cycles",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 547,
          "context": [
            "test_build_call_graph_handles_cycles"
          ]
        },
        {
          "instantiator": "test_build_call_graph_function_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 566,
          "context": [
            "test_build_call_graph_function_not_found"
          ]
        },
        {
          "instantiator": "test_build_call_graph_isolated_function",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 588,
          "context": [
            "test_build_call_graph_isolated_function"
          ]
        },
        {
          "instantiator": "test_build_call_graph_include_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 619,
          "context": [
            "test_build_call_graph_include_metadata"
          ]
        },
        {
          "instantiator": "test_build_call_graph_without_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 653,
          "context": [
            "test_build_call_graph_without_metadata"
          ]
        },
        {
          "instantiator": "test_build_call_graph_depth_values",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 692,
          "context": [
            "test_build_call_graph_depth_values"
          ]
        },
        {
          "instantiator": "test_build_call_graph_invalid_direction",
          "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
          "line": 707,
          "context": [
            "test_build_call_graph_invalid_direction"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 31
    },
    {
      "name": "SDDContextGatherer",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 16,
      "language": "python",
      "docstring": "Helper class for gathering context for SDD tasks.",
      "bases": [],
      "methods": [
        "__init__",
        "get_task_context",
        "suggest_files_for_task",
        "find_similar_implementations",
        "get_test_context",
        "get_refactoring_candidates",
        "get_impact_analysis",
        "_extract_keywords",
        "_deduplicate_results"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "get_task_context",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 325,
          "context": [
            "get_task_context"
          ]
        },
        {
          "instantiator": "suggest_files_for_task",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 340,
          "context": [
            "suggest_files_for_task"
          ]
        },
        {
          "instantiator": "find_similar_implementations",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 355,
          "context": [
            "find_similar_implementations"
          ]
        },
        {
          "instantiator": "get_test_context",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 370,
          "context": [
            "get_test_context"
          ]
        },
        {
          "instantiator": "get_impact_analysis",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 385,
          "context": [
            "get_impact_analysis"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 5
    },
    {
      "name": "ConsultationResponse",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 679,
      "language": "python",
      "docstring": "Represents a response from a tool consultation.",
      "bases": [
        "NamedTuple"
      ],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 704,
          "context": [
            "run_tool_parallel"
          ]
        },
        {
          "instantiator": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 727,
          "context": [
            "run_tool_parallel"
          ]
        },
        {
          "instantiator": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 736,
          "context": [
            "run_tool_parallel"
          ]
        },
        {
          "instantiator": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 744,
          "context": [
            "run_tool_parallel"
          ]
        },
        {
          "instantiator": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 751,
          "context": [
            "run_tool_parallel"
          ]
        },
        {
          "instantiator": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1102,
          "context": [
            "consult_multi_agent"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 6
    },
    {
      "name": "SpecRenderer",
      "file": "src/claude_skills/claude_skills/sdd_render/renderer.py",
      "line": 7,
      "language": "python",
      "docstring": "Renders JSON spec data to human-readable markdown.",
      "bases": [],
      "methods": [
        "__init__",
        "to_markdown",
        "_render_header",
        "_render_objectives",
        "_render_phase",
        "_render_group",
        "_render_task",
        "_render_verification",
        "_get_status_icon"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 74,
          "context": [
            "cmd_render"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "FieldChange",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 12,
      "language": "python",
      "docstring": "Represents a single field change.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "compute_diff",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 56,
          "context": [
            "compute_diff"
          ]
        },
        {
          "instantiator": "_compare_nodes",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 107,
          "context": [
            "_compare_nodes"
          ]
        },
        {
          "instantiator": "_compare_nodes",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 119,
          "context": [
            "_compare_nodes"
          ]
        },
        {
          "instantiator": "_compare_dicts",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 160,
          "context": [
            "_compare_dicts"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 4
    },
    {
      "name": "DiffReport",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 22,
      "language": "python",
      "docstring": "Complete diff report between before and after states.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "compute_diff",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 41,
          "context": [
            "compute_diff"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "FixAction",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 31,
      "language": "python",
      "docstring": "Represents a candidate auto-fix operation.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "_build_counts_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 202,
          "context": [
            "_build_counts_action"
          ]
        },
        {
          "instantiator": "_build_metadata_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 239,
          "context": [
            "_build_metadata_action"
          ]
        },
        {
          "instantiator": "_build_task_category_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 303,
          "context": [
            "_build_task_category_action"
          ]
        },
        {
          "instantiator": "_build_hierarchy_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 344,
          "context": [
            "_build_hierarchy_action"
          ]
        },
        {
          "instantiator": "_build_date_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 369,
          "context": [
            "_build_date_action"
          ]
        },
        {
          "instantiator": "_build_status_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 404,
          "context": [
            "_build_status_action"
          ]
        },
        {
          "instantiator": "_build_missing_fields_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 511,
          "context": [
            "_build_missing_fields_action"
          ]
        },
        {
          "instantiator": "_build_empty_title_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 543,
          "context": [
            "_build_empty_title_action"
          ]
        },
        {
          "instantiator": "_build_invalid_type_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 578,
          "context": [
            "_build_invalid_type_action"
          ]
        },
        {
          "instantiator": "_build_verification_type_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 632,
          "context": [
            "_build_verification_type_action"
          ]
        },
        {
          "instantiator": "_build_bidirectional_deps_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 692,
          "context": [
            "_build_bidirectional_deps_action"
          ]
        },
        {
          "instantiator": "_build_missing_deps_structure_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 728,
          "context": [
            "_build_missing_deps_structure_action"
          ]
        },
        {
          "instantiator": "_build_leaf_count_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 761,
          "context": [
            "_build_leaf_count_action"
          ]
        },
        {
          "instantiator": "_build_orphan_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 807,
          "context": [
            "_build_orphan_action"
          ]
        },
        {
          "instantiator": "_build_placeholder_file_path_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 907,
          "context": [
            "_build_placeholder_file_path_action"
          ]
        },
        {
          "instantiator": "test_apply_fix_actions_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 377,
          "context": [
            "test_apply_fix_actions_dry_run"
          ]
        },
        {
          "instantiator": "test_apply_fix_actions_real_apply",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 418,
          "context": [
            "test_apply_fix_actions_real_apply"
          ]
        },
        {
          "instantiator": "test_apply_fix_actions_handles_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 453,
          "context": [
            "test_apply_fix_actions_handles_errors"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 18
    },
    {
      "name": "FixReport",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 44,
      "language": "python",
      "docstring": "Outcome of applying a set of fix actions.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 136,
          "context": [
            "apply_fix_actions"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 1
    },
    {
      "name": "NormalizedValidationResult",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 12,
      "language": "python",
      "docstring": "Aggregated validation statistics derived from a raw validation result.",
      "bases": [],
      "methods": [],
      "properties": [
        "auto_fixable_total",
        "has_errors",
        "has_warnings"
      ],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "normalize_validation_result",
          "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
          "line": 153,
          "context": [
            "normalize_validation_result"
          ]
        },
        {
          "instantiator": "test_format_validation_summary_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 73,
          "context": [
            "test_format_validation_summary_basic"
          ]
        },
        {
          "instantiator": "test_format_validation_summary_verbose",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 92,
          "context": [
            "test_format_validation_summary_verbose"
          ]
        },
        {
          "instantiator": "test_normalized_validation_result_properties",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 130,
          "context": [
            "test_normalized_validation_result_properties"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 4
    },
    {
      "name": "SpecStatistics",
      "file": "src/claude_skills/claude_skills/sdd_validate/stats.py",
      "line": 13,
      "language": "python",
      "docstring": "Calculated statistics for a spec file.",
      "bases": [],
      "methods": [],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [
        {
          "instantiator": "calculate_statistics",
          "file": "src/claude_skills/claude_skills/sdd_validate/stats.py",
          "line": 89,
          "context": [
            "calculate_statistics"
          ]
        },
        {
          "instantiator": "test_render_statistics_text",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 171,
          "context": [
            "test_render_statistics_text"
          ]
        },
        {
          "instantiator": "test_render_statistics_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 199,
          "context": [
            "test_render_statistics_json"
          ]
        }
      ],
      "imported_by": [],
      "instantiation_count": 3
    },
    {
      "name": "TestCLIBasics",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 68,
      "language": "python",
      "docstring": "Basic CLI functionality tests.",
      "bases": [],
      "methods": [
        "test_cli_help",
        "test_cli_version"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestVerifyToolsCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 93,
      "language": "python",
      "docstring": "Tests for verify-tools command.",
      "bases": [],
      "methods": [
        "test_verify_tools_success"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindSpecsCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 107,
      "language": "python",
      "docstring": "Tests for find-specs command.",
      "bases": [],
      "methods": [
        "test_find_specs_basic",
        "test_find_specs_verbose"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestNextTaskCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 132,
      "language": "python",
      "docstring": "Tests for next-task command.",
      "bases": [],
      "methods": [
        "test_next_task_success",
        "test_next_task_json_output",
        "test_next_task_nonexistent_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestTaskInfoCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 172,
      "language": "python",
      "docstring": "Tests for task-info command.",
      "bases": [],
      "methods": [
        "test_task_info_success",
        "test_task_info_json"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckDepsCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 202,
      "language": "python",
      "docstring": "Tests for check-deps command.",
      "bases": [],
      "methods": [
        "test_check_deps_no_blockers",
        "test_check_deps_with_blockers",
        "test_check_deps_json"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestProgressCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 242,
      "language": "python",
      "docstring": "Tests for progress command.",
      "bases": [],
      "methods": [
        "test_progress_command",
        "test_progress_json"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListPhasesCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 273,
      "language": "python",
      "docstring": "Tests for list-phases command.",
      "bases": [],
      "methods": [
        "test_list_phases",
        "test_list_phases_json"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCLIWorkflows",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 303,
      "language": "python",
      "docstring": "End-to-end CLI workflow tests.",
      "bases": [],
      "methods": [
        "test_complete_task_discovery_workflow"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCLIBasics",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 69,
      "language": "python",
      "docstring": "Basic CLI functionality tests.",
      "bases": [],
      "methods": [
        "test_cli_help",
        "test_cli_shows_new_commands"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestQueryTasksCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 99,
      "language": "python",
      "docstring": "Tests for query-tasks command.",
      "bases": [],
      "methods": [
        "test_query_tasks_basic",
        "test_query_tasks_status_filter",
        "test_query_tasks_type_filter",
        "test_query_tasks_format_simple",
        "test_query_tasks_json_output",
        "test_query_tasks_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTaskCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 188,
      "language": "python",
      "docstring": "Tests for get-task command.",
      "bases": [],
      "methods": [
        "test_get_task_basic",
        "test_get_task_json",
        "test_get_task_nonexistent"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListPhasesCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 241,
      "language": "python",
      "docstring": "Tests for list-phases command.",
      "bases": [],
      "methods": [
        "test_list_phases_basic",
        "test_list_phases_json",
        "test_list_phases_help"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckCompleteCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 288,
      "language": "python",
      "docstring": "Tests for check-complete command.",
      "bases": [],
      "methods": [
        "test_check_complete_spec",
        "test_check_complete_phase",
        "test_check_complete_json",
        "test_check_complete_exit_code"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPhaseTimeCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 362,
      "language": "python",
      "docstring": "Tests for phase-time command.",
      "bases": [],
      "methods": [
        "test_phase_time_basic",
        "test_phase_time_json",
        "test_phase_time_nonexistent_phase"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListBlockersCLI",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 416,
      "language": "python",
      "docstring": "Tests for list-blockers command.",
      "bases": [],
      "methods": [
        "test_list_blockers_basic",
        "test_list_blockers_json",
        "test_list_blockers_no_blockers"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestUpdatedCLICommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 468,
      "language": "python",
      "docstring": "Tests for updated CLI commands using new JSON-only signatures.",
      "bases": [],
      "methods": [
        "test_add_journal_new_signature",
        "test_add_journal_with_task_id",
        "test_add_journal_custom_author",
        "test_sync_metadata_new_command",
        "test_add_verification_new_signature",
        "test_add_verification_failed_status",
        "test_bulk_journal_new_signature",
        "test_bulk_journal_specific_tasks"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 42,
      "language": "python",
      "docstring": "Tests for the validate command.",
      "bases": [],
      "methods": [
        "test_validate_clean_spec_exit_0",
        "test_validate_warnings_spec_exit_1",
        "test_validate_errors_spec_exit_2",
        "test_validate_json_output",
        "test_validate_json_verbose",
        "test_validate_verbose_output",
        "test_validate_nonexistent_file",
        "test_validate_with_report",
        "test_validate_with_report_json_format"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFixCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 127,
      "language": "python",
      "docstring": "Tests for the fix command.",
      "bases": [],
      "methods": [
        "test_fix_preview_clean_spec",
        "test_fix_preview_with_issues",
        "test_fix_preview_json",
        "test_fix_dry_run",
        "test_fix_apply_creates_backup",
        "test_fix_apply_no_backup",
        "test_fix_apply_json_output"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestReportCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 192,
      "language": "python",
      "docstring": "Tests for the report command.",
      "bases": [],
      "methods": [
        "test_report_markdown",
        "test_report_json",
        "test_report_stdout",
        "test_report_with_dependencies",
        "test_report_json_stdout",
        "test_report_with_bottleneck_threshold"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestStatsCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 252,
      "language": "python",
      "docstring": "Tests for the stats command.",
      "bases": [],
      "methods": [
        "test_stats_basic",
        "test_stats_json",
        "test_stats_deep_hierarchy",
        "test_stats_verification_coverage"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckDepsCommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 290,
      "language": "python",
      "docstring": "Tests for the check-deps command.",
      "bases": [],
      "methods": [
        "test_check_deps_clean_spec",
        "test_check_deps_with_cycles",
        "test_check_deps_json",
        "test_check_deps_with_bottleneck_threshold",
        "test_check_deps_orphaned"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGlobalFlags",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 327,
      "language": "python",
      "docstring": "Tests for global flags.",
      "bases": [],
      "methods": [
        "test_quiet_flag",
        "test_no_color_flag",
        "test_verbose_flag",
        "test_help_flag"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestErrorHandling",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 355,
      "language": "python",
      "docstring": "Tests for error handling.",
      "bases": [],
      "methods": [
        "test_invalid_command",
        "test_missing_spec_file_argument",
        "test_invalid_json_file"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestUnifiedCLIBasics",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 41,
      "language": "python",
      "docstring": "Basic unified CLI functionality tests.",
      "bases": [],
      "methods": [
        "test_cli_help",
        "test_cli_no_args",
        "test_cli_version_implicit"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestNextCommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 78,
      "language": "python",
      "docstring": "Tests for sdd-next commands (flat structure).",
      "bases": [],
      "methods": [
        "test_verify_tools",
        "test_find_specs"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestUpdateCommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 109,
      "language": "python",
      "docstring": "Tests for sdd-update commands (flat structure).",
      "bases": [],
      "methods": [
        "test_status_report_help",
        "test_update_command_exists"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateCommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 135,
      "language": "python",
      "docstring": "Tests for sdd-validate commands (flat structure).",
      "bases": [],
      "methods": [
        "test_validate_help",
        "test_validate_command_exists"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGlobalFlags",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 161,
      "language": "python",
      "docstring": "Tests for global flags (--json, --quiet, --verbose).",
      "bases": [],
      "methods": [
        "test_json_flag",
        "test_quiet_flag",
        "test_verbose_flag"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestErrorHandling",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 223,
      "language": "python",
      "docstring": "Tests for error handling and edge cases.",
      "bases": [],
      "methods": [
        "test_invalid_command",
        "test_missing_required_arg"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCommandDelegation",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 251,
      "language": "python",
      "docstring": "Tests that unified CLI correctly delegates to command implementations.",
      "bases": [],
      "methods": [
        "test_next_command_works",
        "test_update_command_works",
        "test_validate_command_works"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestBackwardsCompatibility",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 290,
      "language": "python",
      "docstring": "Tests for backwards compatibility with old command style.",
      "bases": [],
      "methods": [
        "test_new_sdd_command_works"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestColdStartPerformance",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 304,
      "language": "python",
      "docstring": "Tests for CLI cold-start performance.",
      "bases": [],
      "methods": [
        "test_help_fast_response",
        "test_command_help_fast_response"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPromptFormatting",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "line": 20,
      "language": "python",
      "docstring": "Tests for prompt formatting functions.",
      "bases": [],
      "methods": [
        "test_format_architecture_prompt_structure",
        "test_format_architecture_prompt_key_files",
        "test_format_ai_context_prompt_structure",
        "test_format_ai_context_prompt_concise"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestToolSelection",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "line": 86,
      "language": "python",
      "docstring": "Tests for AI tool selection.",
      "bases": [],
      "methods": [
        "test_get_best_tool_for_architecture",
        "test_get_best_tool_fallback",
        "test_get_best_tool_no_tools",
        "test_get_best_tool_unknown_type"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestConsultation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "line": 122,
      "language": "python",
      "docstring": "Tests for run_consultation().",
      "bases": [],
      "methods": [
        "test_run_consultation_success",
        "test_run_consultation_failure",
        "test_run_consultation_dry_run",
        "test_run_consultation_unknown_tool"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestRoutingMatrix",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "line": 162,
      "language": "python",
      "docstring": "Tests for documentation type routing.",
      "bases": [],
      "methods": [
        "test_routing_matrix_has_architecture",
        "test_routing_matrix_has_ai_context",
        "test_routing_matrix_valid_tools"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPromptContentValidation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
      "line": 182,
      "language": "python",
      "docstring": "Tests to ensure prompts contain critical information.",
      "bases": [],
      "methods": [
        "test_architecture_prompt_has_output_format",
        "test_architecture_prompt_requests_component_analysis",
        "test_ai_context_prompt_limits_output",
        "test_prompts_include_context_summary"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFrameworkDetection",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 21,
      "language": "python",
      "docstring": "Tests for detect_framework().",
      "bases": [],
      "methods": [
        "test_detect_fastapi",
        "test_detect_django",
        "test_detect_flask",
        "test_detect_multiple_frameworks",
        "test_detect_no_framework",
        "test_confidence_scores"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestKeyFileIdentification",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 74,
      "language": "python",
      "docstring": "Tests for identify_key_files().",
      "bases": [],
      "methods": [
        "test_identify_main_py",
        "test_identify_config_files",
        "test_prioritize_root_files",
        "test_prioritize_with_docstrings",
        "test_exclude_test_files_from_top",
        "test_limit_key_files",
        "test_with_readme"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestLayerDetection",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 134,
      "language": "python",
      "docstring": "Tests for detect_layers().",
      "bases": [],
      "methods": [
        "test_detect_routers_layer",
        "test_detect_models_layer",
        "test_detect_services_layer",
        "test_detect_repositories_layer",
        "test_detect_utils_layer",
        "test_detect_middleware_layer",
        "test_detect_config_layer",
        "test_detect_tests_layer"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestReadingOrder",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 194,
      "language": "python",
      "docstring": "Tests for suggest_reading_order().",
      "bases": [],
      "methods": [
        "test_reading_order_entry_first",
        "test_reading_order_config_early",
        "test_reading_order_models_before_routes"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestReadmeExtraction",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 230,
      "language": "python",
      "docstring": "Tests for extract_readme().",
      "bases": [],
      "methods": [
        "test_extract_readme_md",
        "test_extract_readme_not_found"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestContextSummary",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
      "line": 247,
      "language": "python",
      "docstring": "Tests for create_context_summary().",
      "bases": [],
      "methods": [
        "test_create_basic_summary",
        "test_summary_with_readme",
        "test_summary_structure"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestLanguageEnum",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
      "line": 18,
      "language": "python",
      "docstring": "Test Language enum.",
      "bases": [],
      "methods": [
        "test_language_values",
        "test_language_from_string"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestParsedDataStructures",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
      "line": 37,
      "language": "python",
      "docstring": "Test parsed data structures.",
      "bases": [],
      "methods": [
        "test_parsed_parameter_creation",
        "test_parsed_function_creation",
        "test_parsed_class_creation",
        "test_parsed_module_creation"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestParseResult",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
      "line": 104,
      "language": "python",
      "docstring": "Test ParseResult aggregation.",
      "bases": [],
      "methods": [
        "test_empty_parse_result",
        "test_parse_result_with_data",
        "test_parse_result_merge"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestBaseParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py",
      "line": 158,
      "language": "python",
      "docstring": "Test BaseParser abstract class.",
      "bases": [],
      "methods": [
        "test_base_parser_is_abstract",
        "test_base_parser_interface"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCSSParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py",
      "line": 17,
      "language": "python",
      "docstring": "Test CSS parser functionality.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_simple_css",
        "test_parse_css_selectors",
        "test_parse_css_variables",
        "test_parse_media_queries",
        "test_parse_keyframes",
        "test_parse_imports",
        "test_parse_empty_css",
        "test_line_counting"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCSSParserAdvanced",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py",
      "line": 170,
      "language": "python",
      "docstring": "Advanced CSS parser tests.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_nested_rules",
        "test_parse_mixins",
        "test_parse_css_grid",
        "test_parse_css_flexbox"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestParserFactory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
      "line": 11,
      "language": "python",
      "docstring": "Test ParserFactory functionality.",
      "bases": [],
      "methods": [
        "test_factory_creation",
        "test_factory_with_languages_filter",
        "test_factory_with_exclude_patterns",
        "test_detect_languages_empty_project",
        "test_detect_languages_python_project",
        "test_detect_languages_multi_language_project",
        "test_get_parser_for_language_python",
        "test_get_parser_for_language_javascript",
        "test_get_parser_for_language_unknown",
        "test_parse_all_empty_project",
        "test_parse_all_python_project",
        "test_parse_all_with_language_filter",
        "test_parse_all_respects_exclude_patterns"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCreateParserFactory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
      "line": 155,
      "language": "python",
      "docstring": "Test create_parser_factory helper function.",
      "bases": [],
      "methods": [
        "test_create_factory_defaults",
        "test_create_factory_with_options"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestParserFactoryMultiLanguage",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
      "line": 174,
      "language": "python",
      "docstring": "Integration tests for multi-language parsing.",
      "bases": [],
      "methods": [
        "test_parse_mixed_language_project",
        "test_statistics_across_languages",
        "test_verbose_output"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGoParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_go.py",
      "line": 17,
      "language": "python",
      "docstring": "Test Go parser functionality.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_simple_function",
        "test_parse_function_with_parameters",
        "test_parse_multiple_return_values",
        "test_parse_struct",
        "test_parse_interface",
        "test_parse_method",
        "test_parse_imports",
        "test_parse_package_name",
        "test_parse_empty_file",
        "test_line_counting"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestHTMLParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py",
      "line": 17,
      "language": "python",
      "docstring": "Test HTML parser functionality.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_simple_html",
        "test_parse_htmx_attributes",
        "test_parse_custom_data_attributes",
        "test_count_elements",
        "test_parse_empty_html",
        "test_line_counting"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestHTMLParserAdvanced",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py",
      "line": 141,
      "language": "python",
      "docstring": "Advanced HTML parser tests.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_forms",
        "test_parse_scripts_and_styles",
        "test_parse_semantic_html5"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestJavaScriptParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py",
      "line": 17,
      "language": "python",
      "docstring": "Test JavaScript parser functionality.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_simple_function",
        "test_parse_arrow_function",
        "test_parse_async_function",
        "test_parse_simple_class",
        "test_parse_class_with_inheritance",
        "test_parse_imports",
        "test_parse_exports",
        "test_parse_typescript_types",
        "test_parse_jsx_component",
        "test_parse_empty_file",
        "test_line_counting"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestTypeScriptParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py",
      "line": 227,
      "language": "python",
      "docstring": "Test TypeScript-specific parsing.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_interface",
        "test_parse_type_alias",
        "test_parse_enum",
        "test_parse_generic_function",
        "test_parse_tsx_component"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPythonParser",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 11,
      "language": "python",
      "docstring": "Test Python parser functionality.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_simple_function",
        "test_parse_function_with_parameters",
        "test_parse_async_function",
        "test_parse_function_with_decorators",
        "test_parse_simple_class",
        "test_parse_class_with_inheritance",
        "test_parse_class_with_properties",
        "test_parse_imports",
        "test_parse_module_docstring",
        "test_calculate_complexity",
        "test_parse_empty_file",
        "test_parse_syntax_error_file",
        "test_line_counting"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPythonParserAdvanced",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 252,
      "language": "python",
      "docstring": "Advanced Python parser tests.",
      "bases": [],
      "methods": [
        "parser",
        "test_parse_nested_classes",
        "test_parse_class_methods",
        "test_parse_type_hints"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPythonParserCrossReferences",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 314,
      "language": "python",
      "docstring": "Test cross-reference tracking in Python parser.",
      "bases": [],
      "methods": [
        "parser",
        "test_track_simple_function_call",
        "test_track_nested_function_calls",
        "test_track_method_calls",
        "test_track_calls_in_class_methods",
        "test_track_module_level_calls",
        "test_cross_reference_bidirectional",
        "test_cross_reference_in_result",
        "test_multiple_callers",
        "test_call_tracking_with_decorators",
        "test_empty_file_has_graph",
        "test_line_numbers_tracked",
        "test_import_tracking_integration",
        "test_class_instantiation_detection",
        "test_instantiation_vs_function_call",
        "test_method_call_not_instantiation",
        "test_multiple_instantiations",
        "test_module_level_instantiation",
        "test_get_instantiators_method",
        "test_get_imports_method",
        "test_bidirectional_symmetry_complete",
        "test_get_instantiators_empty_result"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPythonParserDynamicPatterns",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 856,
      "language": "python",
      "docstring": "Test dynamic pattern warning detection.",
      "bases": [],
      "methods": [
        "parser",
        "test_decorator_warning",
        "test_eval_exec_warning",
        "test_getattr_setattr_warning",
        "test_dynamic_import_warning",
        "test_warning_statistics",
        "test_no_warnings_for_clean_code",
        "test_warnings_in_to_dict",
        "test_decorator_in_class_method",
        "test_module_level_dynamic_pattern"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestSchemaEnhancements",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 1109,
      "language": "python",
      "docstring": "Test schema v1.1 enhancements with cross-reference fields.",
      "bases": [],
      "methods": [
        "parser",
        "test_call_reference_creation",
        "test_call_reference_to_dict",
        "test_enhance_function_with_callers",
        "test_enhance_function_with_calls",
        "test_enhance_function_with_call_count",
        "test_enhance_function_without_call_count",
        "test_enhance_function_preserves_base_fields",
        "test_enhance_function_with_empty_cross_refs",
        "test_enhance_function_with_none_cross_refs",
        "test_enhance_function_complete_example",
        "test_schema_version_constants",
        "test_call_reference_different_types",
        "test_enhance_with_method_calls"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestClassSchemaEnhancements",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
      "line": 1419,
      "language": "python",
      "docstring": "Test class schema v1.1 enhancements with usage tracking fields.",
      "bases": [],
      "methods": [
        "parser",
        "test_instantiation_reference_creation",
        "test_instantiation_reference_to_dict",
        "test_instantiation_reference_without_context",
        "test_import_reference_creation",
        "test_import_reference_to_dict",
        "test_import_reference_without_alias",
        "test_enhance_class_with_instantiated_by",
        "test_enhance_class_with_imported_by",
        "test_enhance_class_with_instantiation_count",
        "test_enhance_class_without_instantiation_count",
        "test_enhance_class_preserves_base_fields",
        "test_enhance_class_with_empty_tracking",
        "test_enhance_class_with_none_tracking",
        "test_enhance_class_complete_example",
        "test_different_import_types",
        "test_instantiation_context_types"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetSessionInfo",
      "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
      "line": 22,
      "language": "python",
      "docstring": "Tests for get_session_info command.",
      "bases": [],
      "methods": [
        "test_get_session_info_with_last_task",
        "test_get_session_info_no_last_task",
        "test_get_session_info_no_specs_dir"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFormatOutputEnhanced",
      "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
      "line": 107,
      "language": "python",
      "docstring": "Tests for enhanced format_output with last-accessed task info.",
      "bases": [],
      "methods": [
        "test_format_output_shows_last_task",
        "test_format_output_no_last_task",
        "test_format_output_no_active_specs",
        "test_format_output_no_specs_directory"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestIntegrationWithGetSessionState",
      "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
      "line": 234,
      "language": "python",
      "docstring": "Integration tests to ensure sdd_start_helper properly uses get_session_state.",
      "bases": [],
      "methods": [
        "test_get_session_state_called_with_correct_path",
        "test_multiple_in_progress_tasks_display"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckDocQueryAvailable",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "line": 21,
      "language": "python",
      "docstring": "Tests for check_doc_query_available function.",
      "bases": [],
      "methods": [
        "test_doc_query_available",
        "test_doc_query_not_found",
        "test_doc_query_command_not_found",
        "test_doc_query_timeout"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckSddIntegrationAvailable",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "line": 72,
      "language": "python",
      "docstring": "Tests for check_sdd_integration_available function.",
      "bases": [],
      "methods": [
        "test_sdd_integration_available",
        "test_sdd_integration_not_available"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTaskContextFromDocs",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "line": 95,
      "language": "python",
      "docstring": "Tests for get_task_context_from_docs function.",
      "bases": [],
      "methods": [
        "test_get_context_success",
        "test_get_context_tool_unavailable",
        "test_get_context_command_failed",
        "test_get_context_timeout",
        "test_get_context_invalid_json"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestShouldGenerateDocs",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "line": 163,
      "language": "python",
      "docstring": "Tests for should_generate_docs function.",
      "bases": [],
      "methods": [
        "test_should_not_generate_if_available",
        "test_should_generate_if_missing",
        "test_interactive_mode"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestEnsureDocumentationExists",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
      "line": 200,
      "language": "python",
      "docstring": "Tests for ensure_documentation_exists function.",
      "bases": [],
      "methods": [
        "test_fast_path_docs_exist",
        "test_docs_missing_no_generation",
        "test_auto_generate_success",
        "test_auto_generate_failure",
        "test_auto_generate_timeout",
        "test_prompt_user_mode"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateSpecBeforeProceed",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
      "line": 22,
      "language": "python",
      "docstring": "Tests for validate_spec_before_proceed function.",
      "bases": [],
      "methods": [
        "test_valid_spec",
        "test_spec_with_errors",
        "test_spec_with_warnings",
        "test_file_not_found",
        "test_invalid_json",
        "test_autofix_detection"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestExecuteVerifyTask",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
      "line": 135,
      "language": "python",
      "docstring": "Tests for execute_verify_task function.",
      "bases": [],
      "methods": [
        "test_verify_task_not_found",
        "test_manual_verification_task",
        "test_verify_task_no_command_or_skill",
        "test_run_tests_skill_success",
        "test_run_tests_skill_failure",
        "test_command_execution_success",
        "test_execution_timeout",
        "test_unknown_skill",
        "test_duration_tracking",
        "test_on_failure_retry_logic",
        "test_on_failure_max_retries_exhausted",
        "test_on_failure_consult_flag",
        "test_on_failure_notification",
        "test_on_failure_continue_on_failure",
        "test_on_failure_custom_revert_status",
        "test_on_failure_all_actions_combined",
        "test_new_skill_sdd_validate",
        "test_new_skill_code_doc",
        "test_new_skill_doc_query",
        "test_hierarchy_lookup",
        "test_backward_compat_tasks_field"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetSessionState",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
      "line": 663,
      "language": "python",
      "docstring": "Tests for get_session_state function.",
      "bases": [],
      "methods": [
        "test_no_specs_directory",
        "test_active_specs_found",
        "test_multiple_in_progress_tasks",
        "test_completed_specs_ignored",
        "test_invalid_json_specs_skipped"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindSpecsDirectory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
      "line": 11,
      "language": "python",
      "docstring": "Tests for find_specs_directory function.",
      "bases": [],
      "methods": [
        "test_find_specs_from_project_root",
        "test_find_specs_with_explicit_path",
        "test_find_specs_returns_none_when_not_found",
        "test_find_specs_validates_structure",
        "test_find_specs_from_subdirectory"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidatePath",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
      "line": 63,
      "language": "python",
      "docstring": "Tests for validate_path function.",
      "bases": [],
      "methods": [
        "test_validate_existing_file",
        "test_validate_existing_directory",
        "test_validate_nonexistent_path",
        "test_validate_relative_path",
        "test_validate_path_with_string_input",
        "test_validate_multiple_paths"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPathIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
      "line": 120,
      "language": "python",
      "docstring": "Integration tests for path utilities.",
      "bases": [],
      "methods": [
        "test_path_resolution_with_symlinks",
        "test_specs_directory_traversal"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterInit",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 12,
      "language": "python",
      "docstring": "Tests for PrettyPrinter initialization.",
      "bases": [],
      "methods": [
        "test_printer_default_initialization",
        "test_printer_with_no_color",
        "test_printer_with_verbose",
        "test_printer_with_quiet"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterMethods",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 43,
      "language": "python",
      "docstring": "Tests for PrettyPrinter methods.",
      "bases": [],
      "methods": [
        "test_printer_success_message",
        "test_printer_error_message",
        "test_printer_warning_message",
        "test_printer_info_message",
        "test_printer_action_message",
        "test_printer_result_message",
        "test_printer_detail_message"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterColorMode",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 103,
      "language": "python",
      "docstring": "Tests for color/no-color modes.",
      "bases": [],
      "methods": [
        "test_colored_output_contains_ansi_codes",
        "test_no_color_output_lacks_ansi_codes"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterVerbosity",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 128,
      "language": "python",
      "docstring": "Tests for verbosity modes.",
      "bases": [],
      "methods": [
        "test_quiet_mode_minimal_output",
        "test_quiet_mode_shows_errors",
        "test_verbose_mode_shows_details"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterFormatting",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 165,
      "language": "python",
      "docstring": "Tests for message formatting.",
      "bases": [],
      "methods": [
        "test_result_formatting_aligns_output",
        "test_detail_with_indentation"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrettyPrinterIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py",
      "line": 197,
      "language": "python",
      "docstring": "Integration tests for PrettyPrinter.",
      "bases": [],
      "methods": [
        "test_printer_combined_output_flow",
        "test_printer_error_warning_flow"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetProgressSummary",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "line": 18,
      "language": "python",
      "docstring": "Tests for get_progress_summary function.",
      "bases": [],
      "methods": [
        "test_get_progress_summary_simple_spec",
        "test_progress_summary_calculates_percentage",
        "test_progress_summary_with_all_completed",
        "test_progress_summary_includes_current_phase"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListPhases",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "line": 74,
      "language": "python",
      "docstring": "Tests for list_phases function.",
      "bases": [],
      "methods": [
        "test_list_phases_returns_all_phases",
        "test_list_phases_structure",
        "test_list_phases_calculates_task_counts",
        "test_list_phases_with_complex_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestRecalculateProgress",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "line": 116,
      "language": "python",
      "docstring": "Tests for recalculate_progress function.",
      "bases": [],
      "methods": [
        "test_recalculate_progress_updates_counts",
        "test_recalculate_progress_propagates_to_parents"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestUpdateParentStatus",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "line": 149,
      "language": "python",
      "docstring": "Tests for update_parent_status function.",
      "bases": [],
      "methods": [
        "test_update_parent_when_all_children_complete",
        "test_update_parent_when_some_children_in_progress"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestProgressIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
      "line": 180,
      "language": "python",
      "docstring": "Integration tests for progress calculation.",
      "bases": [],
      "methods": [
        "test_complete_workflow_progress_tracking"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestExtractFrontmatter",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 17,
      "language": "python",
      "docstring": "Tests for ``extract_frontmatter`` helper.",
      "bases": [],
      "methods": [
        "test_extract_frontmatter_from_json_spec",
        "test_extract_frontmatter_handles_missing_fields",
        "test_extract_frontmatter_invalid_json",
        "test_extract_frontmatter_markdown",
        "test_extract_frontmatter_missing_file"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestLoadJsonSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 71,
      "language": "python",
      "docstring": "Tests for ``load_json_spec`` function.",
      "bases": [],
      "methods": [
        "test_load_existing_json_spec",
        "test_load_nonexistent_json_spec",
        "test_load_invalid_json_spec",
        "test_load_json_spec_with_dependencies"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestSaveJsonSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 108,
      "language": "python",
      "docstring": "Tests for save_json_spec function.",
      "bases": [],
      "methods": [
        "test_save_new_json_spec",
        "test_save_updates_existing_json_spec",
        "test_save_json_spec_with_nonexistent_path_creates_dir"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestBackupJsonSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 165,
      "language": "python",
      "docstring": "Tests for backup_json_spec function.",
      "bases": [],
      "methods": [
        "test_create_backup_of_existing_json_spec",
        "test_backup_nonexistent_json_spec",
        "test_multiple_backups_dont_overwrite"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetNode",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 197,
      "language": "python",
      "docstring": "Tests for get_node function.",
      "bases": [],
      "methods": [
        "test_get_existing_task_node",
        "test_get_existing_phase_node",
        "test_get_nonexistent_node",
        "test_get_node_from_empty_hierarchy",
        "test_get_node_validates_structure"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestJsonSpecIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
      "line": 248,
      "language": "python",
      "docstring": "Integration tests for JSON spec operations.",
      "bases": [],
      "methods": [
        "test_load_modify_save_workflow",
        "test_backup_before_modification"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetNextTask",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "line": 14,
      "language": "python",
      "docstring": "Tests for get_next_task function.",
      "bases": [],
      "methods": [
        "test_get_next_task_returns_first_pending",
        "test_get_next_task_skips_completed",
        "test_get_next_task_respects_dependencies",
        "test_get_next_task_from_current_phase",
        "test_get_next_task_none_when_all_complete",
        "test_get_next_task_empty_hierarchy"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTaskInfo",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "line": 86,
      "language": "python",
      "docstring": "Tests for get_task_info function.",
      "bases": [],
      "methods": [
        "test_get_task_info_existing_task",
        "test_get_task_info_nonexistent_task",
        "test_get_task_info_includes_all_fields",
        "test_get_task_info_for_different_tasks"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckDependencies",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "line": 127,
      "language": "python",
      "docstring": "Tests for check_dependencies function.",
      "bases": [],
      "methods": [
        "test_check_dependencies_no_blockers",
        "test_check_dependencies_with_blockers",
        "test_check_dependencies_nonexistent_task",
        "test_check_dependencies_includes_blocks",
        "test_check_dependencies_resolved_when_complete"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPrepareTask",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "line": 181,
      "language": "python",
      "docstring": "Tests for prepare_task function.",
      "bases": [],
      "methods": [
        "test_prepare_task_success",
        "test_prepare_task_includes_dependencies",
        "test_prepare_task_returns_metadata_only",
        "test_prepare_task_nonexistent",
        "test_prepare_task_auto_finds_next"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestDiscoveryIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
      "line": 227,
      "language": "python",
      "docstring": "Integration tests for discovery operations.",
      "bases": [],
      "methods": [
        "test_complete_task_discovery_workflow",
        "test_task_progression_through_phase"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestDetectProject",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "line": 13,
      "language": "python",
      "docstring": "Tests for detect_project function.",
      "bases": [],
      "methods": [
        "test_detect_node_project",
        "test_detect_python_project",
        "test_detect_project_includes_config_files",
        "test_detect_project_extracts_dependencies",
        "test_detect_project_extracts_dev_dependencies",
        "test_detect_unknown_project"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindTests",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "line": 68,
      "language": "python",
      "docstring": "Tests for find_tests function.",
      "bases": [],
      "methods": [
        "test_find_tests_in_node_project",
        "test_find_tests_in_python_project",
        "test_find_tests_detects_framework",
        "test_find_corresponding_test_file",
        "test_find_tests_empty_project"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckEnvironment",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "line": 118,
      "language": "python",
      "docstring": "Tests for check_environment function.",
      "bases": [],
      "methods": [
        "test_check_environment_valid_project",
        "test_check_environment_with_requirements",
        "test_check_environment_missing_dependencies",
        "test_check_environment_includes_config_files",
        "test_check_environment_warnings"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindRelatedFiles",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "line": 167,
      "language": "python",
      "docstring": "Tests for find_related_files function.",
      "bases": [],
      "methods": [
        "test_find_related_files_test_files",
        "test_find_related_files_same_directory",
        "test_find_related_files_similar_files",
        "test_find_related_files_includes_source",
        "test_find_related_files_nonexistent"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestProjectIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
      "line": 219,
      "language": "python",
      "docstring": "Integration tests for project analysis.",
      "bases": [],
      "methods": [
        "test_complete_project_analysis_workflow",
        "test_python_project_full_analysis"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
      "line": 14,
      "language": "python",
      "docstring": "Tests for validate_spec function.",
      "bases": [],
      "methods": [
        "test_validate_valid_spec",
        "test_validate_invalid_spec",
        "test_validate_spec_checks_frontmatter",
        "test_validate_spec_checks_json_spec",
        "test_validate_nonexistent_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindCircularDeps",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
      "line": 53,
      "language": "python",
      "docstring": "Tests for find_circular_deps function.",
      "bases": [],
      "methods": [
        "test_find_circular_deps_none",
        "test_find_circular_deps_detected",
        "test_find_circular_deps_shows_chains",
        "test_find_orphaned_tasks"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidatePaths",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
      "line": 97,
      "language": "python",
      "docstring": "Tests for validate_paths function.",
      "bases": [],
      "methods": [
        "test_validate_existing_paths",
        "test_validate_mixed_paths",
        "test_validate_paths_with_base_dir"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestSpecStats",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
      "line": 130,
      "language": "python",
      "docstring": "Tests for spec_stats function.",
      "bases": [],
      "methods": [
        "test_spec_stats_basic",
        "test_spec_stats_counts",
        "test_spec_stats_with_json_spec",
        "test_spec_stats_nonexistent"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestInitEnvironment",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
      "line": 9,
      "language": "python",
      "docstring": "Tests for init_environment function.",
      "bases": [],
      "methods": [
        "test_init_environment_from_specs_dir",
        "test_init_environment_creates_directories"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFindPattern",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
      "line": 30,
      "language": "python",
      "docstring": "Tests for find_pattern function.",
      "bases": [],
      "methods": [
        "test_find_pattern_simple",
        "test_find_pattern_recursive"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateStructure",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 24,
      "language": "python",
      "docstring": "Tests for validate_structure function.",
      "bases": [],
      "methods": [
        "test_valid_structure",
        "test_missing_required_fields",
        "test_empty_hierarchy",
        "test_invalid_json_types"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateHierarchy",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 74,
      "language": "python",
      "docstring": "Tests for validate_hierarchy function.",
      "bases": [],
      "methods": [
        "test_valid_hierarchy",
        "test_orphaned_nodes",
        "test_circular_parent_child"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateNodes",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 122,
      "language": "python",
      "docstring": "Tests for validate_nodes function.",
      "bases": [],
      "methods": [
        "test_valid_nodes",
        "test_node_missing_required_fields",
        "test_invalid_node_status",
        "test_invalid_node_type"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateTaskCounts",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 182,
      "language": "python",
      "docstring": "Tests for validate_task_counts function.",
      "bases": [],
      "methods": [
        "test_valid_task_counts",
        "test_children_count_mismatch"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateDependencies",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 226,
      "language": "python",
      "docstring": "Tests for validate_dependencies function.",
      "bases": [],
      "methods": [
        "test_valid_dependencies",
        "test_circular_dependencies",
        "test_dependency_on_nonexistent_task",
        "test_bidirectional_dependency_consistency"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateMetadata",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 293,
      "language": "python",
      "docstring": "Tests for validate_metadata function.",
      "bases": [],
      "methods": [
        "test_valid_metadata",
        "test_task_missing_file_path",
        "test_implementation_task_requires_file_path",
        "test_investigation_task_no_file_path_required",
        "test_missing_category_defaults_to_implementation",
        "test_invalid_task_category_rejected",
        "test_investigation_task_with_file_path_warns",
        "test_backward_compat_no_category_with_file_path",
        "test_backward_compat_old_style_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestValidateJsonSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 499,
      "language": "python",
      "docstring": "Tests for validate_spec_hierarchy main function.",
      "bases": [],
      "methods": [
        "test_validate_valid_json_spec",
        "test_validate_state_with_structure_issues",
        "test_validate_state_with_circular_deps",
        "test_validate_state_with_orphaned_nodes",
        "test_validation_result_structure",
        "test_validation_counts_nodes_correctly"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestJsonSpecValidationIntegration",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
      "line": 559,
      "language": "python",
      "docstring": "Integration tests for state validation.",
      "bases": [],
      "methods": [
        "test_complete_validation_workflow",
        "test_validation_catches_multiple_issues"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestInferTaskCategory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
      "line": 16,
      "language": "python",
      "docstring": "Test cases for infer_task_category() function.",
      "bases": [],
      "methods": [
        "test_investigation_keywords",
        "test_implementation_keywords",
        "test_refactoring_keywords",
        "test_decision_keywords",
        "test_research_keywords",
        "test_default_fallback",
        "test_case_insensitivity",
        "test_priority_order",
        "test_empty_and_none_handling",
        "test_task_type_parameter",
        "test_multi_word_phrases"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestTemplates",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
      "line": 152,
      "language": "python",
      "docstring": "Test cases for template management functions.",
      "bases": [],
      "methods": [
        "test_list_templates_returns_dict",
        "test_get_template_valid",
        "test_get_template_invalid"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGenerateSpecWithCategory",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
      "line": 174,
      "language": "python",
      "docstring": "Test cases for generate_spec_from_template with default_category.",
      "bases": [],
      "methods": [
        "test_generate_spec_with_category",
        "test_generate_spec_without_category",
        "test_generate_spec_all_categories",
        "test_generate_spec_category_none"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestAddJournalEntry",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
      "line": 13,
      "language": "python",
      "docstring": "Test add_journal_entry() function.",
      "bases": [],
      "methods": [
        "test_add_journal_entry_basic",
        "test_add_journal_entry_with_task_id",
        "test_add_journal_entry_custom_author",
        "test_add_journal_entry_updates_timestamp",
        "test_add_journal_entry_dry_run",
        "test_add_journal_entry_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestUpdateMetadata",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
      "line": 141,
      "language": "python",
      "docstring": "Test update_metadata() function.",
      "bases": [],
      "methods": [
        "test_update_metadata_simple",
        "test_update_metadata_numeric_value",
        "test_update_metadata_creates_metadata_object",
        "test_update_metadata_dry_run"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestAddRevisionEntry",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
      "line": 222,
      "language": "python",
      "docstring": "Test add_revision_entry() function.",
      "bases": [],
      "methods": [
        "test_add_revision_entry_basic",
        "test_add_revision_entry_custom_author",
        "test_add_revision_entry_multiple",
        "test_add_revision_entry_dry_run"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestSyncMetadataFromState",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
      "line": 312,
      "language": "python",
      "docstring": "Test sync_metadata_from_state() function.",
      "bases": [],
      "methods": [
        "test_sync_metadata_calculates_progress",
        "test_sync_metadata_sets_completed_status",
        "test_sync_metadata_finds_current_phase",
        "test_sync_metadata_dry_run"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestMoveSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
      "line": 12,
      "language": "python",
      "docstring": "Test move_spec() function.",
      "bases": [],
      "methods": [
        "test_move_spec_to_completed",
        "test_move_spec_to_archived",
        "test_move_spec_to_active",
        "test_move_spec_invalid_target",
        "test_move_spec_file_not_found",
        "test_move_spec_target_exists",
        "test_move_spec_dry_run"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCompleteSpec",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
      "line": 129,
      "language": "python",
      "docstring": "Test complete_spec() function.",
      "bases": [],
      "methods": [
        "test_complete_spec_all_tasks_done",
        "test_complete_spec_without_actual_hours",
        "test_complete_spec_incomplete_tasks",
        "test_complete_spec_dry_run",
        "test_complete_spec_creates_metadata",
        "test_complete_spec_updates_last_updated"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestQueryTasks",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 26,
      "language": "python",
      "docstring": "Tests for query_tasks function.",
      "bases": [],
      "methods": [
        "test_query_all_tasks",
        "test_query_by_status_pending",
        "test_query_by_status_blocked",
        "test_query_by_status_completed",
        "test_query_by_type_task",
        "test_query_by_type_phase",
        "test_query_by_parent",
        "test_query_invalid_spec_id"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTask",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 129,
      "language": "python",
      "docstring": "Tests for get_task function.",
      "bases": [],
      "methods": [
        "test_get_existing_task",
        "test_get_task_with_metadata",
        "test_get_task_with_dependencies",
        "test_get_nonexistent_task",
        "test_get_task_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListPhases",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 199,
      "language": "python",
      "docstring": "Tests for list_phases function.",
      "bases": [],
      "methods": [
        "test_list_all_phases",
        "test_list_phases_with_progress",
        "test_list_phases_invalid_spec",
        "test_list_phases_empty"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestCheckComplete",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 272,
      "language": "python",
      "docstring": "Tests for check_complete function.",
      "bases": [],
      "methods": [
        "test_check_completed_spec",
        "test_check_incomplete_spec",
        "test_check_phase_complete",
        "test_check_phase_incomplete",
        "test_check_nonexistent_phase",
        "test_check_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestPhaseTime",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 351,
      "language": "python",
      "docstring": "Tests for phase_time function.",
      "bases": [],
      "methods": [
        "test_phase_with_time_data",
        "test_phase_without_time_data",
        "test_phase_time_variance_positive",
        "test_phase_time_variance_negative",
        "test_phase_time_nonexistent_phase",
        "test_phase_time_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestListBlockers",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 491,
      "language": "python",
      "docstring": "Tests for list_blockers function.",
      "bases": [],
      "methods": [
        "test_list_blocked_tasks",
        "test_list_no_blockers",
        "test_list_blockers_metadata",
        "test_list_blockers_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetJournalEntries",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 551,
      "language": "python",
      "docstring": "Tests for get_journal_entries function.",
      "bases": [],
      "methods": [
        "test_get_all_journal_entries",
        "test_get_journal_entries_filtered_by_task",
        "test_get_journal_entries_empty",
        "test_get_journal_entries_no_matching_task",
        "test_get_journal_entries_invalid_spec"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTaskJournal",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 732,
      "language": "python",
      "docstring": "Tests for get_task_journal function.",
      "bases": [],
      "methods": [
        "test_get_task_journal"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestGetTaskWithJournal",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
      "line": 773,
      "language": "python",
      "docstring": "Tests for get_task with include_journal parameter.",
      "bases": [],
      "methods": [
        "test_get_task_with_journal",
        "test_get_task_without_journal",
        "test_get_task_with_journal_no_entries"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestAddVerificationResult",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
      "line": 14,
      "language": "python",
      "docstring": "Test add_verification_result() function.",
      "bases": [],
      "methods": [
        "test_add_verification_result_passed",
        "test_add_verification_result_failed",
        "test_add_verification_result_partial",
        "test_add_verification_result_updates_timestamp",
        "test_add_verification_result_invalid_status",
        "test_add_verification_result_nonexistent_verify_id",
        "test_add_verification_result_dry_run",
        "test_add_verification_result_minimal"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    },
    {
      "name": "TestFormatVerificationSummary",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
      "line": 219,
      "language": "python",
      "docstring": "Test format_verification_summary() function.",
      "bases": [],
      "methods": [
        "test_format_verification_summary_all_passed",
        "test_format_verification_summary_mixed_results",
        "test_format_verification_summary_empty_list",
        "test_format_verification_summary_includes_command",
        "test_format_verification_summary_includes_notes"
      ],
      "properties": [],
      "is_exported": false,
      "is_public": true,
      "instantiated_by": [],
      "imported_by": []
    }
  ],
  "functions": [
    {
      "name": "reorder_args_for_subcommand",
      "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
      "line": 15,
      "language": "python",
      "docstring": "Reorder command line arguments to support global options anywhere.\n\nUses argparse.parse_known_args() to robustly extract global options,\nthen reorders to place them after the subcommand.\n\nArgs:\n    cmd_line: List of command line arguments\n\nReturns:\n    Reordered list of arguments",
      "parameters": [
        {
          "name": "cmd_line",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 126,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "add_global_options",
          "file": "unknown",
          "line": 33,
          "call_type": "function_call"
        },
        {
          "name": "parse_known_args",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "vars",
          "file": "unknown",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "main",
      "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
      "line": 123,
      "language": "python",
      "docstring": "Main entry point for unified SDD CLI.",
      "parameters": [],
      "return_type": null,
      "complexity": 13,
      "decorators": [
        "track_metrics('sdd')"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "cmd_gendocs",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 657,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "reorder_args_for_subcommand",
          "file": "unknown",
          "line": 126,
          "call_type": "function_call"
        },
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "add_global_options",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "create_global_parent_parser",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "register_all_subcommands",
          "file": "unknown",
          "line": 149,
          "call_type": "function_call"
        },
        {
          "name": "parse_args",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 156,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 170,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "func",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "exit",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "exit",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 192,
          "call_type": "function_call"
        },
        {
          "name": "exit",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "track_metrics",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "create_global_parent_parser",
      "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
      "line": 5,
      "language": "python",
      "docstring": "Create a parent parser with global options that can be inherited by subparsers.\n\nThis allows global options like --verbose, --debug, etc. to work universally\nacross all command levels, including nested subcommands.\n\nReturns:\n    ArgumentParser configured with global options and add_help=False",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 138,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 15,
          "call_type": "method_call"
        },
        {
          "name": "add_global_options",
          "file": "unknown",
          "line": 16,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "add_global_options",
      "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
      "line": 20,
      "language": "python",
      "docstring": "Add global options available to all commands.",
      "parameters": [
        {
          "name": "parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "reorder_args_for_subcommand",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 33,
          "call_type": "function_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "create_global_parent_parser",
          "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
          "line": 16,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 22,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "add_spec_options",
      "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
      "line": 80,
      "language": "python",
      "docstring": "Add common spec-related arguments.",
      "parameters": [
        {
          "name": "parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "add_task_options",
      "file": "src/claude_skills/claude_skills/cli/sdd/options.py",
      "line": 88,
      "language": "python",
      "docstring": "Add common task-related arguments.",
      "parameters": [
        {
          "name": "parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_all_subcommands",
      "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
      "line": 7,
      "language": "python",
      "docstring": "Register all subcommands from skill modules.\n\nUses lazy imports to avoid loading unnecessary modules and handles\noptional plugins gracefully (e.g., orchestration during Phase 1).\n\nArgs:\n    subparsers: ArgumentParser subparsers object\n    parent_parser: Parent parser with global options to inherit\n\nNote:\n    Handlers will receive printer when invoked, not during registration.\n    This allows printer to be configured after parsing global flags.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "register_next",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "register_update",
          "file": "unknown",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "register_validate",
          "file": "unknown",
          "line": 33,
          "call_type": "function_call"
        },
        {
          "name": "register_plan",
          "file": "unknown",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "register_plan_review",
          "file": "unknown",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "register_render",
          "file": "unknown",
          "line": 36,
          "call_type": "function_call"
        },
        {
          "name": "_register_doc_cli",
          "file": "unknown",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "_register_test_cli",
          "file": "unknown",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "_register_skills_dev_cli",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "register_workflow",
          "file": "unknown",
          "line": 46,
          "call_type": "function_call"
        },
        {
          "name": "debug",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "debug",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_register_doc_cli",
      "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
      "line": 54,
      "language": "python",
      "docstring": "Register the doc CLI as an SDD subcommand.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 39,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "register_code_doc",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "register_doc_query",
          "file": "unknown",
          "line": 71,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_register_test_cli",
      "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
      "line": 74,
      "language": "python",
      "docstring": "Register the test CLI as an SDD subcommand.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 40,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "register_run_tests",
          "file": "unknown",
          "line": 89,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_register_skills_dev_cli",
      "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
      "line": 92,
      "language": "python",
      "docstring": "Register the skills-dev CLI as an SDD subcommand.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 41,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "register_skills_dev_subcommands",
          "file": "unknown",
          "line": 107,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_gendocs",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
      "line": 14,
      "language": "python",
      "docstring": "Generate documentation for a skill.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "extend",
          "file": "unknown",
          "line": 24,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_gendocs",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
      "line": 39,
      "language": "python",
      "docstring": "Register gendocs command.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
          "line": 30,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_migrate",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/migrate.py",
      "line": 65,
      "language": "python",
      "docstring": "Show migration guidance.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_migrate",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/migrate.py",
      "line": 71,
      "language": "python",
      "docstring": "Register migrate command.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
          "line": 31,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "register_all_subcommands",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
      "line": 11,
      "language": "python",
      "docstring": "Register all skills-dev subcommands.\n\nProvides development utilities for maintaining the claude_skills package.",
      "parameters": [
        {
          "name": "subparsers",
          "type": "Any",
          "default": null
        },
        {
          "name": "parent_parser",
          "type": "argparse.ArgumentParser",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 16,
          "call_type": "function_call"
        },
        {
          "name": "register_start_helper",
          "file": "unknown",
          "line": 28,
          "call_type": "function_call"
        },
        {
          "name": "register_setup_permissions",
          "file": "unknown",
          "line": 29,
          "call_type": "function_call"
        },
        {
          "name": "register_gendocs",
          "file": "unknown",
          "line": 30,
          "call_type": "function_call"
        },
        {
          "name": "register_migrate",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_update",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/setup_permissions.py",
      "line": 58,
      "language": "python",
      "docstring": "Update .claude/settings.json with SDD permissions.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_check",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/setup_permissions.py",
      "line": 119,
      "language": "python",
      "docstring": "Check if SDD permissions are configured.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 127,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "all",
          "file": "unknown",
          "line": 149,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 155,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_setup_permissions",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/setup_permissions.py",
      "line": 170,
      "language": "python",
      "docstring": "Register setup-permissions subcommands.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
          "line": 29,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_check_permissions",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "line": 22,
      "language": "python",
      "docstring": "Check if SDD permissions are configured for the project.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 24,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 25,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 29,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_find_active_work",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "line": 80,
      "language": "python",
      "docstring": "Find all active SDD specifications with resumable work.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 127,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_format_output",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "line": 134,
      "language": "python",
      "docstring": "Format active work as human-readable text with last-accessed task info.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "get_session_state",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 210,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 216,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 224,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 225,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_get_session_info",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "line": 230,
      "language": "python",
      "docstring": "Get session state information as JSON.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "get_session_state",
          "file": "unknown",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_start_helper",
      "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
      "line": 261,
      "language": "python",
      "docstring": "Register start-helper subcommands.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/registry.py",
          "line": 28,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 312,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_available_tools",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 49,
      "language": "python",
      "docstring": "Check which AI CLI tools are available.\n\nReturns:\n    List of available tool names",
      "parameters": [],
      "return_type": "List[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_best_tool",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 324,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "get_best_tool",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 342,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 619,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1014,
          "call_type": "function_call"
        },
        {
          "name": "get_quick_routing",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 273,
          "call_type": "function_call"
        },
        {
          "name": "get_tool_status_dict",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 310,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "get_best_tool",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 74,
      "language": "python",
      "docstring": "Get the best available tool for a documentation type.\n\nArgs:\n    doc_type: Type of documentation (architecture, ai_context, developer_guide)\n    available_tools: List of available tools (auto-detected if None)\n\nReturns:\n    Tool name or None if no tools available",
      "parameters": [
        {
          "name": "doc_type",
          "type": "str",
          "default": null
        },
        {
          "name": "available_tools",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 653,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 694,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 628,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_for_architecture",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_fallback",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_no_tools",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_unknown_type",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 117,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 86,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "format_architecture_research_prompt",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 104,
      "language": "python",
      "docstring": "Format prompt for architecture research (read-only analysis).\n\nArgs:\n    context_summary: Structured codebase context summary\n    key_files: List of key file paths to read\n    project_root: Project root directory\n\nReturns:\n    Formatted prompt string asking for research findings only",
      "parameters": [
        {
          "name": "context_summary",
          "type": "str",
          "default": null
        },
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "test_format_architecture_prompt_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 29,
          "call_type": "function_call"
        },
        {
          "name": "test_format_architecture_prompt_key_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "test_architecture_prompt_has_output_format",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "test_architecture_prompt_requests_component_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "test_prompts_include_context_summary",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 222,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 147,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 148,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "format_ai_context_research_prompt",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 190,
      "language": "python",
      "docstring": "Format prompt for AI context research (read-only analysis).\n\nArgs:\n    context_summary: Structured codebase context summary\n    key_files: List of key file paths\n    project_root: Project root directory\n\nReturns:\n    Formatted prompt string asking for research findings only",
      "parameters": [
        {
          "name": "context_summary",
          "type": "str",
          "default": null
        },
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 687,
          "call_type": "function_call"
        },
        {
          "name": "test_format_ai_context_prompt_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "test_format_ai_context_prompt_concise",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_ai_context_prompt_limits_output",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "test_prompts_include_context_summary",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 223,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 240,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 241,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 245,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 256,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 259,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "compose_architecture_doc",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 271,
      "language": "python",
      "docstring": "Compose ARCHITECTURE.md from research findings.\n\nArgs:\n    research_findings: Raw research output from AI consultation\n    project_name: Project name for header\n    version: Project version\n\nReturns:\n    Formatted ARCHITECTURE.md content",
      "parameters": [
        {
          "name": "research_findings",
          "type": "str",
          "default": null
        },
        {
          "name": "project_name",
          "type": "str",
          "default": null
        },
        {
          "name": "version",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 301,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 304,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 310,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 312,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 316,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 317,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 318,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 320,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "compose_ai_context_doc",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 323,
      "language": "python",
      "docstring": "Compose AI_CONTEXT.md from research findings.\n\nArgs:\n    research_findings: Raw research output from AI consultation\n    project_name: Project name for header\n    version: Project version\n\nReturns:\n    Formatted AI_CONTEXT.md content",
      "parameters": [
        {
          "name": "research_findings",
          "type": "str",
          "default": null
        },
        {
          "name": "project_name",
          "type": "str",
          "default": null
        },
        {
          "name": "version",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 344,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 345,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 350,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 356,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 359,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 363,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "run_consultation",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 374,
      "language": "python",
      "docstring": "Run consultation with an AI tool.\n\nArgs:\n    tool: Tool name (cursor-agent, gemini, codex)\n    prompt: Formatted prompt\n    dry_run: If True, show command without running\n    verbose: Enable verbose output\n    printer: Optional PrettyPrinter for consistent output (falls back to print if None)\n\nReturns:\n    Tuple of (success: bool, output: str)",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional['PrettyPrinter']",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, str]",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 494,
          "call_type": "function_call"
        },
        {
          "name": "_run_tool_capture",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 657,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 698,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 668,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 129,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_failure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 147,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_unknown_tool",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 156,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 401,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 403,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "flush",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 422,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 427,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 428,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "flush",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "consult_multi_agent",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 453,
      "language": "python",
      "docstring": "Consult multiple AI tools in parallel and synthesize responses.\n\nArgs:\n    doc_type: Documentation type (architecture, ai_context)\n    prompt: Formatted prompt\n    pair: Which multi-agent pair to use\n    dry_run: If True, show what would run\n    verbose: Enable verbose output\n    printer: Optional PrettyPrinter for consistent output (falls back to print if None)\n\nReturns:\n    Dictionary with synthesis results",
      "parameters": [
        {
          "name": "doc_type",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        },
        {
          "name": "pair",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional['PrettyPrinter']",
          "default": null
        }
      ],
      "return_type": "Dict[str, any]",
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 649,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 690,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 107,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 487,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 488,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 492,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 494,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 514,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 514,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 516,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 518,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 518,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 520,
          "call_type": "function_call"
        },
        {
          "name": "flush",
          "file": "unknown",
          "line": 521,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 533,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 534,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 534,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 535,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 537,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 539,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 539,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 540,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 541,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 543,
          "call_type": "function_call"
        },
        {
          "name": "flush",
          "file": "unknown",
          "line": 544,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 550,
          "call_type": "function_call"
        },
        {
          "name": "submit",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "as_completed",
          "file": "unknown",
          "line": 556,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 559,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 560,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 570,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "flush",
          "file": "unknown",
          "line": 573,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 575,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 579,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 582,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 593,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 593,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_run_tool_capture",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 607,
      "language": "python",
      "docstring": "Run tool and capture output (internal helper for parallel execution).\n\nReturns:\n    Tuple of (success, output, duration)",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, str, float]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "time",
          "file": "unknown",
          "line": 614,
          "call_type": "method_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 616,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "generate_architecture_docs",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 620,
      "language": "python",
      "docstring": "Get architecture research findings from AI consultation.\n\nArgs:\n    context_summary: Codebase context summary\n    key_files: List of key files\n    project_root: Project root directory\n    tool: Specific tool to use (\"auto\" for auto-selection)\n    use_multi_agent: Use multiple agents if available\n    dry_run: Show what would run without running\n    verbose: Enable verbose output\n    printer: Optional PrettyPrinter for consistent output\n\nReturns:\n    Tuple of (success: bool, result: Dict with responses_by_tool)",
      "parameters": [
        {
          "name": "context_summary",
          "type": "str",
          "default": null
        },
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        },
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "use_multi_agent",
          "type": "bool",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional['PrettyPrinter']",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, Dict]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 356,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "format_architecture_research_prompt",
          "file": "unknown",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "unknown",
          "line": 649,
          "call_type": "function_call"
        },
        {
          "name": "get_best_tool",
          "file": "unknown",
          "line": 653,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 657,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_ai_context_docs",
      "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
      "line": 661,
      "language": "python",
      "docstring": "Get AI context research findings from AI consultation.\n\nArgs:\n    context_summary: Codebase context summary\n    key_files: List of key files\n    project_root: Project root directory\n    tool: Specific tool to use (\"auto\" for auto-selection)\n    use_multi_agent: Use multiple agents if available\n    dry_run: Show what would run without running\n    verbose: Enable verbose output\n    printer: Optional PrettyPrinter for consistent output\n\nReturns:\n    Tuple of (success: bool, result: Dict with responses_by_tool)",
      "parameters": [
        {
          "name": "context_summary",
          "type": "str",
          "default": null
        },
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        },
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "use_multi_agent",
          "type": "bool",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional['PrettyPrinter']",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, Dict]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 373,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "format_ai_context_research_prompt",
          "file": "unknown",
          "line": 687,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "unknown",
          "line": 690,
          "call_type": "function_call"
        },
        {
          "name": "get_best_tool",
          "file": "unknown",
          "line": 694,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 698,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "create_cross_reference_graph",
      "file": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "line": 317,
      "language": "python",
      "docstring": "Factory function to create a new CrossReferenceGraph.\n\nReturns:\n    New CrossReferenceGraph instance",
      "parameters": [],
      "return_type": "CrossReferenceGraph",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "parse_file",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 317,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "calculate_complexity",
      "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
      "line": 12,
      "language": "python",
      "docstring": "Calculate cyclomatic complexity for a function.\n\nArgs:\n    node: AST node representing a function\n\nReturns:\n    Cyclomatic complexity score",
      "parameters": [
        {
          "name": "node",
          "type": "ast.FunctionDef",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parser.py",
          "line": 133,
          "call_type": "function_call"
        },
        {
          "name": "_extract_function",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/python.py",
          "line": 420,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "walk",
          "file": "unknown",
          "line": 23,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 26,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 27,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "calculate_statistics",
      "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
      "line": 31,
      "language": "python",
      "docstring": "Calculate project-wide statistics with multi-language support.\n\nArgs:\n    modules: List of module information dictionaries\n    functions: List of function information dictionaries\n\nReturns:\n    Dictionary of calculated statistics including per-language breakdowns",
      "parameters": [
        {
          "name": "modules",
          "type": "List[Dict]",
          "default": null
        },
        {
          "name": "functions",
          "type": "List[Dict]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "generate",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 206,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_with_verifications",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_empty_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_status_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 161,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "sum",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "calculate_language_statistics",
          "file": "unknown",
          "line": 46,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 49,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "max",
          "file": "unknown",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "calculate_language_statistics",
      "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
      "line": 66,
      "language": "python",
      "docstring": "Calculate statistics broken down by programming language.\n\nArgs:\n    modules: List of module information dictionaries\n    functions: List of function information dictionaries\n\nReturns:\n    Dictionary mapping language to its statistics",
      "parameters": [
        {
          "name": "modules",
          "type": "List[Dict]",
          "default": null
        },
        {
          "name": "functions",
          "type": "List[Dict]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Dict]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "calculate_statistics",
          "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
          "line": 46,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 90,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "dict",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "analyze_code_quality",
      "file": "src/claude_skills/claude_skills/code_doc/calculator.py",
      "line": 108,
      "language": "python",
      "docstring": "Analyze code quality based on calculated statistics.\n\nArgs:\n    statistics: Dictionary of code statistics\n\nReturns:\n    Dictionary with quality assessment",
      "parameters": [
        {
          "name": "statistics",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Dict[str, str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_dump_json",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 82,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "payload",
          "type": "object",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_print_if_json",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "_handle_error",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 62,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dump",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_print_if_json",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 87,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "payload",
          "type": "object",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 150,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 175,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 239,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 89,
          "call_type": "function_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "_exclude_patterns",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 94,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "extra",
          "type": "Optional[Iterable[str]]",
          "default": null
        }
      ],
      "return_type": "list[str]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 119,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 224,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 288,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "list",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_handle_error",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 98,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        },
        {
          "name": "exc",
          "type": "Exception",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_generate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 210,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 269,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 434,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "print_exc",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "cmd_generate",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 108,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "_exclude_patterns",
          "file": "unknown",
          "line": 119,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "format",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "generate_all",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 150,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "_handle_error",
          "file": "unknown",
          "line": 160,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_validate",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 163,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 175,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "validate",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "_handle_error",
          "file": "unknown",
          "line": 210,
          "call_type": "function_call"
        },
        {
          "name": "_handle_error",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_analyze",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 215,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "_exclude_patterns",
          "file": "unknown",
          "line": 224,
          "call_type": "function_call"
        },
        {
          "name": "create_parser_factory",
          "file": "unknown",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "parse_all",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 227,
          "call_type": "function_call"
        },
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "_print_if_json",
          "file": "unknown",
          "line": 239,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 245,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 252,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "format",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "_handle_error",
          "file": "unknown",
          "line": 269,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_analyze_with_ai",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 272,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "_exclude_patterns",
          "file": "unknown",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "generate",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 299,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "detect_framework",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "identify_key_files",
          "file": "unknown",
          "line": 305,
          "call_type": "function_call"
        },
        {
          "name": "detect_layers",
          "file": "unknown",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "suggest_reading_order",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "extract_readme",
          "file": "unknown",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 312,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "create_context_summary",
          "file": "unknown",
          "line": 315,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 323,
          "call_type": "method_call"
        },
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 324,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 328,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "save_markdown",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 335,
          "call_type": "function_call"
        },
        {
          "name": "save_json",
          "file": "unknown",
          "line": 336,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 336,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 340,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 340,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 345,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "generate_architecture_docs",
          "file": "unknown",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 372,
          "call_type": "method_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "unknown",
          "line": 373,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 380,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 384,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 387,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 391,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "save_markdown",
          "file": "unknown",
          "line": 396,
          "call_type": "method_call"
        },
        {
          "name": "save_json",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 399,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 404,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 410,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 411,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 412,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 421,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 427,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 428,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "_handle_error",
          "file": "unknown",
          "line": 434,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_code_doc",
      "file": "src/claude_skills/claude_skills/code_doc/cli.py",
      "line": 437,
      "language": "python",
      "docstring": "Register documentation commands for the unified CLI.",
      "parameters": [
        {
          "name": "subparsers",
          "type": "argparse._SubParsersAction",
          "default": null
        },
        {
          "name": "parent_parser",
          "type": "argparse.ArgumentParser",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_register_doc_cli",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 70,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 439,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 445,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 454,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 455,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 456,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 457,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 466,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 468,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 473,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 475,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 476,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 477,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 484,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 485,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 486,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 489,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 490,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 491,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 492,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 493,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 494,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_should_exclude_path",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 14,
      "language": "python",
      "docstring": "Check if a file path should be excluded based on patterns.\n\nUses path component matching to avoid false positives.\nFor example, '.git' will match '.git/' but not '.github/'.\n\nArgs:\n    file_path: Path to check\n    exclude_patterns: List of patterns to exclude\n\nReturns:\n    True if file should be excluded",
      "parameters": [
        {
          "name": "file_path",
          "type": "Path",
          "default": null
        },
        {
          "name": "exclude_patterns",
          "type": "List[str]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "detect_languages",
          "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
          "line": 81,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 29,
          "call_type": "function_call"
        },
        {
          "name": "fnmatch",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "count",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "detect_languages",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 52,
      "language": "python",
      "docstring": "Detect programming languages present in a project.\n\nArgs:\n    project_root: Root directory of the project\n    exclude_patterns: Optional list of patterns to exclude from scanning\n\nReturns:\n    Set of detected language names",
      "parameters": [
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        },
        {
          "name": "exclude_patterns",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "Set[str]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "parse_all",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "test_detect_languages_empty_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 36,
          "call_type": "method_call"
        },
        {
          "name": "test_detect_languages_python_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "test_detect_languages_multi_language_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 59,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "rglob",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "_should_exclude_path",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "get_language_for_extension",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 90,
      "language": "python",
      "docstring": "Get language name for a file extension.\n\nArgs:\n    extension: File extension (with or without dot)\n\nReturns:\n    Language name or 'unknown'",
      "parameters": [
        {
          "name": "extension",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "detect_framework",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 120,
      "language": "python",
      "docstring": "Detect web framework and other major libraries.\n\nArgs:\n    modules: List of module information from CodebaseAnalyzer\n\nReturns:\n    Dictionary with detected framework info",
      "parameters": [
        {
          "name": "modules",
          "type": "List[Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_fastapi",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 26,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_django",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_flask",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_multiple_frameworks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_no_framework",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 60,
          "call_type": "function_call"
        },
        {
          "name": "test_confidence_scores",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 68,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "min",
          "file": "unknown",
          "line": 157,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 157,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "identify_key_files",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 183,
      "language": "python",
      "docstring": "Identify key files that should be read for understanding the codebase.\n\nArgs:\n    modules: List of module information\n    project_root: Project root directory (optional)\n\nReturns:\n    List of file paths (relative) in suggested reading order",
      "parameters": [
        {
          "name": "modules",
          "type": "List[Dict[str, Any]]",
          "default": null
        },
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 305,
          "call_type": "function_call"
        },
        {
          "name": "test_identify_main_py",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "test_identify_config_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "test_prioritize_root_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_prioritize_with_docstrings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_exclude_test_files_from_top",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "test_limit_key_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 121,
          "call_type": "function_call"
        },
        {
          "name": "test_with_readme",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 129,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_entry_first",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_config_early",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_models_before_routes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "test_create_basic_summary",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "test_summary_with_readme",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 279,
          "call_type": "function_call"
        },
        {
          "name": "test_summary_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 301,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "count",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 233,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 240,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 240,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 248,
          "call_type": "function_call"
        },
        {
          "name": "relative_to",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "insert",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        }
      ],
      "call_count": 14
    },
    {
      "name": "detect_layers",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 256,
      "language": "python",
      "docstring": "Detect architectural layers by grouping modules.\n\nArgs:\n    modules: List of module information\n\nReturns:\n    Dictionary mapping layer names to file paths",
      "parameters": [
        {
          "name": "modules",
          "type": "List[Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[str]]",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_routers_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 139,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_models_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_services_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_repositories_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_utils_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_middleware_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_config_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_tests_layer",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 188,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 266,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 282,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 287,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 298,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "dict",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "suggest_reading_order",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 310,
      "language": "python",
      "docstring": "Suggest optimal reading order for key files.\n\nArgs:\n    key_files: List of identified key files\n    framework_info: Framework detection result\n\nReturns:\n    Ordered list of files to read",
      "parameters": [
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "framework_info",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_entry_first",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_config_early",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 210,
          "call_type": "function_call"
        },
        {
          "name": "test_reading_order_models_before_routes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 220,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 336,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 341,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 342,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 343,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 345,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 350,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 351,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 352,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "extract_readme",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 359,
      "language": "python",
      "docstring": "Extract README content if it exists.\n\nArgs:\n    project_root: Project root directory\n\nReturns:\n    README content or None",
      "parameters": [
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_readme_md",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_readme_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 242,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 373,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 374,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "create_context_summary",
      "file": "src/claude_skills/claude_skills/code_doc/detectors.py",
      "line": 381,
      "language": "python",
      "docstring": "Create a structured summary of codebase context for AI analysis.\n\nArgs:\n    framework_info: Framework detection result\n    key_files: Identified key files\n    layers: Layer grouping\n    statistics: Code statistics\n    readme_content: README content (optional)\n\nReturns:\n    Formatted context summary",
      "parameters": [
        {
          "name": "framework_info",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "key_files",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "layers",
          "type": "Dict[str, List[str]]",
          "default": null
        },
        {
          "name": "statistics",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "readme_content",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 315,
          "call_type": "function_call"
        },
        {
          "name": "test_create_basic_summary",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "test_summary_with_readme",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "test_summary_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py",
          "line": 302,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 404,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 408,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 411,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 413,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 416,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 417,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 418,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 422,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 427,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 428,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 435,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 435,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 436,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 436,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 437,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 440,
          "call_type": "method_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 442,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 451,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 452,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 455,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "_auto_register_parsers",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
      "line": 249,
      "language": "python",
      "docstring": "Auto-register all available parsers.\n\nThis function attempts to import and register all known parsers.\nIf a parser's dependencies aren't available, it's skipped silently.",
      "parameters": [
        {
          "name": "factory",
          "type": "ParserFactory",
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "create_parser_factory",
          "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
          "line": 305,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        },
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 271,
          "call_type": "method_call"
        },
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "register_parser",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "create_parser_factory",
      "file": "src/claude_skills/claude_skills/code_doc/parsers/factory.py",
      "line": 288,
      "language": "python",
      "docstring": "Create a ParserFactory with all available parsers registered.\n\nArgs:\n    project_root: Root directory of project\n    exclude_patterns: Patterns to exclude\n    languages: Specific languages to parse\n\nReturns:\n    Configured ParserFactory instance",
      "parameters": [
        {
          "name": "project_root",
          "type": "Path",
          "default": null
        },
        {
          "name": "exclude_patterns",
          "type": "Optional[List[str]]",
          "default": null
        },
        {
          "name": "languages",
          "type": "Optional[List[Language]]",
          "default": null
        }
      ],
      "return_type": "ParserFactory",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "__init__",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 71,
          "call_type": "function_call"
        },
        {
          "name": "test_get_parser_for_language_python",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 69,
          "call_type": "function_call"
        },
        {
          "name": "test_get_parser_for_language_javascript",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 76,
          "call_type": "function_call"
        },
        {
          "name": "test_get_parser_for_language_unknown",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "test_parse_all_python_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "test_create_factory_defaults",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "test_create_factory_with_options",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "test_parse_mixed_language_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "test_statistics_across_languages",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py",
          "line": 223,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_auto_register_parsers",
          "file": "unknown",
          "line": 305,
          "call_type": "function_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "enhance_function_with_cross_refs",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "line": 149,
      "language": "python",
      "docstring": "Enhance ParsedFunction with cross-reference fields for schema v1.1+.\n\nThis function extends the base ParsedFunction schema with bidirectional\ncross-reference information, enabling queries like:\n- \"What functions call this function?\" (callers)\n- \"What functions does this function call?\" (calls)\n- \"How many times is this function called?\" (call_count)\n\nArgs:\n    func: Base ParsedFunction instance from parser\n    callers: List of functions that call this function (who calls me)\n    calls: List of functions called by this function (who do I call)\n    call_count: Optional total count of calls to this function across\n               the entire codebase\n\nReturns:\n    Enhanced dictionary with all base ParsedFunction fields plus:\n    - callers: array of CallReference objects\n    - calls: array of CallReference objects\n    - call_count: optional integer (only if provided)\n\nExample:\n    >>> from claude_skills.code_doc.parsers.python import PythonParser\n    >>> parser = PythonParser(root_path, [])\n    >>> result = parser.parse_file(\"example.py\")\n    >>> func = result.functions[0]\n    >>>\n    >>> # Add cross-reference data\n    >>> callers = [CallReference(\"main\", \"app.py\", 10, \"function_call\")]\n    >>> calls = [CallReference(\"helper\", \"utils.py\", 5, \"function_call\")]\n    >>>\n    >>> enhanced = enhance_function_with_cross_refs(\n    ...     func, callers=callers, calls=calls, call_count=3\n    ... )\n    >>> assert 'callers' in enhanced\n    >>> assert 'calls' in enhanced\n    >>> assert enhanced['call_count'] == 3\n\nNote:\n    This is a non-breaking enhancement. The base ParsedFunction.to_dict()\n    remains unchanged. This function provides an opt-in way to include\n    cross-reference data in the output schema.",
      "parameters": [
        {
          "name": "func",
          "type": "BaseParsedFunction",
          "default": null
        },
        {
          "name": "callers",
          "type": "Optional[List[CallReference]]",
          "default": null
        },
        {
          "name": "calls",
          "type": "Optional[List[CallReference]]",
          "default": null
        },
        {
          "name": "call_count",
          "type": "Optional[int]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_with_callers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1171,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_with_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1199,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_with_call_count",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1220,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_without_call_count",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1239,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_preserves_base_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1259,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_with_empty_cross_refs",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1291,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_with_none_cross_refs",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1312,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_function_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1345,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_with_method_calls",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1413,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "enhance_class_with_usage_tracking",
      "file": "src/claude_skills/claude_skills/code_doc/schema.py",
      "line": 297,
      "language": "python",
      "docstring": "Enhance ParsedClass with usage tracking fields for schema v1.1+.\n\nThis function extends the base ParsedClass schema with usage information\nto enable queries like:\n- \"Where is this class instantiated?\" (instantiated_by)\n- \"Which files import this class?\" (imported_by)\n- \"How many times is this class instantiated?\" (instantiation_count)\n\nArgs:\n    cls: Base ParsedClass instance from parser\n    instantiated_by: List of locations where class is instantiated\n    imported_by: List of files that import this class\n    instantiation_count: Optional count of total instantiations across\n                        the entire codebase\n\nReturns:\n    Enhanced dictionary with all base ParsedClass fields plus:\n    - instantiated_by: array of InstantiationReference objects\n    - imported_by: array of ImportReference objects\n    - instantiation_count: optional integer (only if provided)\n\nExample:\n    >>> from claude_skills.code_doc.parsers.python import PythonParser\n    >>> parser = PythonParser(root_path, [])\n    >>> result = parser.parse_file(\"models.py\")\n    >>> cls = result.classes[0]\n    >>>\n    >>> # Add usage tracking data\n    >>> instantiations = [InstantiationReference(\"main\", \"app.py\", 10)]\n    >>> imports = [ImportReference(\"app.py\", 1, \"from\", \"User\")]\n    >>>\n    >>> enhanced = enhance_class_with_usage_tracking(\n    ...     cls,\n    ...     instantiated_by=instantiations,\n    ...     imported_by=imports,\n    ...     instantiation_count=5\n    ... )\n    >>> assert 'instantiated_by' in enhanced\n    >>> assert 'imported_by' in enhanced\n    >>> assert enhanced['instantiation_count'] == 5\n\nNote:\n    This is a non-breaking enhancement. The base ParsedClass.to_dict()\n    remains unchanged. This function provides an opt-in way to include\n    usage tracking data in the output schema.",
      "parameters": [
        {
          "name": "cls",
          "type": "BaseParsedClass",
          "default": null
        },
        {
          "name": "instantiated_by",
          "type": "Optional[List[InstantiationReference]]",
          "default": null
        },
        {
          "name": "imported_by",
          "type": "Optional[List[ImportReference]]",
          "default": null
        },
        {
          "name": "instantiation_count",
          "type": "Optional[int]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_convert_parse_result",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_with_instantiated_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1551,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_with_imported_by",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1579,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_with_instantiation_count",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1602,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_without_instantiation_count",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1621,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_preserves_base_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1642,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_with_empty_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1673,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_with_none_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1694,
          "call_type": "function_call"
        },
        {
          "name": "test_enhance_class_complete_example",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py",
          "line": 1729,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 351,
          "call_type": "method_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "to_dict",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "analyze_dependencies",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 21,
      "language": "python",
      "docstring": "Detect circular dependencies in JSON spec.\n\nPerforms comprehensive analysis of the dependency graph including:\n- Circular dependency chains\n- Orphaned tasks (references to non-existent dependencies)\n- Impossible chains (mutual blocking scenarios)\n\nArgs:\n    spec_data: JSON spec file data dictionary with 'hierarchy' key\n\nReturns:\n    Dictionary with analysis results:\n    - has_circular: bool - True if any circular dependencies found\n    - circular_chains: list - List of circular dependency chains\n    - orphaned_tasks: list - Tasks with missing dependencies\n    - impossible_chains: list - Tasks in deadlock situations\n\nExample:\n    >>> result = find_circular_dependencies(spec_data)\n    >>> if result['has_circular']:\n    ...     print(f\"Found {len(result['circular_chains'])} circular chains\")",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "DependencyAnalysis",
      "complexity": 32,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_circular_dependencies",
          "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "find_circular_dependencies",
          "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "validate_dependency_graph",
          "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 493,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "has_cycle",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "find_circular_dependencies",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 161,
      "language": "python",
      "docstring": "Backward-compatible wrapper returning legacy dependency analysis format.",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Dict[str, object]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 181,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "bool",
          "file": "unknown",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "bool",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "find_circular_dependencies",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 176,
      "language": "python",
      "docstring": "Backward-compatible wrapper returning legacy dependency analysis format.",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Dict[str, object]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 181,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "bool",
          "file": "unknown",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "bool",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "has_dependency_cycle",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 191,
      "language": "python",
      "docstring": "Check if a specific node is part of a circular dependency.\n\nArgs:\n    graph: Dependency graph mapping node IDs to their dependencies\n    node: Node ID to check\n\nReturns:\n    Tuple of (has_cycle: bool, cycle_path: List[str] or None)\n\nExample:\n    >>> graph = {\"task-1\": [\"task-2\"], \"task-2\": [\"task-1\"]}\n    >>> has_cycle, path = has_dependency_cycle(graph, \"task-1\")\n    >>> print(has_cycle)  # True\n    >>> print(path)  # [\"task-1\", \"task-2\", \"task-1\"]",
      "parameters": [
        {
          "name": "graph",
          "type": "Dict[str, List[str]]",
          "default": null
        },
        {
          "name": "node",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, Optional[List[str]]]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "dfs",
          "file": "unknown",
          "line": 230,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 230,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 230,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "validate_dependency_graph",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 233,
      "language": "python",
      "docstring": "Quick validation that dependency graph is valid.\n\nChecks for:\n- No circular dependencies\n- No orphaned dependencies\n- Valid dependency references\n\nArgs:\n    spec_data: JSON spec file data dictionary\n\nReturns:\n    Tuple of (is_valid: bool, error_messages: List[str])\n\nExample:\n    >>> valid, errors = validate_dependency_graph(spec_data)\n    >>> if not valid:\n    ...     for error in errors:\n    ...         print(f\"Error: {error}\")",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str]]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 279,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "get_dependency_chain",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 283,
      "language": "python",
      "docstring": "Get the full dependency chain for a task.\n\nReturns list of task IDs that must be completed before the given task,\nin order from immediate dependencies to transitive dependencies.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n    task_id: Task ID to analyze\n\nReturns:\n    List of task IDs in dependency order\n\nExample:\n    >>> chain = get_dependency_chain(spec_data, \"task-3-1\")\n    >>> print(chain)  # [\"task-1-1\", \"task-2-1\", \"task-3-1\"]",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 301,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 308,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "collect_deps",
          "file": "unknown",
          "line": 341,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "find_blocking_tasks",
      "file": "src/claude_skills/claude_skills/common/dependency_analysis.py",
      "line": 345,
      "language": "python",
      "docstring": "Find all tasks that are blocked by the given task.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n    task_id: Task ID to analyze\n\nReturns:\n    List of task IDs that are blocked by this task\n\nExample:\n    >>> blocked = find_blocking_tasks(spec_data, \"task-1-1\")\n    >>> print(f\"{task_id} blocks {len(blocked)} tasks\")",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 363,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 365,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 367,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "check_doc_query_available",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "line": 15,
      "language": "python",
      "docstring": "Check if doc-query documentation exists and is accessible.\n\nReturns:\n    dict: {\n        \"available\": bool,           # True if doc-query can be used\n        \"message\": str,              # Human-readable status message\n        \"stats\": dict | None,        # Stats from doc-query if available\n        \"location\": str | None       # Path to documentation\n    }\n\nExample:\n    >>> result = check_doc_query_available()\n    >>> if result[\"available\"]:\n    ...     print(f\"Documentation found at {result['location']}\")",
      "parameters": [],
      "return_type": "dict",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "should_generate_docs",
          "file": "src/claude_skills/claude_skills/common/doc_helper.py",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "ensure_documentation_exists",
          "file": "src/claude_skills/claude_skills/common/doc_helper.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "ensure_documentation_exists",
          "file": "src/claude_skills/claude_skills/common/doc_helper.py",
          "line": 272,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "test_doc_query_available",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "test_doc_query_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "test_doc_query_command_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "test_doc_query_timeout",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 66,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "run",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "isdigit",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        }
      ],
      "call_count": 8
    },
    {
      "name": "check_sdd_integration_available",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "line": 90,
      "language": "python",
      "docstring": "Check if sdd-integration command is available in PATH.\n\nReturns:\n    bool: True if sdd-integration command exists and is executable\n\nExample:\n    >>> if check_sdd_integration_available():\n    ...     context = get_task_context_from_docs(\"implement auth\")",
      "parameters": [],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_task_context_from_docs",
          "file": "src/claude_skills/claude_skills/common/doc_helper.py",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "test_sdd_integration_available",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_sdd_integration_not_available",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 90,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "which",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "get_task_context_from_docs",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "line": 104,
      "language": "python",
      "docstring": "Get task-relevant context from codebase documentation.\n\nArgs:\n    task_description: Description of the task to find context for\n    project_root: Root directory of the project (default: current dir)\n\nReturns:\n    dict | None: {\n        \"files\": list[str],          # Suggested relevant files\n        \"dependencies\": list[str],   # Related dependencies\n        \"similar\": list[str],        # Similar implementations\n        \"complexity\": dict           # Complexity insights\n    } or None if unavailable\n\nExample:\n    >>> context = get_task_context_from_docs(\"implement JWT auth\")\n    >>> if context:\n    ...     print(f\"Check these files: {context['files']}\")",
      "parameters": [
        {
          "name": "task_description",
          "type": "str",
          "default": null
        },
        {
          "name": "project_root",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[dict]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_get_context_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "test_get_context_tool_unavailable",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "test_get_context_command_failed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_get_context_timeout",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "test_get_context_invalid_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 156,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "check_sdd_integration_available",
          "file": "unknown",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "should_generate_docs",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "line": 161,
      "language": "python",
      "docstring": "Check if documentation should be generated.\n\nArgs:\n    project_root: Root directory of the project\n    interactive: If True, may prompt user for decision\n\nReturns:\n    dict: {\n        \"should_generate\": bool,     # Recommendation\n        \"reason\": str,               # Explanation\n        \"available\": bool,           # Current doc availability\n        \"user_confirmed\": bool | None # User response (if interactive)\n    }\n\nExample:\n    >>> result = should_generate_docs()\n    >>> if result[\"should_generate\"] and result[\"user_confirmed\"]:\n    ...     # Run code-doc skill\n    ...     print(\"Generating documentation...\")",
      "parameters": [
        {
          "name": "project_root",
          "type": "str",
          "default": null
        },
        {
          "name": "interactive",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "dict",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_documentation_exists",
          "file": "src/claude_skills/claude_skills/common/doc_helper.py",
          "line": 254,
          "call_type": "function_call"
        },
        {
          "name": "test_should_not_generate_if_available",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "test_should_generate_if_missing",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "test_interactive_mode",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 193,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "check_doc_query_available",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "ensure_documentation_exists",
      "file": "src/claude_skills/claude_skills/common/doc_helper.py",
      "line": 210,
      "language": "python",
      "docstring": "Ensure codebase documentation exists, optionally generating it.\n\nThis is a high-level convenience function that combines:\n- check_doc_query_available() - Check if docs exist\n- should_generate_docs() - Determine if generation is needed\n- Skill(sdd-toolkit:code-doc) invocation - Actually generate docs\n\nArgs:\n    project_root: Root directory (default: auto-detect)\n    prompt_user: If True, prompt user to generate missing docs\n    auto_generate: If True, auto-generate without prompting\n\nReturns:\n    tuple[bool, str]: (success, message)\n        - success: True if docs are available (existing or newly generated)\n        - message: Path to docs OR error/info message\n\nExample:\n    >>> # In sdd-plan Phase 1.2\n    >>> success, result = ensure_documentation_exists(prompt_user=True)\n    >>> if success:\n    ...     print(f\"Using docs at: {result}\")\n    ...     # Proceed with doc-query analysis\n    ... else:\n    ...     print(f\"No docs: {result}\")\n    ...     # Fall back to manual exploration",
      "parameters": [
        {
          "name": "project_root",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "prompt_user",
          "type": "bool",
          "default": null
        },
        {
          "name": "auto_generate",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "tuple[bool, str]",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_fast_path_docs_exist",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "test_docs_missing_no_generation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "test_auto_generate_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 245,
          "call_type": "function_call"
        },
        {
          "name": "test_auto_generate_failure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 260,
          "call_type": "function_call"
        },
        {
          "name": "test_auto_generate_timeout",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "test_prompt_user_mode",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py",
          "line": 286,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 244,
          "call_type": "function_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "check_doc_query_available",
          "file": "unknown",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "should_generate_docs",
          "file": "unknown",
          "line": 254,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "check_doc_query_available",
          "file": "unknown",
          "line": 272,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 286,
          "call_type": "function_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "_extract_location",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 30,
      "language": "python",
      "docstring": "Attempt to extract a node identifier from a validation message.",
      "parameters": [
        {
          "name": "message",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 135,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "search",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 36,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_determine_severity",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 40,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "message",
          "type": "str",
          "default": null
        },
        {
          "name": "severity_hint",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 136,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_is_auto_fixable",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 51,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "category",
          "type": "str",
          "default": null
        },
        {
          "name": "normalized_message",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 21,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 137,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_suggest_fix",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 81,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "category",
          "type": "str",
          "default": null
        },
        {
          "name": "normalized_message",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 24,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 138,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_build_enhanced_errors",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 124,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "messages",
          "type": "Iterable[str]",
          "default": null
        }
      ],
      "return_type": "List[EnhancedError]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 643,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 655,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 658,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 666,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 669,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 677,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 680,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 691,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 699,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 702,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "normalize_message_text",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "_extract_location",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "_determine_severity",
          "file": "unknown",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "_is_auto_fixable",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "_suggest_fix",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        }
      ],
      "call_count": 12
    },
    {
      "name": "validate_structure",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 154,
      "language": "python",
      "docstring": "Validate top-level JSON structure and required fields.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 16,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 639,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 30,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_required_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "test_empty_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 69,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "type",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_id_format",
          "file": "unknown",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "type",
          "file": "unknown",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 194,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "type",
          "file": "unknown",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "validate_iso8601_date",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 203,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "validate_hierarchy",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 212,
      "language": "python",
      "docstring": "Validate hierarchy integrity: parent/child references, no orphans, no cycles.\n\nArgs:\n    hierarchy: Hierarchy dictionary from JSON spec file\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 22,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 651,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_orphaned_nodes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "test_circular_parent_child",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 116,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 245,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 248,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 259,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 265,
          "call_type": "function_call"
        },
        {
          "name": "traverse",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 278,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 281,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 286,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 287,
          "call_type": "function_call"
        },
        {
          "name": "has_cycle",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "validate_nodes",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 311,
      "language": "python",
      "docstring": "Validate node structure and required fields for each node.\n\nArgs:\n    hierarchy: Hierarchy dictionary from JSON spec file\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_nodes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 128,
          "call_type": "function_call"
        },
        {
          "name": "test_node_missing_required_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_node_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 157,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_node_type",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 177,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "validate_node_type",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 340,
          "call_type": "method_call"
        },
        {
          "name": "validate_status",
          "file": "unknown",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 342,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 354,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 359,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 361,
          "call_type": "function_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "validate_task_counts",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 365,
      "language": "python",
      "docstring": "Validate task count accuracy and propagation up the hierarchy.\n\nArgs:\n    hierarchy: Hierarchy dictionary from JSON spec file\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 673,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_task_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "test_children_count_mismatch",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 220,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 378,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 379,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 380,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 385,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 415,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "validate_dependencies",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 433,
      "language": "python",
      "docstring": "Validate dependency graph: references exist, no circular dependencies.\n\nArgs:\n    hierarchy: Hierarchy dictionary from JSON spec file\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 29,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 684,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "test_circular_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 240,
          "call_type": "function_call"
        },
        {
          "name": "test_dependency_on_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 249,
          "call_type": "function_call"
        },
        {
          "name": "test_bidirectional_dependency_consistency",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 287,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 493,
          "call_type": "function_call"
        },
        {
          "name": "has_blocking_cycle",
          "file": "unknown",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 498,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 501,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 508,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 509,
          "call_type": "method_call"
        },
        {
          "name": "type",
          "file": "unknown",
          "line": 510,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 515,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 520,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 522,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 523,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 529,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 532,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 534,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 536,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 537,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 542,
          "call_type": "function_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "validate_metadata",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 546,
      "language": "python",
      "docstring": "Validate type-specific metadata requirements.\n\nArgs:\n    hierarchy: Hierarchy dictionary from JSON spec file\n\nReturns:\n    Tuple of (is_valid, list_of_errors, list_of_warnings)",
      "parameters": [
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, List[str], List[str]]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_hierarchy",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 695,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 299,
          "call_type": "function_call"
        },
        {
          "name": "test_task_missing_file_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 321,
          "call_type": "function_call"
        },
        {
          "name": "test_implementation_task_requires_file_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "test_investigation_task_no_file_path_required",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 366,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_category_defaults_to_implementation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 388,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_task_category_rejected",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 410,
          "call_type": "function_call"
        },
        {
          "name": "test_investigation_task_with_file_path_warns",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "test_backward_compat_no_category_with_file_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 457,
          "call_type": "function_call"
        },
        {
          "name": "test_backward_compat_old_style_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 493,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 559,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 560,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 561,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 563,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 564,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 570,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 574,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 579,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 582,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 590,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 596,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 602,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 609,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 614,
          "call_type": "function_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "validate_spec_hierarchy",
      "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
      "line": 618,
      "language": "python",
      "docstring": "Validate JSON spec file hierarchy with all checks.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n\nReturns:\n    JsonSpecValidationResult with all validation findings",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "JsonSpecValidationResult",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_spec_before_proceed",
          "file": "src/claude_skills/claude_skills/common/integrations.py",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 261,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 398,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "test_collect_fix_actions_finds_multiple_issues",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_with_diff",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "test_selective_fix_application",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_new_fix_builders_work",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_with_all_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_without_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_with_invalid_category",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_mixed_format_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 401,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_old_spec_preserves_functionality",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_old_spec_preserves_functionality",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_placeholder_file_paths",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_placeholder_file_paths",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "test_full_workflow_with_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "test_full_workflow_with_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 503,
          "call_type": "function_call"
        },
        {
          "name": "test_backward_compatibility_no_breaking_changes",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 511,
          "call_type": "function_call"
        },
        {
          "name": "test_gradual_migration_path",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "test_empty_task_category_field",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 604,
          "call_type": "function_call"
        },
        {
          "name": "test_case_sensitivity_of_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 648,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_valid_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_state_with_structure_issues",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 515,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_state_with_circular_deps",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 524,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_state_with_orphaned_nodes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 531,
          "call_type": "function_call"
        },
        {
          "name": "test_validation_result_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 538,
          "call_type": "function_call"
        },
        {
          "name": "test_validation_counts_nodes_correctly",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 551,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_validation_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 567,
          "call_type": "function_call"
        },
        {
          "name": "test_validation_catches_multiple_issues",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py",
          "line": 576,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 630,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 631,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 632,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 636,
          "call_type": "method_call"
        },
        {
          "name": "validate_structure",
          "file": "unknown",
          "line": 639,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 642,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 643,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 645,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "validate_hierarchy",
          "file": "unknown",
          "line": 651,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 655,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 657,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 658,
          "call_type": "function_call"
        },
        {
          "name": "validate_nodes",
          "file": "unknown",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 665,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 666,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 668,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 669,
          "call_type": "function_call"
        },
        {
          "name": "validate_task_counts",
          "file": "unknown",
          "line": 673,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 676,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 677,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 679,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 680,
          "call_type": "function_call"
        },
        {
          "name": "validate_dependencies",
          "file": "unknown",
          "line": 684,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 687,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 690,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 691,
          "call_type": "function_call"
        },
        {
          "name": "validate_metadata",
          "file": "unknown",
          "line": 695,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 698,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 699,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 701,
          "call_type": "method_call"
        },
        {
          "name": "_build_enhanced_errors",
          "file": "unknown",
          "line": 702,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 709,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 710,
          "call_type": "method_call"
        }
      ],
      "call_count": 33
    },
    {
      "name": "validate_spec_before_proceed",
      "file": "src/claude_skills/claude_skills/common/integrations.py",
      "line": 18,
      "language": "python",
      "docstring": "Validate spec file before proceeding with task operations.\n\nArgs:\n    spec_path: Path to spec JSON file\n    quiet: If True, suppress verbose output\n\nReturns:\n    dict: {\n        \"valid\": bool,               # Overall validation result\n        \"errors\": list[dict],        # Critical errors\n        \"warnings\": list[dict],      # Non-critical warnings\n        \"can_autofix\": bool,         # Whether auto-fix is available\n        \"autofix_command\": str       # Command to run for auto-fix\n    }\n\nExample:\n    >>> result = validate_spec_before_proceed(\"specs/auth-001.json\")\n    >>> if not result[\"valid\"]:\n    ...     if result[\"can_autofix\"]:\n    ...         print(f\"Run: {result['autofix_command']}\")\n    ...     else:\n    ...         print(f\"Errors: {result['errors']}\")",
      "parameters": [
        {
          "name": "spec_path",
          "type": "str",
          "default": null
        },
        {
          "name": "quiet",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "dict",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 266,
          "call_type": "function_call"
        },
        {
          "name": "test_valid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "test_file_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "test_autofix_detection",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 129,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "is_valid",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "execute_verify_task",
      "file": "src/claude_skills/claude_skills/common/integrations.py",
      "line": 161,
      "language": "python",
      "docstring": "Execute a verification task based on its metadata.\n\nArgs:\n    spec_data: Loaded JSON spec data\n    task_id: Task ID (e.g., \"verify-1-1\")\n    spec_root: Root directory for the spec (default: current dir)\n    retry_count: Current retry attempt number (internal use)\n\nReturns:\n    dict: {\n        \"success\": bool,             # Overall success\n        \"output\": str,               # Execution output\n        \"errors\": list[str],         # Error messages\n        \"skill_used\": str | None,    # Skill invoked (if any)\n        \"duration\": float,           # Execution time in seconds\n        \"on_failure\": dict | None,   # on_failure configuration used\n        \"retry_count\": int,          # Number of retries attempted\n        \"actions_taken\": list[str]   # Actions taken on failure\n    }\n\nExample:\n    >>> spec_data = load_json_spec(\"auth-001\", specs_dir)\n    >>> result = execute_verify_task(spec_data, \"verify-1-1\")\n    >>> if not result[\"success\"]:\n    ...     print(f\"Verification failed: {result['errors']}\")\n    ...     print(f\"Actions taken: {result['actions_taken']}\")",
      "parameters": [
        {
          "name": "spec_data",
          "type": "dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_root",
          "type": "str",
          "default": null
        },
        {
          "name": "retry_count",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "dict",
      "complexity": 38,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "execute_verify_task",
          "file": "src/claude_skills/claude_skills/common/integrations.py",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_task_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "test_manual_verification_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_task_no_command_or_skill",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "test_run_tests_skill_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "test_run_tests_skill_failure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 239,
          "call_type": "function_call"
        },
        {
          "name": "test_command_execution_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 268,
          "call_type": "function_call"
        },
        {
          "name": "test_execution_timeout",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "test_unknown_skill",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "test_duration_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 335,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_retry_logic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_max_retries_exhausted",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_consult_flag",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_notification",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 459,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_continue_on_failure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_custom_revert_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 507,
          "call_type": "function_call"
        },
        {
          "name": "test_on_failure_all_actions_combined",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 538,
          "call_type": "function_call"
        },
        {
          "name": "test_new_skill_sdd_validate",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "test_new_skill_code_doc",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 591,
          "call_type": "function_call"
        },
        {
          "name": "test_new_skill_doc_query",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 616,
          "call_type": "function_call"
        },
        {
          "name": "test_hierarchy_lookup",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 637,
          "call_type": "function_call"
        },
        {
          "name": "test_backward_compat_tasks_field",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 657,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "time",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 287,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 301,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 309,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 323,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "sleep",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "execute_verify_task",
          "file": "unknown",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 372,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 376,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 377,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 380,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 383,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 383,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 384,
          "call_type": "method_call"
        },
        {
          "name": "type",
          "file": "unknown",
          "line": 384,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        }
      ],
      "call_count": 24
    },
    {
      "name": "get_session_state",
      "file": "src/claude_skills/claude_skills/common/integrations.py",
      "line": 391,
      "language": "python",
      "docstring": "Get current session state for enhanced resumption.\n\nArgs:\n    specs_dir: Path to specs directory (auto-detected if None)\n\nReturns:\n    dict: {\n        \"active_specs\": list[dict],  # Active spec summaries\n        \"last_task\": dict | None,    # Most recently modified task\n        \"timestamp\": str,            # Last activity timestamp (ISO8601)\n        \"in_progress_count\": int     # Number of in_progress tasks\n    }\n\nExample:\n    >>> state = get_session_state()\n    >>> if state[\"last_task\"]:\n    ...     spec_id = state[\"last_task\"][\"spec_id\"]\n    ...     task_id = state[\"last_task\"][\"task_id\"]\n    ...     print(f\"Resume work on {spec_id}:{task_id}?\")",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "dict",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_format_output",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_session_info",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "format_output",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "get_session_info",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "test_no_specs_directory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 671,
          "call_type": "function_call"
        },
        {
          "name": "test_active_specs_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "test_multiple_in_progress_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 747,
          "call_type": "function_call"
        },
        {
          "name": "test_completed_specs_ignored",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 771,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json_specs_skipped",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py",
          "line": 789,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 425,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 433,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 440,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 442,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 455,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 456,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 458,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 460,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 463,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "fromtimestamp",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 469,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 471,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 473,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 476,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "_is_test_environment",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 28,
      "language": "python",
      "docstring": "Detect if we're running in a test environment.\n\nReturns True if any of the following conditions are met:\n1. pytest is loaded in sys.modules\n2. PYTEST_CURRENT_TEST environment variable is set\n3. DISABLE_METRICS environment variable is set",
      "parameters": [],
      "return_type": "bool",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "record_metric",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "capture_metrics",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "wrapper",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 175,
          "call_type": "function_call"
        },
        {
          "name": "is_metrics_enabled",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 220,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "_ensure_metrics_dir",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 52,
      "language": "python",
      "docstring": "Ensure metrics directory exists.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "record_metric",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 111,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_rotate_metrics_file_if_needed",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 57,
      "language": "python",
      "docstring": "Rotate metrics file if it exceeds max size.",
      "parameters": [],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "record_metric",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 112,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "with_suffix",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "rename",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "record_metric",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 74,
      "language": "python",
      "docstring": "Record a single metric entry to the JSONL file.\n\nArgs:\n    skill: Name of the skill (e.g., 'sdd-next', 'doc-query')\n    command: Command/subcommand executed (e.g., 'discover', 'search')\n    duration_ms: Execution duration in milliseconds\n    status: 'success' or 'failure'\n    exit_code: Command exit code (0 for success, non-zero for failure)\n    error_message: Optional error message if status is 'failure'",
      "parameters": [
        {
          "name": "skill",
          "type": "str",
          "default": null
        },
        {
          "name": "command",
          "type": "str",
          "default": null
        },
        {
          "name": "duration_ms",
          "type": "int",
          "default": null
        },
        {
          "name": "status",
          "type": "str",
          "default": null
        },
        {
          "name": "exit_code",
          "type": "int",
          "default": null
        },
        {
          "name": "error_message",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "capture_metrics",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 155,
          "call_type": "function_call"
        },
        {
          "name": "wrapper",
          "file": "src/claude_skills/claude_skills/common/metrics.py",
          "line": 207,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_is_test_environment",
          "file": "unknown",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "utcnow",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "_ensure_metrics_dir",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        },
        {
          "name": "_rotate_metrics_file_if_needed",
          "file": "unknown",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "capture_metrics",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 124,
      "language": "python",
      "docstring": "Context manager for capturing metrics around a block of code.\n\nUsage:\n    with capture_metrics('sdd-next', 'discover'):\n        # do work\n        pass\n\nArgs:\n    skill: Name of the skill\n    command: Command being executed",
      "parameters": [
        {
          "name": "skill",
          "type": "str",
          "default": null
        },
        {
          "name": "command",
          "type": "str",
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_is_test_environment",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 149,
          "call_type": "function_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "record_metric",
          "file": "unknown",
          "line": 155,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "track_metrics",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 158,
      "language": "python",
      "docstring": "Decorator for tracking metrics on CLI main() functions.\n\nUsage:\n    @track_metrics('sdd-next')\n    def main():\n        # CLI logic\n        return 0  # exit code\n\nArgs:\n    skill_name: Name of the skill (e.g., 'sdd-next', 'doc-query')",
      "parameters": [
        {
          "name": "skill_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 122,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "get_metrics_file_path",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 213,
      "language": "python",
      "docstring": "Return the path to the metrics JSONL file.",
      "parameters": [],
      "return_type": "Path",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "is_metrics_enabled",
      "file": "src/claude_skills/claude_skills/common/metrics.py",
      "line": 218,
      "language": "python",
      "docstring": "Check if metrics collection is enabled (not in test environment).",
      "parameters": [],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_is_test_environment",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "find_specs_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 10,
      "language": "python",
      "docstring": "Discover the specs directory.\n\nArgs:\n    provided_path: Optional explicit path to specs directory or file\n\nReturns:\n    Absolute Path to specs directory (containing active/completed/archived), or None if not found",
      "parameters": [
        {
          "name": "provided_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Optional[Path]",
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_session_state",
          "file": "src/claude_skills/claude_skills/common/integrations.py",
          "line": 425,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_specs",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "cmd_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "cmd_task_info",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "cmd_progress",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 490,
          "call_type": "function_call"
        },
        {
          "name": "cmd_prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "cmd_format_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "init_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "cmd_create",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "get_project_context",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "cmd_update_status",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "cmd_mark_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "cmd_unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_revision",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 250,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_verification",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "cmd_track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "cmd_time_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "cmd_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "cmd_audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "cmd_query_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_phases",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_complete",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "cmd_phase_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_blockers",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 641,
          "call_type": "function_call"
        },
        {
          "name": "cmd_reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_journaling",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 682,
          "call_type": "function_call"
        },
        {
          "name": "cmd_bulk_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 721,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complete_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 748,
          "call_type": "function_call"
        },
        {
          "name": "cmd_sync_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "update_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 237,
          "call_type": "function_call"
        },
        {
          "name": "add_revision_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_from_project_root",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 17,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_with_explicit_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 25,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_returns_none_when_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_validates_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_from_subdirectory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "test_path_resolution_with_symlinks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_specs_directory_traversal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 28,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "is_valid_specs_dir",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "is_valid_specs_dir",
          "file": "unknown",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "is_valid_specs_dir",
          "file": "unknown",
          "line": 48,
          "call_type": "function_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "is_valid_specs_dir",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "home",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "home",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "is_valid_specs_dir",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 72,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 76,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        }
      ],
      "call_count": 56
    },
    {
      "name": "find_spec_file",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 83,
      "language": "python",
      "docstring": "Find the spec file for a given spec ID.\n\nSearches in active/, completed/, and archived/ subdirectories.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory (containing active/completed/archived)\n\nReturns:\n    Absolute path to the spec file, or None if not found",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Optional[Path]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "load_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "save_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "backup_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 164,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "validate_path",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 109,
      "language": "python",
      "docstring": "Validate and normalize a file or directory path.\n\nArgs:\n    path: Path string to validate\n\nReturns:\n    Absolute Path object if valid, None otherwise",
      "parameters": [
        {
          "name": "path",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[Path]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_validate_existing_file",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_existing_directory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_relative_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_path_with_string_input",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_multiple_paths",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 116,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "ensure_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 128,
      "language": "python",
      "docstring": "Ensure a directory exists, creating it if necessary.\n\nArgs:\n    path: Path to directory\n\nReturns:\n    True if directory exists or was created, False on error",
      "parameters": [
        {
          "name": "path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "init_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "init_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "move_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 55,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "validate_and_normalize_paths",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 145,
      "language": "python",
      "docstring": "Validate and normalize file paths.\n\nChecks each path for existence, normalizes relative paths, and\ncategorizes them as valid or invalid.\n\nArgs:\n    paths: List of paths to validate (can be relative or absolute)\n    base_directory: Base directory for relative path resolution (defaults to cwd)\n\nReturns:\n    Dictionary with validation results:\n    - valid_paths: list of valid path info dicts\n    - invalid_paths: list of invalid path info dicts\n    - normalized_paths: dict mapping original to normalized paths\n\nExample:\n    >>> result = validate_and_normalize_paths([\"src/main.py\", \"/tmp/test.txt\"])\n    >>> print(f\"Valid: {len(result['valid_paths'])}\")\n    >>> print(result['normalized_paths'])",
      "parameters": [
        {
          "name": "paths",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "base_directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_paths",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 55,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "is_absolute",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "is_absolute",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 211,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "normalize_path",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 216,
      "language": "python",
      "docstring": "Normalize a single path (absolute or relative).\n\nArgs:\n    path: Path string to normalize\n    base_directory: Base directory for relative paths (defaults to cwd)\n\nReturns:\n    Normalized absolute Path object\n\nExample:\n    >>> normalized = normalize_path(\"../specs/active/my-spec.md\")\n    >>> print(normalized)  # /Users/user/project/specs/active/my-spec.md",
      "parameters": [
        {
          "name": "path",
          "type": "str",
          "default": null
        },
        {
          "name": "base_directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "batch_check_paths_exist",
          "file": "src/claude_skills/claude_skills/common/paths.py",
          "line": 268,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "is_absolute",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 241,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "batch_check_paths_exist",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 244,
      "language": "python",
      "docstring": "Check multiple paths for existence.\n\nArgs:\n    paths: List of path strings to check\n    base_directory: Base directory for relative paths (defaults to cwd)\n\nReturns:\n    Dictionary mapping each path to its existence status (True/False)\n\nExample:\n    >>> existence = batch_check_paths_exist([\"src/main.py\", \"tests/test.py\"])\n    >>> for path, exists in existence.items():\n    ...     print(f\"{path}: {'exists' if exists else 'missing'}\")",
      "parameters": [
        {
          "name": "paths",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "base_directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict[str, bool]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "cwd",
          "file": "unknown",
          "line": 263,
          "call_type": "method_call"
        },
        {
          "name": "normalize_path",
          "file": "unknown",
          "line": 268,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "find_files_by_pattern",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 274,
      "language": "python",
      "docstring": "Find files matching a pattern in a directory.\n\nArgs:\n    directory: Directory to search\n    pattern: Glob pattern (e.g., \"*.py\", \"test_*.py\")\n    recursive: Whether to search recursively\n    max_depth: Maximum depth for recursive search (None = unlimited)\n\nReturns:\n    List of matching file paths\n\nExample:\n    >>> py_files = find_files_by_pattern(Path(\"src\"), \"*.py\")\n    >>> print(f\"Found {len(py_files)} Python files\")",
      "parameters": [
        {
          "name": "directory",
          "type": "Path",
          "default": null
        },
        {
          "name": "pattern",
          "type": "str",
          "default": null
        },
        {
          "name": "recursive",
          "type": "bool",
          "default": null
        },
        {
          "name": "max_depth",
          "type": "Optional[int]",
          "default": null
        }
      ],
      "return_type": "List[Path]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 308,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 310,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "generate_reports_readme_content",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 316,
      "language": "python",
      "docstring": "Generate README content for the specs/.reports/ directory.\n\nReads from the template file in common/templates/reports_readme.md.\n\nReturns:\n    Markdown content for README.md explaining the reports directory",
      "parameters": [],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_reports_directory",
          "file": "src/claude_skills/claude_skills/common/paths.py",
          "line": 370,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "read_text",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 332,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "ensure_reports_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 336,
      "language": "python",
      "docstring": "Ensure the .reports/ directory exists within the specs directory.\n\nCreates specs/.reports/ and its README.md if they don't exist.\nThis is called defensively from multiple entry points to ensure\nthe directory structure is always available.\n\nArgs:\n    specs_dir: Path to the specs directory (containing active/completed/archived)\n\nReturns:\n    Path to the .reports directory\n\nExample:\n    >>> specs_dir = Path(\"/project/specs\")\n    >>> reports_dir = ensure_reports_directory(specs_dir)\n    >>> print(reports_dir)  # /project/specs/.reports",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "cmd_create",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 426,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "generate_reports_readme_content",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 374,
          "call_type": "function_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "generate_reviews_readme_content",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 379,
      "language": "python",
      "docstring": "Generate README content for the specs/.reviews/ directory.\n\nReads from the template file in common/templates/reviews_readme.md.\n\nReturns:\n    Markdown content for README.md explaining the reviews directory",
      "parameters": [],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_reviews_directory",
          "file": "src/claude_skills/claude_skills/common/paths.py",
          "line": 433,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "read_text",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "ensure_reviews_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 399,
      "language": "python",
      "docstring": "Ensure the .reviews/ directory exists within the specs directory.\n\nCreates specs/.reviews/ and its README.md if they don't exist.\nThis is called defensively from multiple entry points to ensure\nthe directory structure is always available.\n\nArgs:\n    specs_dir: Path to the specs directory (containing active/completed/archived)\n\nReturns:\n    Path to the .reviews directory\n\nExample:\n    >>> specs_dir = Path(\"/project/specs\")\n    >>> reviews_dir = ensure_reviews_directory(specs_dir)\n    >>> print(reviews_dir)  # /project/specs/.reviews",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 144,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 426,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "generate_reviews_readme_content",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 437,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_backups_readme_content",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 442,
      "language": "python",
      "docstring": "Generate README content for the specs/.backups/ directory.\n\nReads from the template file in common/templates/backups_readme.md.\n\nReturns:\n    Markdown content for README.md explaining the backups directory",
      "parameters": [],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_backups_directory",
          "file": "src/claude_skills/claude_skills/common/paths.py",
          "line": 496,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "read_text",
          "file": "unknown",
          "line": 455,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 458,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "ensure_backups_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 462,
      "language": "python",
      "docstring": "Ensure the .backups/ directory exists within the specs directory.\n\nCreates specs/.backups/ and its README.md if they don't exist.\nThis is called defensively from multiple entry points to ensure\nthe directory structure is always available.\n\nArgs:\n    specs_dir: Path to the specs directory (containing active/completed/archived)\n\nReturns:\n    Path to the .backups directory\n\nExample:\n    >>> specs_dir = Path(\"/project/specs\")\n    >>> backups_dir = ensure_backups_directory(specs_dir)\n    >>> print(backups_dir)  # /project/specs/.backups",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "backup_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 265,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 484,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 486,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 494,
          "call_type": "method_call"
        },
        {
          "name": "generate_backups_readme_content",
          "file": "unknown",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 500,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_human_readable_readme_content",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 505,
      "language": "python",
      "docstring": "Generate README content for the specs/.human-readable/ directory.\n\nReads from the template file in common/templates/human_readable_readme.md.\n\nReturns:\n    Markdown content for README.md explaining the human-readable directory",
      "parameters": [],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_human_readable_directory",
          "file": "src/claude_skills/claude_skills/common/paths.py",
          "line": 559,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "read_text",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 521,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "ensure_human_readable_directory",
      "file": "src/claude_skills/claude_skills/common/paths.py",
      "line": 525,
      "language": "python",
      "docstring": "Ensure the .human-readable/ directory exists within the specs directory.\n\nCreates specs/.human-readable/ and its README.md if they don't exist.\nThis is called defensively from multiple entry points to ensure\nthe directory structure is always available.\n\nArgs:\n    specs_dir: Path to the specs directory (containing active/completed/archived)\n\nReturns:\n    Path to the .human-readable directory\n\nExample:\n    >>> specs_dir = Path(\"/project/specs\")\n    >>> hr_dir = ensure_human_readable_directory(specs_dir)\n    >>> print(hr_dir)  # /project/specs/.human-readable",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 64,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 547,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 549,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 552,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 557,
          "call_type": "method_call"
        },
        {
          "name": "generate_human_readable_readme_content",
          "file": "unknown",
          "line": 559,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 560,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 563,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "recalculate_progress",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 9,
      "language": "python",
      "docstring": "Recursively recalculate progress for a node and all its parents.\n\nModifies spec_data in-place by updating completed_tasks, total_tasks,\nand status fields for the node and all ancestors.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n    node_id: Node to start recalculation from (default: spec-root)\n\nReturns:\n    The modified spec_data dictionary (for convenience/chaining)",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "node_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "recalculate_progress",
          "file": "src/claude_skills/claude_skills/common/progress.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "update_parent_status",
          "file": "src/claude_skills/claude_skills/common/progress.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "get_progress_summary",
          "file": "src/claude_skills/claude_skills/common/progress.py",
          "line": 166,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "mark_task_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 439,
          "call_type": "function_call"
        },
        {
          "name": "reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_completed",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 640,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_calculates_percentage",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "test_recalculate_progress_updates_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 128,
          "call_type": "function_call"
        },
        {
          "name": "test_recalculate_progress_propagates_to_parents",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 194,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 209,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 26,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 36,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "update_node_status",
          "file": "unknown",
          "line": 55,
          "call_type": "function_call"
        }
      ],
      "call_count": 17
    },
    {
      "name": "update_node_status",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 60,
      "language": "python",
      "docstring": "Update a node's status based on its children's progress.\n\nModifies node in-place. Does not affect manually set statuses\nfor leaf nodes (tasks).\n\nArgs:\n    node: Node dictionary from hierarchy\n    hierarchy: Full hierarchy dictionary (needed to check child statuses)",
      "parameters": [
        {
          "name": "node",
          "type": "Dict",
          "default": null
        },
        {
          "name": "hierarchy",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "recalculate_progress",
          "file": "src/claude_skills/claude_skills/common/progress.py",
          "line": 55,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "update_parent_status",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 115,
      "language": "python",
      "docstring": "Update status and progress for a node's parent chain.\n\nUse this after updating a task status to propagate changes up the hierarchy.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n    node_id: Node whose parents should be updated\n\nReturns:\n    The modified spec_data dictionary (for convenience/chaining)",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "node_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_update_parent_when_all_children_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 161,
          "call_type": "function_call"
        },
        {
          "name": "test_update_parent_when_some_children_in_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 173,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_progress_summary",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 151,
      "language": "python",
      "docstring": "Get progress summary for a node.\n\nArgs:\n    spec_data: JSON spec file data\n    node_id: Node to get progress for (default: spec-root)\n\nReturns:\n    Dictionary with progress information",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "node_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_execution_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "cmd_progress",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 499,
          "call_type": "function_call"
        },
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "test_get_progress_summary_simple_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_calculates_percentage",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_with_all_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_includes_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 202,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 210,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 166,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        }
      ],
      "call_count": 11
    },
    {
      "name": "list_phases",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 215,
      "language": "python",
      "docstring": "List all phases with their status and progress.\n\nArgs:\n    spec_data: JSON spec file data\n\nReturns:\n    List of phase dictionaries",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "List[Dict]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_list_phases",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 577,
          "call_type": "function_call"
        },
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_returns_all_phases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_calculates_task_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_with_complex_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "test_list_all_phases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_with_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 217,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 233,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_empty",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 262,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 240,
          "call_type": "method_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "get_task_counts_by_status",
      "file": "src/claude_skills/claude_skills/common/progress.py",
      "line": 252,
      "language": "python",
      "docstring": "Count tasks by their status.\n\nArgs:\n    spec_data: JSON spec file data\n\nReturns:\n    Dictionary mapping status to count",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Dict[str, int]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 104,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 276,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "query_tasks",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 15,
      "language": "python",
      "docstring": "Query and filter tasks by various criteria.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    status: Filter by status (pending/in_progress/completed/blocked)\n    task_type: Filter by type (task/verify/group/phase)\n    parent: Filter by parent node ID\n    format_type: Output format (table/json/simple)\n    printer: Optional printer for output\n    limit: Maximum number of results to return (default 20, use 0 for unlimited)\n\nReturns:\n    List of matching task dictionaries, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "status",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "task_type",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "parent",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "format_type",
          "type": "str",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        },
        {
          "name": "limit",
          "type": "Optional[int]",
          "default": null
        }
      ],
      "return_type": "Optional[List[Dict]]",
      "complexity": 26,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_query_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 493,
          "call_type": "function_call"
        },
        {
          "name": "test_query_all_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_status_pending",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_status_blocked",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_status_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 69,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_type_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_type_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "test_query_by_parent",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "test_query_invalid_spec_id",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 119,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "get_task",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 120,
      "language": "python",
      "docstring": "Get detailed information about a specific task.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task ID to retrieve\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n    include_journal: If True, include journal entries for this task\n\nReturns:\n    Task data dictionary, or None if not found",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        },
        {
          "name": "include_journal",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 19,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_get_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 524,
          "call_type": "function_call"
        },
        {
          "name": "test_get_existing_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 134,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_with_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 149,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_with_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "test_get_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_with_journal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 817,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_without_journal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 863,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_with_journal_no_entries",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 896,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "get_node",
          "file": "unknown",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 194,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "list_phases",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 215,
      "language": "python",
      "docstring": "List all phases with their progress.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    List of phase dictionaries, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[List[Dict]]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_list_phases",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 577,
          "call_type": "function_call"
        },
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_returns_all_phases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_calculates_task_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_with_complex_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "test_list_all_phases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_with_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 217,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 233,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_empty",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 262,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "get_phases_list",
          "file": "unknown",
          "line": 237,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 241,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "check_complete",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 265,
      "language": "python",
      "docstring": "Check if spec, phase, or task is ready to be marked complete.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    phase_id: Optional phase ID to check (if None, checks entire spec)\n    task_id: Optional task ID to check (mutually exclusive with phase_id)\n    printer: Optional printer for output\n\nReturns:\n    Dictionary with completion status and incomplete tasks",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "phase_id",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "task_id",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 19,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_complete",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 599,
          "call_type": "function_call"
        },
        {
          "name": "test_check_completed_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "test_check_incomplete_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 290,
          "call_type": "function_call"
        },
        {
          "name": "test_check_phase_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 303,
          "call_type": "function_call"
        },
        {
          "name": "test_check_phase_incomplete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "test_check_nonexistent_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 329,
          "call_type": "function_call"
        },
        {
          "name": "test_check_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 341,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 286,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "capitalize",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 310,
          "call_type": "method_call"
        },
        {
          "name": "find_incomplete",
          "file": "unknown",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 347,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 352,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 354,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 356,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 361,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 368,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "list_blockers",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 373,
      "language": "python",
      "docstring": "List all currently blocked tasks with their blocker details.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    List of blocked task dictionaries, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[List[Dict]]",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_list_blockers",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blocked_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "test_list_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 514,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 525,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 541,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 390,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 394,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 399,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 400,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 402,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 404,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 408,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 410,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 416,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 418,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 422,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 427,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 428,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "get_journal_entries",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 436,
      "language": "python",
      "docstring": "Get journal entries for a spec, optionally filtered by task_id.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    task_id: Optional task ID to filter entries\n    printer: Optional printer for output\n\nReturns:\n    List of journal entry dictionaries, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "task_id",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[List[Dict]]",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_task_journal",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "test_get_all_journal_entries",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 597,
          "call_type": "function_call"
        },
        {
          "name": "test_get_journal_entries_filtered_by_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 651,
          "call_type": "function_call"
        },
        {
          "name": "test_get_journal_entries_empty",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 678,
          "call_type": "function_call"
        },
        {
          "name": "test_get_journal_entries_no_matching_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 710,
          "call_type": "function_call"
        },
        {
          "name": "test_get_journal_entries_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 722,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 455,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 460,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 472,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 477,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 477,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 479,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 480,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 484,
          "call_type": "method_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 487,
          "call_type": "function_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 493,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 494,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 502,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 502,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 503,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 504,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 505,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 506,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 507,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 511,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 512,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 514,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 515,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "get_task_journal",
      "file": "src/claude_skills/claude_skills/common/query_operations.py",
      "line": 520,
      "language": "python",
      "docstring": "Get journal entries specifically for a task.\n\nThis is a convenience wrapper around get_journal_entries.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task ID\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    List of journal entry dictionaries for the task, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[List[Dict]]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_get_task_journal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 760,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_journal_entries",
          "file": "unknown",
          "line": 540,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_spec_report",
      "file": "src/claude_skills/claude_skills/common/reporting.py",
      "line": 18,
      "language": "python",
      "docstring": "Generate a comprehensive spec validation report.\n\nArgs:\n    result: SpecValidationResult from validation\n\nReturns:\n    Formatted report string",
      "parameters": [
        {
          "name": "result",
          "type": "SpecValidationResult",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 22,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "generate_json_spec_report",
      "file": "src/claude_skills/claude_skills/common/reporting.py",
      "line": 94,
      "language": "python",
      "docstring": "Generate a comprehensive JSON spec validation report.\n\nArgs:\n    result: JsonSpecValidationResult from JSON spec validation\n\nReturns:\n    Formatted report string",
      "parameters": [
        {
          "name": "result",
          "type": "JsonSpecValidationResult",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "generate_combined_report",
      "file": "src/claude_skills/claude_skills/common/reporting.py",
      "line": 149,
      "language": "python",
      "docstring": "Generate a combined validation report for markdown spec and JSON spec.\n\nArgs:\n    spec_result: SpecValidationResult from markdown spec validation\n    json_spec_result: JsonSpecValidationResult from JSON spec validation\n\nReturns:\n    Formatted combined report string",
      "parameters": [
        {
          "name": "spec_result",
          "type": "SpecValidationResult",
          "default": null
        },
        {
          "name": "json_spec_result",
          "type": "JsonSpecValidationResult",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "extract_frontmatter",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 16,
      "language": "python",
      "docstring": "Extract metadata/frontmatter information from a specification file.\n\nSupports both JSON-based specs (current default) and legacy Markdown specs\nthat contain a YAML-style frontmatter block delimited by ``---`` markers.\n\nArgs:\n    spec_file: Path to the specification file.\n\nReturns:\n    Dictionary containing extracted metadata. On failure, returns a\n    dictionary with an ``\"error\"`` key describing the failure.",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Union[str, Path]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_spec_statistics",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "analyze_spec_complexity",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 236,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_frontmatter_from_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 21,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_frontmatter_handles_missing_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_frontmatter_invalid_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_frontmatter_markdown",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "test_extract_frontmatter_missing_file",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 66,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "_extract_json_frontmatter",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "_extract_markdown_frontmatter",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "_extract_json_frontmatter",
          "file": "unknown",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "_extract_markdown_frontmatter",
          "file": "unknown",
          "line": 49,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_extract_json_frontmatter",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 52,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "extract_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "extract_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 47,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_extract_markdown_frontmatter",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 87,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "extract_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "extract_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 49,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "read_text",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "splitlines",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "rstrip",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "_coerce_scalar",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "_coerce_scalar",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_coerce_scalar",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 139,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "value",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Any",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_extract_markdown_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "_extract_markdown_frontmatter",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 131,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 143,
          "call_type": "method_call"
        },
        {
          "name": "cast",
          "file": "unknown",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "load_json_spec",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 156,
      "language": "python",
      "docstring": "Load the JSON spec file for a given spec ID.\n\nSearches for the spec file in active/, completed/, and archived/ directories.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n\nReturns:\n    Spec data dictionary, or None if not found",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "query_tasks",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "get_task",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "list_phases",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "check_complete",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 286,
          "call_type": "function_call"
        },
        {
          "name": "list_blockers",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 390,
          "call_type": "function_call"
        },
        {
          "name": "get_journal_entries",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 455,
          "call_type": "function_call"
        },
        {
          "name": "format_execution_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "cmd_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "cmd_task_info",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 391,
          "call_type": "function_call"
        },
        {
          "name": "cmd_progress",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 495,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 794,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "spec_stats",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 49,
          "call_type": "function_call"
        },
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "mark_task_journaled",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "update_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 243,
          "call_type": "function_call"
        },
        {
          "name": "add_revision_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "phase_time",
          "file": "src/claude_skills/claude_skills/sdd_update/query.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "mark_task_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 294,
          "call_type": "function_call"
        },
        {
          "name": "unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 380,
          "call_type": "function_call"
        },
        {
          "name": "track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "generate_time_report",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 46,
          "call_type": "function_call"
        },
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "detect_unjournaled_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 390,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 536,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_failed_status",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 573,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 609,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_specific_tasks",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 630,
          "call_type": "function_call"
        },
        {
          "name": "test_get_progress_summary_simple_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 23,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_calculates_percentage",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_with_all_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 49,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_summary_includes_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 63,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_returns_all_phases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_calculates_task_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_with_complex_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "test_recalculate_progress_updates_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 121,
          "call_type": "function_call"
        },
        {
          "name": "test_recalculate_progress_propagates_to_parents",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "test_update_parent_when_all_children_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "test_update_parent_when_some_children_in_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_workflow_progress_tracking",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "test_load_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 76,
          "call_type": "function_call"
        },
        {
          "name": "test_load_nonexistent_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "test_load_invalid_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "test_load_json_spec_with_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_save_updates_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 139,
          "call_type": "function_call"
        },
        {
          "name": "test_save_updates_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 150,
          "call_type": "function_call"
        },
        {
          "name": "test_create_backup_of_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "test_get_existing_task_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 202,
          "call_type": "function_call"
        },
        {
          "name": "test_get_existing_phase_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "test_get_nonexistent_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 222,
          "call_type": "function_call"
        },
        {
          "name": "test_get_node_validates_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 236,
          "call_type": "function_call"
        },
        {
          "name": "test_load_modify_save_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 256,
          "call_type": "function_call"
        },
        {
          "name": "test_load_modify_save_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 267,
          "call_type": "function_call"
        },
        {
          "name": "test_backup_before_modification",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_returns_first_pending",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 19,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_skips_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 29,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_respects_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_from_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_none_when_all_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_existing_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_includes_all_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_for_different_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 151,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_includes_blocks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_resolved_when_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "test_task_progression_through_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 253,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_none",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_detected",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_shows_chains",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "test_find_orphaned_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_with_task_id",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_custom_author",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 90,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_simple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_numeric_value",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 175,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_creates_metadata_object",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_creates_metadata_object",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 239,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_custom_author",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 265,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_multiple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_calculates_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_calculates_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 335,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_sets_completed_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_sets_completed_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_finds_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 366,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_finds_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 379,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 387,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_all_tasks_done",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_all_tasks_done",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_without_actual_hours",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 166,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_without_actual_hours",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_incomplete_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_incomplete_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 227,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_creates_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 239,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_creates_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 256,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_updates_last_updated",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 264,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_updates_last_updated",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 279,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_passed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_failed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 76,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_partial",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 129,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_minimal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 208,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_spec_file",
          "file": "unknown",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 173,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 180,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        }
      ],
      "call_count": 131
    },
    {
      "name": "save_json_spec",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 187,
      "language": "python",
      "docstring": "Save JSON spec file with atomic write and optional backup.\n\nUpdates the existing spec file in its current location (active/completed/archived).\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    spec_data: Spec data to write\n    backup: Create backup before writing (default: True)\n    validate: Validate JSON before writing (default: True)\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "backup",
          "type": "bool",
          "default": null
        },
        {
          "name": "validate",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "mark_task_journaled",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "update_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 269,
          "call_type": "function_call"
        },
        {
          "name": "add_revision_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 527,
          "call_type": "function_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 634,
          "call_type": "function_call"
        },
        {
          "name": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 236,
          "call_type": "function_call"
        },
        {
          "name": "mark_task_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 443,
          "call_type": "function_call"
        },
        {
          "name": "track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 315,
          "call_type": "function_call"
        },
        {
          "name": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 552,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_failed_status",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 589,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 613,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_specific_tasks",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 634,
          "call_type": "function_call"
        },
        {
          "name": "test_save_new_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 126,
          "call_type": "function_call"
        },
        {
          "name": "test_save_updates_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "test_save_json_spec_with_nonexistent_path_creates_dir",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_load_modify_save_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "test_backup_before_modification",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_creates_metadata_object",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_calculates_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 325,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_sets_completed_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 347,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_finds_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 391,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_creates_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_passed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 25,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_failed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_partial",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 170,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_minimal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 196,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_spec_file",
          "file": "unknown",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "_validate_spec_structure",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "backup_json_spec",
          "file": "unknown",
          "line": 227,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "with_suffix",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 233,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "unlink",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        }
      ],
      "call_count": 36
    },
    {
      "name": "backup_json_spec",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 247,
      "language": "python",
      "docstring": "Create a backup copy of the JSON spec file in the .backups/ directory.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    suffix: Backup file suffix (default: .backup)\n\nReturns:\n    Path to backup file if created, None otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "suffix",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[Path]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "save_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 227,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "test_create_backup_of_existing_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 170,
          "call_type": "function_call"
        },
        {
          "name": "test_backup_nonexistent_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "test_multiple_backups_dont_overwrite",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "test_multiple_backups_dont_overwrite",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_backup_before_modification",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 275,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_spec_file",
          "file": "unknown",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "ensure_backups_directory",
          "file": "unknown",
          "line": 265,
          "call_type": "function_call"
        },
        {
          "name": "copy2",
          "file": "unknown",
          "line": 271,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 274,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_validate_spec_structure",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 278,
      "language": "python",
      "docstring": "Validate basic JSON spec file structure.\n\nArgs:\n    spec_data: Spec data dictionary\n\nReturns:\n    True if valid, False otherwise",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "save_json_spec",
          "file": "src/claude_skills/claude_skills/common/spec.py",
          "line": 218,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 298,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 303,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 317,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_node",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 323,
      "language": "python",
      "docstring": "Get a specific node from the state hierarchy.\n\nArgs:\n    spec_data: JSON spec file data\n    node_id: Node identifier\n\nReturns:\n    Node data dictionary or None if not found",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "node_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_task",
          "file": "src/claude_skills/claude_skills/common/query_operations.py",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "get_task_info",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "test_get_existing_task_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 203,
          "call_type": "function_call"
        },
        {
          "name": "test_get_existing_phase_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "test_get_nonexistent_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "test_get_node_from_empty_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 230,
          "call_type": "function_call"
        },
        {
          "name": "test_get_node_validates_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py",
          "line": 237,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 334,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "update_node",
      "file": "src/claude_skills/claude_skills/common/spec.py",
      "line": 338,
      "language": "python",
      "docstring": "Update a node in the state hierarchy.\n\nSpecial handling for metadata: existing metadata fields are preserved\nand merged with new metadata fields, rather than being replaced entirely.\n\nArgs:\n    spec_data: JSON spec file data\n    node_id: Node identifier\n    updates: Dictionary of fields to update\n\nReturns:\n    True if node exists and was updated, False otherwise",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "node_id",
          "type": "str",
          "default": null
        },
        {
          "name": "updates",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "mark_task_journaled",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 234,
          "call_type": "function_call"
        },
        {
          "name": "mark_task_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 123,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 362,
          "call_type": "method_call"
        },
        {
          "name": "copy",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "get_spec_statistics",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "line": 19,
      "language": "python",
      "docstring": "Get comprehensive statistics about a spec file.\n\nAnalyzes the spec document and extracts:\n- File size and line count\n- Task/phase/verification counts\n- Frontmatter metadata\n- JSON spec file info (if available)\n\nArgs:\n    spec_file: Path to spec markdown file\n    json_spec_file: Optional path to JSON spec (auto-detected if not provided)\n\nReturns:\n    Dictionary with spec statistics and metrics\n\nExample:\n    >>> stats = get_spec_statistics(Path(\"specs/active/my-spec.md\"))\n    >>> print(f\"Tasks: {stats['task_count']}, Phases: {stats['phase_count']}\")",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Path",
          "default": null
        },
        {
          "name": "json_spec_file",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 60,
          "call_type": "function_call"
        },
        {
          "name": "readlines",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "count_spec_elements",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "extract_frontmatter",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get_json_spec_metadata",
          "file": "unknown",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "get_json_spec_metadata",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "count_spec_elements",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "line": 100,
      "language": "python",
      "docstring": "Count tasks, phases, verifications, and subtasks in spec content.\n\nArgs:\n    spec_content: Full spec markdown content as string\n\nReturns:\n    Dictionary with counts for each element type\n\nExample:\n    >>> with open(\"spec.md\") as f:\n    ...     content = f.read()\n    >>> counts = count_spec_elements(content)\n    >>> print(counts)\n    {'task_count': 15, 'subtask_count': 42, 'phase_count': 3, 'verify_count': 8}",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_spec_statistics",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "analyze_spec_complexity",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 215,
          "call_type": "function_call"
        },
        {
          "name": "compare_spec_files",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 276,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 126,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 134,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "get_json_spec_metadata",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "line": 143,
      "language": "python",
      "docstring": "Extract metadata from JSON spec.\n\nArgs:\n    spec_data: JSON spec file data dictionary\n\nReturns:\n    Dictionary with JSON spec metadata\n\nExample:\n    >>> with open(\"specs/active/my-spec.json\") as f:\n    ...     spec_data = json.load(f)\n    >>> metadata = get_json_spec_metadata(spec_data)\n    >>> print(f\"Last updated: {metadata['last_updated']}\")",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_spec_statistics",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "get_spec_statistics",
          "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "spec_stats",
          "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
          "line": 151,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 173,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "analyze_spec_complexity",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "line": 188,
      "language": "python",
      "docstring": "Analyze spec complexity metrics.\n\nProvides insights into spec complexity including:\n- Average tasks per phase\n- Average subtasks per task\n- Depth of task hierarchy\n- Verification coverage ratio\n\nArgs:\n    spec_file: Path to spec markdown file\n\nReturns:\n    Dictionary with complexity metrics\n\nExample:\n    >>> complexity = analyze_spec_complexity(Path(\"specs/active/my-spec.md\"))\n    >>> print(f\"Average tasks per phase: {complexity['avg_tasks_per_phase']}\")",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "count_spec_elements",
          "file": "unknown",
          "line": 215,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 231,
          "call_type": "function_call"
        },
        {
          "name": "extract_frontmatter",
          "file": "unknown",
          "line": 236,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "compare_spec_files",
      "file": "src/claude_skills/claude_skills/common/spec_analysis.py",
      "line": 246,
      "language": "python",
      "docstring": "Compare markdown spec counts to JSON spec counts.\n\nIdentifies mismatches between the markdown spec document and JSON spec,\nwhich may indicate synchronization issues.\n\nArgs:\n    md_spec_file: Path to spec markdown file\n    json_spec_file: Path to JSON spec file\n\nReturns:\n    Dictionary with comparison results and any discrepancies\n\nExample:\n    >>> comparison = compare_spec_files(md_path, json_path)\n    >>> if comparison['has_mismatches']:\n    ...     print(\"Warning: Markdown and JSON specs are out of sync\")",
      "parameters": [
        {
          "name": "md_spec_file",
          "type": "Path",
          "default": null
        },
        {
          "name": "json_spec_file",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        },
        {
          "name": "count_spec_elements",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 278,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 301,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 314,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 318,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 324,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 328,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "validate_status",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 198,
      "language": "python",
      "docstring": "Validate status field value",
      "parameters": [
        {
          "name": "status",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_nodes",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "_build_status_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 392,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 2
    },
    {
      "name": "validate_node_type",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 204,
      "language": "python",
      "docstring": "Validate node type field value",
      "parameters": [
        {
          "name": "node_type",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_nodes",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 334,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "validate_spec_id_format",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 210,
      "language": "python",
      "docstring": "Validate spec_id follows recommended format: {feature}-{YYYY-MM-DD}-{nnn}",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_structure",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 178,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "bool",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "match",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "validate_iso8601_date",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 216,
      "language": "python",
      "docstring": "Validate ISO 8601 date format",
      "parameters": [
        {
          "name": "date_str",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "validate_structure",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 196,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "bool",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "match",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "normalize_message_text",
      "file": "src/claude_skills/claude_skills/common/validation.py",
      "line": 226,
      "language": "python",
      "docstring": "Strip glyphs/severity prefixes from validation messages for consistent comparison.",
      "parameters": [
        {
          "name": "raw",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_build_enhanced_errors",
          "file": "src/claude_skills/claude_skills/common/hierarchy_validation.py",
          "line": 132,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "strip",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 236,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "match",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "end",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "lstrip",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_parser_from_module",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 35,
      "language": "python",
      "docstring": "Import a CLI module and extract its ArgumentParser.\n\nThis function attempts to get the parser by:\n1. Looking for a get_parser() function\n2. Calling main() with --help and capturing the parser\n3. Looking for a global 'parser' variable",
      "parameters": [
        {
          "name": "module_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "argparse.ArgumentParser",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_documentation",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 288,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "import_module",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "get_parser",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "create_parser",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "redirect_stdout",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "StringIO",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "redirect_stderr",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "StringIO",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "main",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_argument",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 105,
      "language": "python",
      "docstring": "Format a single argument for documentation.",
      "parameters": [
        {
          "name": "action",
          "type": "argparse.Action",
          "default": null
        }
      ],
      "return_type": "Tuple[str, str]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_global_options",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "generate_command_reference",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "generate_command_reference",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "generate_simple_usage",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 245,
          "call_type": "function_call"
        },
        {
          "name": "generate_simple_usage",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 254,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "join",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "generate_global_options",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 128,
      "language": "python",
      "docstring": "Generate markdown for global options section.",
      "parameters": [
        {
          "name": "parser",
          "type": "argparse.ArgumentParser",
          "default": null
        },
        {
          "name": "skill_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_documentation",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 304,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "format_argument",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "extract_subparsers",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 148,
      "language": "python",
      "docstring": "Extract subparsers from an ArgumentParser.",
      "parameters": [
        {
          "name": "parser",
          "type": "argparse.ArgumentParser",
          "default": null
        }
      ],
      "return_type": "Optional[Dict[str, argparse.ArgumentParser]]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_documentation",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 296,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_command_reference",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 160,
      "language": "python",
      "docstring": "Generate markdown for the Command Reference section.",
      "parameters": [
        {
          "name": "subparsers",
          "type": "Dict[str, argparse.ArgumentParser]",
          "default": null
        },
        {
          "name": "skill_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_documentation",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 309,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "format_argument",
          "file": "unknown",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "format_argument",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_simple_usage",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 220,
      "language": "python",
      "docstring": "Generate usage section for CLIs without subcommands.",
      "parameters": [
        {
          "name": "parser",
          "type": "argparse.ArgumentParser",
          "default": null
        },
        {
          "name": "skill_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_documentation",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 311,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "format_argument",
          "file": "unknown",
          "line": 245,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "format_argument",
          "file": "unknown",
          "line": 254,
          "call_type": "function_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 256,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_documentation",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 267,
      "language": "python",
      "docstring": "Generate complete documentation for a skill.\n\nArgs:\n    skill_name: Name of the skill (e.g., 'sdd-validate')\n    sections: List of sections to include. Options: 'global', 'commands', 'usage'\n             If None, includes all applicable sections.\n\nReturns:\n    Generated markdown documentation",
      "parameters": [
        {
          "name": "skill_name",
          "type": "str",
          "default": null
        },
        {
          "name": "sections",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 345,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "unknown",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "extract_subparsers",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "generate_global_options",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 309,
          "call_type": "method_call"
        },
        {
          "name": "generate_command_reference",
          "file": "unknown",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "generate_simple_usage",
          "file": "unknown",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "main",
      "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
      "line": 316,
      "language": "python",
      "docstring": "Main entry point for the documentation generator.",
      "parameters": [],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "cmd_gendocs",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 657,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 318,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 324,
          "call_type": "method_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 324,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "parse_args",
          "file": "unknown",
          "line": 341,
          "call_type": "method_call"
        },
        {
          "name": "generate_documentation",
          "file": "unknown",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 350,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 352,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 355,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 360,
          "call_type": "function_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "check_permissions",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "line": 28,
      "language": "python",
      "docstring": "Check if SDD permissions are configured for the project.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 174,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 49,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 63,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "find_active_work",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "line": 70,
      "language": "python",
      "docstring": "Find all active SDD specifications with resumable work.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 284,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 119,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_output",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "line": 126,
      "language": "python",
      "docstring": "Format active work as human-readable text with last-accessed task info.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 286,
          "call_type": "function_call"
        },
        {
          "name": "test_format_output_shows_last_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "test_format_output_no_last_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "test_format_output_no_active_specs",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "test_format_output_no_specs_directory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "test_get_session_state_called_with_correct_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "test_multiple_in_progress_tasks_display",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 302,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "get_session_state",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 156,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 173,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 191,
          "call_type": "function_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 210,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 214,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "get_session_info",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "line": 224,
      "language": "python",
      "docstring": "Get session state information as JSON.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "test_get_session_info_with_last_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "test_get_session_info_no_last_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "test_get_session_info_no_specs_dir",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "test_get_session_state_called_with_correct_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py",
          "line": 252,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 238,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "get_session_state",
          "file": "unknown",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 253,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "main",
      "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
      "line": 259,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "cmd_gendocs",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 657,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 276,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "parse_args",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "check_permissions",
          "file": "unknown",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "find_active_work",
          "file": "unknown",
          "line": 284,
          "call_type": "function_call"
        },
        {
          "name": "format_output",
          "file": "unknown",
          "line": 286,
          "call_type": "function_call"
        },
        {
          "name": "get_session_info",
          "file": "unknown",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "print_help",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "update_permissions",
      "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
      "line": 55,
      "language": "python",
      "docstring": "Update .claude/settings.json with SDD permissions.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 172,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "check_permissions",
      "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
      "line": 116,
      "language": "python",
      "docstring": "Check if SDD permissions are configured.",
      "parameters": [
        {
          "name": "project_root",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 174,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 128,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 134,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "all",
          "file": "unknown",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 147,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 149,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "main",
      "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
      "line": 157,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "cmd_gendocs",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 657,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "ArgumentParser",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "add_subparsers",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "parse_args",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "update_permissions",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "check_permissions",
          "file": "unknown",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "print_help",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "_dump_json",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 46,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "payload",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_print_if_json",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "_handle_error",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 62,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dump",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_maybe_json",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 51,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "payload",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 72,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 118,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_class",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_function",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "cmd_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "cmd_search",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 500,
          "call_type": "function_call"
        },
        {
          "name": "cmd_context",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 516,
          "call_type": "function_call"
        },
        {
          "name": "cmd_describe_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 532,
          "call_type": "function_call"
        },
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 543,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 633,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 670,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callers",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callees",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 724,
          "call_type": "function_call"
        },
        {
          "name": "cmd_call_graph",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 770,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 822,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 830,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 836,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 866,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 874,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 880,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 910,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 918,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 924,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 954,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 962,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 968,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "cmd_run",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 152,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        }
      ],
      "call_count": 39
    },
    {
      "name": "_ensure_query",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 58,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "Optional[DocumentationQuery]",
      "complexity": 22,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_find_class",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_function",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 440,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 451,
          "call_type": "function_call"
        },
        {
          "name": "cmd_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "cmd_search",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "cmd_context",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 507,
          "call_type": "function_call"
        },
        {
          "name": "cmd_describe_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 523,
          "call_type": "function_call"
        },
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 539,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 603,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 640,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callers",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 678,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callees",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 714,
          "call_type": "function_call"
        },
        {
          "name": "cmd_call_graph",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 750,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 808,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 852,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 896,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 940,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "check_docs_exist",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 72,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "check_documentation_staleness",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 118,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        }
      ],
      "call_count": 19
    },
    {
      "name": "_results_to_json",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 158,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "results",
          "type": "List[QueryResult]",
          "default": null
        },
        {
          "name": "include_meta",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_find_class",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_function",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "cmd_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "cmd_search",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 500,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 633,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 670,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "_context_to_json",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 172,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "context",
          "type": "Dict[str, List[QueryResult]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[Dict[str, Any]]]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_context",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 516,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_print_results",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 179,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "results",
          "type": "List[QueryResult]",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_find_class",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_function",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 435,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 480,
          "call_type": "function_call"
        },
        {
          "name": "cmd_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 491,
          "call_type": "function_call"
        },
        {
          "name": "cmd_search",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 502,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 598,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 635,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 672,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "format_result",
          "file": "unknown",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 187,
          "call_type": "function_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "format_result",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 190,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "result",
          "type": "QueryResult",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 29,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_print_results",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 186,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 221,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 224,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "format",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 248,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 256,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_call_graph_as_dot",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 261,
      "language": "python",
      "docstring": "Format call graph as GraphViz DOT format.",
      "parameters": [
        {
          "name": "graph",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_call_graph",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 774,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 281,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 287,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 289,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "print_context",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 296,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "context",
          "type": "Dict[str, List[QueryResult]]",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_context",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 518,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "sum",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 298,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 301,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 301,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 305,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 312,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 315,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 315,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 319,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 323,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 323,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 328,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 331,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 332,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 336,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 342,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 354,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "print_module_summary",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 357,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "summary",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "verbose",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_describe_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 534,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 359,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 361,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 362,
          "call_type": "function_call"
        },
        {
          "name": "format",
          "file": "unknown",
          "line": 363,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 365,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 365,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 370,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 371,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 374,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 374,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 375,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 376,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 377,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 379,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 380,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 383,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 385,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 387,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 388,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 389,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 391,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 394,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 397,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 399,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 402,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 403,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 404,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 407,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 409,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_find_class",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 417,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "find_class",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 424,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_find_function",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 428,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "find_function",
          "file": "unknown",
          "line": 432,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 435,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_find_module",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 439,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 440,
          "call_type": "function_call"
        },
        {
          "name": "find_module",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_complexity",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 450,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 451,
          "call_type": "function_call"
        },
        {
          "name": "get_high_complexity",
          "file": "unknown",
          "line": 454,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 457,
          "call_type": "function_call"
        },
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 461,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 471,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 473,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 480,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_dependencies",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 484,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "get_dependencies",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 491,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_search",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 495,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "search_entities",
          "file": "unknown",
          "line": 499,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 500,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 500,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 502,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_context",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 506,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 507,
          "call_type": "function_call"
        },
        {
          "name": "get_context_for_area",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 516,
          "call_type": "function_call"
        },
        {
          "name": "_context_to_json",
          "file": "unknown",
          "line": 516,
          "call_type": "function_call"
        },
        {
          "name": "print_context",
          "file": "unknown",
          "line": 518,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_describe_module",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 522,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 523,
          "call_type": "function_call"
        },
        {
          "name": "describe_module",
          "file": "unknown",
          "line": 526,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 532,
          "call_type": "function_call"
        },
        {
          "name": "print_module_summary",
          "file": "unknown",
          "line": 534,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_stats",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 538,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 539,
          "call_type": "function_call"
        },
        {
          "name": "get_stats",
          "file": "unknown",
          "line": 542,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 543,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 545,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 546,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 547,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 549,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 549,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 550,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 552,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 553,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 553,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 554,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 555,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 555,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 556,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 557,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 557,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 558,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 558,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 559,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 559,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 560,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 560,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 561,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_list_classes",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 565,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "list_classes",
          "file": "unknown",
          "line": 569,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 576,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 580,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 586,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 593,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 598,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_list_functions",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 602,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 603,
          "call_type": "function_call"
        },
        {
          "name": "list_functions",
          "file": "unknown",
          "line": 606,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 609,
          "call_type": "function_call"
        },
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 613,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 617,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 623,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 630,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 633,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 633,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 635,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_list_modules",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 639,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 640,
          "call_type": "function_call"
        },
        {
          "name": "list_modules",
          "file": "unknown",
          "line": 643,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 650,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 660,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 660,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 667,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 670,
          "call_type": "function_call"
        },
        {
          "name": "_results_to_json",
          "file": "unknown",
          "line": 670,
          "call_type": "function_call"
        },
        {
          "name": "_print_results",
          "file": "unknown",
          "line": 672,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_callers",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 676,
      "language": "python",
      "docstring": "Show functions that call the specified function.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 678,
          "call_type": "function_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 682,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 693,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 694,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 697,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 697,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 698,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 699,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 700,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 701,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 702,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 705,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 707,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_callees",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 712,
      "language": "python",
      "docstring": "Show functions called by the specified function.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 714,
          "call_type": "function_call"
        },
        {
          "name": "get_callees",
          "file": "unknown",
          "line": 718,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 724,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 729,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 730,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 733,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 733,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 734,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 735,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 736,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 737,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 738,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 741,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 742,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 743,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_call_graph",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 748,
      "language": "python",
      "docstring": "Build and display call graph for a function.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 750,
          "call_type": "function_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 755,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 763,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 764,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 768,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 770,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 774,
          "call_type": "function_call"
        },
        {
          "name": "format_call_graph_as_dot",
          "file": "unknown",
          "line": 774,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 778,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 779,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 780,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 781,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 781,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 781,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 782,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 784,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 785,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 787,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 788,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 788,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 789,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 791,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 791,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 793,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 795,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 796,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 797,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 798,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 799,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 800,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 802,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_trace_entry",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 806,
      "language": "python",
      "docstring": "Trace execution flow from an entry function.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 808,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 814,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 815,
          "call_type": "function_call"
        },
        {
          "name": "trace_execution_flow",
          "file": "unknown",
          "line": 819,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 821,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 822,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 824,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 830,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 832,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 836,
          "call_type": "function_call"
        },
        {
          "name": "format_json_output",
          "file": "unknown",
          "line": 840,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 841,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "unknown",
          "line": 845,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 846,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_trace_data",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 850,
      "language": "python",
      "docstring": "Trace data object lifecycle through the codebase.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 852,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 858,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 859,
          "call_type": "function_call"
        },
        {
          "name": "trace_data_lifecycle",
          "file": "unknown",
          "line": 863,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 865,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 866,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 868,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 874,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 876,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 880,
          "call_type": "function_call"
        },
        {
          "name": "format_trace_data_json",
          "file": "unknown",
          "line": 884,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 885,
          "call_type": "function_call"
        },
        {
          "name": "format_trace_data_text",
          "file": "unknown",
          "line": 889,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 890,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_impact",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 894,
      "language": "python",
      "docstring": "Analyze impact of changing a function or class.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 896,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 902,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 903,
          "call_type": "function_call"
        },
        {
          "name": "analyze_impact",
          "file": "unknown",
          "line": 907,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 909,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 910,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 912,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 918,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 920,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 924,
          "call_type": "function_call"
        },
        {
          "name": "format_impact_json",
          "file": "unknown",
          "line": 928,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 929,
          "call_type": "function_call"
        },
        {
          "name": "format_impact_text",
          "file": "unknown",
          "line": 933,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 934,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_refactor_candidates",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 938,
      "language": "python",
      "docstring": "Find high-priority refactoring candidates.",
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_ensure_query",
          "file": "unknown",
          "line": 940,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 945,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 946,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 947,
          "call_type": "function_call"
        },
        {
          "name": "find_refactor_candidates",
          "file": "unknown",
          "line": 951,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 953,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 954,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 956,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 962,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 964,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 968,
          "call_type": "function_call"
        },
        {
          "name": "format_refactor_json",
          "file": "unknown",
          "line": 972,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 973,
          "call_type": "function_call"
        },
        {
          "name": "format_refactor_text",
          "file": "unknown",
          "line": 977,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 978,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_doc_query",
      "file": "src/claude_skills/claude_skills/doc_query/cli.py",
      "line": 987,
      "language": "python",
      "docstring": "Register documentation query commands for the unified doc CLI.",
      "parameters": [
        {
          "name": "subparsers",
          "type": "argparse._SubParsersAction",
          "default": null
        },
        {
          "name": "parent_parser",
          "type": "argparse.ArgumentParser",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_register_doc_cli",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 71,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 989,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 990,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 991,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 992,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 994,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 995,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 996,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 997,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 999,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1000,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1001,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1002,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1004,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1005,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1006,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1007,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1008,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1010,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1011,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1012,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1013,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1015,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1016,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1017,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1019,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1020,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1021,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1022,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1023,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1024,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1026,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1027,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1028,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1029,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1030,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1031,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1033,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1034,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1036,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1037,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1038,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1039,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1040,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1042,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1043,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1044,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1045,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1046,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1048,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1049,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1050,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1051,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1053,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1054,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1055,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1057,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1058,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1059,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1061,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1062,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1063,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1064,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1065,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1066,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1068,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1069,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1070,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1071,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1072,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1074,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1075,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1076,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1077,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1078,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1080,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1081,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1082,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1083,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1084,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1086,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1087,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1088,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1089,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1090,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "check_docs_exist",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 1446,
      "language": "python",
      "docstring": "Check if documentation files exist.\n\nArgs:\n    docs_path: Path to docs directory or documentation.json\n\nReturns:\n    True if documentation exists",
      "parameters": [
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 62,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 1457,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 1461,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 1464,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "check_documentation_staleness",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 1467,
      "language": "python",
      "docstring": "Check if documentation is stale by comparing generation time with source file modifications.\n\nArgs:\n    docs_path: Path to docs directory or documentation.json\n    source_dir: Path to source directory to check. If None, uses parent of docs directory.\n\nReturns:\n    Dictionary with staleness information:\n    {\n        'is_stale': bool,\n        'docs_generated_at': str (ISO timestamp),\n        'latest_source_modification': str (ISO timestamp),\n        'message': str (human-readable message),\n        'docs_age_seconds': int,\n        'newest_file': str (path to newest source file),\n        'checked_files_count': int\n    }",
      "parameters": [
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "source_dir",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 29,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 84,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 1496,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 1500,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 1504,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 1518,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 1519,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 1529,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 1533,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 1533,
          "call_type": "method_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 1548,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 1548,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 1558,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 1568,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 1586,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 1586,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 1587,
          "call_type": "function_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 1590,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 1592,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 1594,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 1596,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 1598,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 1602,
          "call_type": "method_call"
        },
        {
          "name": "walk",
          "file": "unknown",
          "line": 1606,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 1614,
          "call_type": "function_call"
        },
        {
          "name": "endswith",
          "file": "unknown",
          "line": 1614,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 1617,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 1621,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 1634,
          "call_type": "function_call"
        },
        {
          "name": "fromtimestamp",
          "file": "unknown",
          "line": 1649,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 1656,
          "call_type": "method_call"
        },
        {
          "name": "timezone",
          "file": "unknown",
          "line": 1656,
          "call_type": "function_call"
        },
        {
          "name": "timedelta",
          "file": "unknown",
          "line": 1656,
          "call_type": "function_call"
        },
        {
          "name": "astimezone",
          "file": "unknown",
          "line": 1658,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 1663,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 1665,
          "call_type": "function_call"
        },
        {
          "name": "total_seconds",
          "file": "unknown",
          "line": 1665,
          "call_type": "method_call"
        },
        {
          "name": "_format_age",
          "file": "unknown",
          "line": 1681,
          "call_type": "function_call"
        },
        {
          "name": "_format_age",
          "file": "unknown",
          "line": 1683,
          "call_type": "function_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 1688,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_format_age",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 1696,
      "language": "python",
      "docstring": "Format age in seconds as human-readable string.",
      "parameters": [
        {
          "name": "seconds",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "check_documentation_staleness",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1681,
          "call_type": "function_call"
        },
        {
          "name": "check_documentation_staleness",
          "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
          "line": 1683,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 2
    },
    {
      "name": "load_documentation",
      "file": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "line": 1711,
      "language": "python",
      "docstring": "Convenience function to load documentation.\n\nArgs:\n    docs_path: Path to docs directory or documentation.json\n\nReturns:\n    Loaded DocumentationQuery object",
      "parameters": [
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "DocumentationQuery",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "load",
          "file": "unknown",
          "line": 1722,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "get_task_context",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 314,
      "language": "python",
      "docstring": "Get context for a task (convenience function).\n\nArgs:\n    task_description: Description of the task\n    docs_path: Optional path to documentation\n\nReturns:\n    Dict with task context",
      "parameters": [
        {
          "name": "task_description",
          "type": "str",
          "default": null
        },
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "suggest_files_for_task",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "get_task_context",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 407,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_extract_keywords",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "get_stats",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "find_class",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "find_function",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "find_module",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "_deduplicate_results",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "_deduplicate_results",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "_deduplicate_results",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "describe_module",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get_dependencies",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 123,
          "call_type": "function_call"
        },
        {
          "name": "get_task_context",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "suggest_files_for_task",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 329,
      "language": "python",
      "docstring": "Suggest files for a task (convenience function).\n\nArgs:\n    task_description: Description of the task\n    docs_path: Optional path to documentation\n\nReturns:\n    List of suggested file paths",
      "parameters": [
        {
          "name": "task_description",
          "type": "str",
          "default": null
        },
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "suggest_files_for_task",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 341,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 415,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_task_context",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "suggest_files_for_task",
          "file": "unknown",
          "line": 341,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "find_similar_implementations",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 344,
      "language": "python",
      "docstring": "Find similar implementations (convenience function).\n\nArgs:\n    feature_name: Feature name or pattern\n    docs_path: Optional path to documentation\n\nReturns:\n    List of similar entities",
      "parameters": [
        {
          "name": "feature_name",
          "type": "str",
          "default": null
        },
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "List[QueryResult]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_similar_implementations",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 356,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 422,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "search_entities",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "find_similar_implementations",
          "file": "unknown",
          "line": 356,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_test_context",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 359,
      "language": "python",
      "docstring": "Get test context for a module (convenience function).\n\nArgs:\n    module_path: Path to the module\n    docs_path: Optional path to documentation\n\nReturns:\n    Dict with test context",
      "parameters": [
        {
          "name": "module_path",
          "type": "str",
          "default": null
        },
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_test_context",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 429,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "describe_module",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "find_function",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "find_class",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "get_test_context",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_impact_analysis",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 374,
      "language": "python",
      "docstring": "Get impact analysis for a module (convenience function).\n\nArgs:\n    module_path: Path to the module\n    docs_path: Optional path to documentation\n\nReturns:\n    Dict with impact analysis",
      "parameters": [
        {
          "name": "module_path",
          "type": "str",
          "default": null
        },
        {
          "name": "docs_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_impact_analysis",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 386,
          "call_type": "method_call"
        },
        {
          "name": "main",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 438,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "describe_module",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "get_dependencies",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "get_dependencies",
          "file": "unknown",
          "line": 259,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 264,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 267,
          "call_type": "function_call"
        },
        {
          "name": "get_impact_analysis",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "main",
      "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
      "line": 389,
      "language": "python",
      "docstring": "Main CLI entry point for sdd-integration commands.",
      "parameters": [],
      "return_type": null,
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/cli/sdd/__init__.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "cmd_gendocs",
          "file": "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "get_parser_from_module",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/generate_docs.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/doc_query/sdd_integration.py",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 657,
          "call_type": "method_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 393,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 394,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 396,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 397,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 398,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "exit",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "get_task_context",
          "file": "unknown",
          "line": 407,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 408,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 409,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 409,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 411,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 413,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 414,
          "call_type": "method_call"
        },
        {
          "name": "suggest_files_for_task",
          "file": "unknown",
          "line": 415,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 416,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "find_similar_implementations",
          "file": "unknown",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 423,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 425,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 427,
          "call_type": "function_call"
        },
        {
          "name": "get_test_context",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 431,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 431,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 436,
          "call_type": "function_call"
        },
        {
          "name": "get_impact_analysis",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 439,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 440,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 443,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "exit",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "analyze_impact",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 13,
      "language": "python",
      "docstring": "Analyze the impact of changing a function or class.\n\nCalculates the \"blast radius\" showing all directly and indirectly affected code,\ntest coverage, and risk assessment with refactoring recommendations.\n\nArgs:\n    query: DocumentationQuery instance\n    entity_name: Name of the function or class to analyze\n    depth: Maximum depth for indirect dependency traversal (default: 2)\n\nReturns:\n    Dictionary with keys:\n    - entity_name: Name of the analyzed entity\n    - entity_type: 'function' or 'class'\n    - entity_info: Basic entity information\n    - blast_radius: Dict with direct_dependents, indirect_dependents\n    - test_coverage: Dict with test files and estimated coverage\n    - risk_assessment: Dict with score, level, factors\n    - recommendations: List of actionable recommendations\n    - summary: Statistics about the impact\n\nExample:\n    >>> query = DocumentationQuery()\n    >>> query.load()\n    >>> result = analyze_impact(query, \"load\", depth=2)\n    >>> print(f\"Risk level: {result['risk_assessment']['level']}\")",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "entity_name",
          "type": "str",
          "default": null
        },
        {
          "name": "depth",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 907,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_find_entity",
          "file": "unknown",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "calculate_blast_radius",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "find_test_coverage",
          "file": "unknown",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "calculate_risk_score",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "generate_recommendations",
          "file": "unknown",
          "line": 90,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 110,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 112,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_find_entity",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 128,
      "language": "python",
      "docstring": "Find entity and determine its type.\n\nArgs:\n    query: DocumentationQuery instance\n    entity_name: Name to search for\n\nReturns:\n    Tuple of (entity_type, entity_info) or (None, None) if not found",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "entity_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Tuple[Optional[str], Optional[Dict[str, Any]]]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "analyze_impact",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 47,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 147,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 148,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "calculate_blast_radius",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 170,
      "language": "python",
      "docstring": "Calculate the blast radius of changing an entity.\n\nFinds all direct dependents and indirect dependents up to specified depth.\n\nArgs:\n    query: DocumentationQuery instance\n    entity_name: Name of the entity\n    entity_type: 'function' or 'class'\n    entity_info: Entity information dictionary\n    depth: Maximum depth for traversal\n\nReturns:\n    Dictionary with:\n    - direct_dependents: List of functions/classes that directly depend on entity\n    - indirect_dependents: List of 2nd+ degree dependents",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "entity_name",
          "type": "str",
          "default": null
        },
        {
          "name": "entity_type",
          "type": "str",
          "default": null
        },
        {
          "name": "entity_info",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "depth",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[Dict[str, Any]]]",
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "analyze_impact",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 77,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "_determine_layer",
          "file": "unknown",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "_determine_layer",
          "file": "unknown",
          "line": 244,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 255,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 279,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 287,
          "call_type": "method_call"
        },
        {
          "name": "_determine_layer",
          "file": "unknown",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_determine_layer",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 303,
      "language": "python",
      "docstring": "Determine architectural layer from file path.\n\nArgs:\n    file_path: Path to file\n\nReturns:\n    Layer name (Presentation, Business Logic, Data, Utility, Core, External)",
      "parameters": [
        {
          "name": "file_path",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "calculate_blast_radius",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "calculate_blast_radius",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 244,
          "call_type": "function_call"
        },
        {
          "name": "calculate_blast_radius",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 288,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 320,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 326,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "find_test_coverage",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 334,
      "language": "python",
      "docstring": "Find test files that cover the entity.\n\nUses heuristics to identify tests that exercise the code.\n\nArgs:\n    query: DocumentationQuery instance\n    entity_name: Name of the entity\n    entity_type: 'function' or 'class'\n    entity_info: Entity information dictionary\n\nReturns:\n    Dictionary with:\n    - test_files: List of test files that reference the entity\n    - estimated_coverage: Percentage estimate (0-100)",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "entity_name",
          "type": "str",
          "default": null
        },
        {
          "name": "entity_type",
          "type": "str",
          "default": null
        },
        {
          "name": "entity_info",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "analyze_impact",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 80,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 361,
          "call_type": "method_call"
        },
        {
          "name": "_is_test_file",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 372,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 374,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 375,
          "call_type": "method_call"
        },
        {
          "name": "min",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_is_test_file",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 392,
      "language": "python",
      "docstring": "Check if file path indicates a test file.",
      "parameters": [
        {
          "name": "file_path",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "find_test_coverage",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 364,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 396,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "calculate_risk_score",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 399,
      "language": "python",
      "docstring": "Calculate risk score for changing the entity.\n\nUses formula: Risk = (direct * 3) + (indirect * 1) + (layers * 5) - (coverage * 0.1)\n\nArgs:\n    blast_radius: Blast radius from calculate_blast_radius()\n    test_coverage: Test coverage from find_test_coverage()\n    entity_info: Entity information\n\nReturns:\n    Dictionary with:\n    - score: Numeric risk score\n    - level: 'low', 'medium', or 'high'\n    - factors: Breakdown of risk factors",
      "parameters": [
        {
          "name": "blast_radius",
          "type": "Dict[str, List[Dict[str, Any]]]",
          "default": null
        },
        {
          "name": "test_coverage",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "entity_info",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "analyze_impact",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 83,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 421,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 427,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 427,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 428,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 450,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_recommendations",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 456,
      "language": "python",
      "docstring": "Generate actionable refactoring recommendations.\n\nArgs:\n    entity_name: Name of the entity\n    entity_type: 'function' or 'class'\n    blast_radius: Blast radius data\n    test_coverage: Test coverage data\n    risk_assessment: Risk assessment data\n\nReturns:\n    List of recommendation strings",
      "parameters": [
        {
          "name": "entity_name",
          "type": "str",
          "default": null
        },
        {
          "name": "entity_type",
          "type": "str",
          "default": null
        },
        {
          "name": "blast_radius",
          "type": "Dict[str, List[Dict[str, Any]]]",
          "default": null
        },
        {
          "name": "test_coverage",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "risk_assessment",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "analyze_impact",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 90,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 482,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 486,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 492,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 503,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 525,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 531,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_dependency_tree",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 539,
      "language": "python",
      "docstring": "Format dependency tree visualization.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with dependency tree",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 735,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 555,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 558,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 558,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 563,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 566,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 568,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 568,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 570,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 572,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 573,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 574,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 574,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 576,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 577,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 580,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 580,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 585,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 588,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 590,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 590,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 592,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 592,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 596,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 598,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 600,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_test_coverage",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 603,
      "language": "python",
      "docstring": "Format test coverage report.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with test coverage",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 739,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 618,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 621,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 621,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 623,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 624,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 625,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 625,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 627,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 628,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 630,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_risk_assessment",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 633,
      "language": "python",
      "docstring": "Format risk assessment display.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with risk assessment",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 743,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 656,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 657,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 658,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 659,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 660,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 661,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 662,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 663,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 664,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 666,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_recommendations",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 669,
      "language": "python",
      "docstring": "Format recommendations section.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with recommendations",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 747,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 501,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 685,
          "call_type": "method_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 686,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 687,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 688,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 690,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "format_summary",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 693,
      "language": "python",
      "docstring": "Format summary statistics.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with summary",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 751,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 446,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 707,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 708,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 709,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 710,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 711,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 712,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 712,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 713,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 714,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 716,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "format_text_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 719,
      "language": "python",
      "docstring": "Format complete text output for impact command.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    Formatted string with all sections",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 845,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 735,
          "call_type": "method_call"
        },
        {
          "name": "format_dependency_tree",
          "file": "unknown",
          "line": 735,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 736,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 739,
          "call_type": "method_call"
        },
        {
          "name": "format_test_coverage",
          "file": "unknown",
          "line": 739,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 740,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 743,
          "call_type": "method_call"
        },
        {
          "name": "format_risk_assessment",
          "file": "unknown",
          "line": 743,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 744,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 747,
          "call_type": "method_call"
        },
        {
          "name": "format_recommendations",
          "file": "unknown",
          "line": 747,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 748,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 751,
          "call_type": "method_call"
        },
        {
          "name": "format_summary",
          "file": "unknown",
          "line": 751,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 753,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_json_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
      "line": 756,
      "language": "python",
      "docstring": "Format impact result as JSON.\n\nArgs:\n    impact_result: Output from analyze_impact()\n\nReturns:\n    JSON string",
      "parameters": [
        {
          "name": "impact_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 840,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dumps",
          "file": "unknown",
          "line": 766,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "find_refactor_candidates",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 14,
      "language": "python",
      "docstring": "Find high-priority refactoring candidates.\n\nIdentifies functions that would benefit most from refactoring by combining\ncomplexity metrics with usage data. Priority score = complexity \u00d7 dependents.\n\nArgs:\n    query: DocumentationQuery instance\n    min_complexity: Minimum complexity threshold (default: 10)\n    limit: Maximum number of candidates to return (default: 20)\n\nReturns:\n    Dictionary with keys:\n    - candidates: List of candidate dictionaries sorted by priority\n    - quick_wins: Subset with high complexity, low dependents\n    - major_refactors: Subset with high complexity, high dependents\n    - summary: Statistics about the analysis\n\nExample:\n    >>> query = DocumentationQuery()\n    >>> query.load()\n    >>> result = find_refactor_candidates(query, min_complexity=15, limit=10)\n    >>> print(f\"Found {len(result['candidates'])} candidates\")",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "min_complexity",
          "type": "int",
          "default": null
        },
        {
          "name": "limit",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 951,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "calculate_priority_score",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "identify_quick_wins",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "identify_major_refactors",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 86,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "calculate_priority_score",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 99,
      "language": "python",
      "docstring": "Calculate priority score for a function.\n\nPriority score = complexity \u00d7 dependent_count\nHigher score = higher priority for refactoring\n\nArgs:\n    func: Function dictionary from documentation\n\nReturns:\n    Dictionary with:\n    - name: Function name\n    - file: File path\n    - line: Line number\n    - complexity: Cyclomatic complexity\n    - dependent_count: Number of callers\n    - priority_score: complexity \u00d7 dependents\n    - risk_level: 'high', 'medium', or 'low'",
      "parameters": [
        {
          "name": "func",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 51,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 126,
          "call_type": "function_call"
        },
        {
          "name": "categorize_risk_level",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "categorize_risk_level",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 145,
      "language": "python",
      "docstring": "Categorize risk level for refactoring.\n\nArgs:\n    priority_score: Priority score (complexity \u00d7 dependents)\n    complexity: Cyclomatic complexity\n    dependent_count: Number of dependents\n\nReturns:\n    Risk level: 'high', 'medium', or 'low'\n\nRisk Level Criteria:\n    - High: score > 100 (complex + widely used)\n    - Medium: score 50-100 (moderately risky)\n    - Low: score < 50 (safer to refactor)",
      "parameters": [
        {
          "name": "priority_score",
          "type": "int",
          "default": null
        },
        {
          "name": "complexity",
          "type": "int",
          "default": null
        },
        {
          "name": "dependent_count",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "calculate_priority_score",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 132,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "identify_quick_wins",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 174,
      "language": "python",
      "docstring": "Identify quick win refactoring candidates.\n\nQuick wins are functions with high complexity but low dependent count,\nmeaning they're isolated complexity that's safe to refactor.\n\nCriteria: complexity > 15 AND dependents <= 3\n\nArgs:\n    candidates: List of candidate dictionaries\n\nReturns:\n    Subset of candidates that are quick wins",
      "parameters": [
        {
          "name": "candidates",
          "type": "List[Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 61,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "identify_major_refactors",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 201,
      "language": "python",
      "docstring": "Identify major refactoring candidates.\n\nMajor refactors are functions with high complexity AND high dependent count,\nmeaning they require careful planning and coordination.\n\nCriteria: complexity > 20 AND dependents > 10\n\nArgs:\n    candidates: List of candidate dictionaries\n\nReturns:\n    Subset of candidates that are major refactors",
      "parameters": [
        {
          "name": "candidates",
          "type": "List[Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "find_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 62,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_candidates_list",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 228,
      "language": "python",
      "docstring": "Format candidates list organized by risk level.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with prioritized candidate list",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 485,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 261,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "format_candidate_entry",
          "file": "unknown",
          "line": 264,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 269,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "format_candidate_entry",
          "file": "unknown",
          "line": 272,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 278,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "format_candidate_entry",
          "file": "unknown",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_candidate_entry",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 289,
      "language": "python",
      "docstring": "Format a single candidate entry.\n\nArgs:\n    candidate: Candidate dictionary\n    rank: Overall rank (1-based)\n\nReturns:\n    Formatted string for one candidate",
      "parameters": [
        {
          "name": "candidate",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "rank",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_candidates_list",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 264,
          "call_type": "function_call"
        },
        {
          "name": "format_candidates_list",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 272,
          "call_type": "function_call"
        },
        {
          "name": "format_candidates_list",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 280,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 3
    },
    {
      "name": "format_quick_wins",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 313,
      "language": "python",
      "docstring": "Format quick wins section.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with quick wins",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 489,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 328,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 331,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 338,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 340,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 342,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 343,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 344,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_major_refactors",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 349,
      "language": "python",
      "docstring": "Format major refactors section.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with major refactors",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 495,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 365,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 375,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 376,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 377,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 379,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 380,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 380,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 383,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_recommendations",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 386,
      "language": "python",
      "docstring": "Format general recommendations section.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with recommendations",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 747,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 501,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 411,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 411,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 412,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 413,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 414,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 415,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 416,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 417,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 418,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 422,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 432,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 433,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 435,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 437,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "format_summary",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 440,
      "language": "python",
      "docstring": "Format summary statistics.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with summary",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 751,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 446,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 454,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 455,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 456,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 457,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 458,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 462,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 463,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 466,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 467,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 469,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "format_text_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 472,
      "language": "python",
      "docstring": "Format complete text output for refactor-candidates command.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    Formatted string with all sections",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 845,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 485,
          "call_type": "method_call"
        },
        {
          "name": "format_candidates_list",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 486,
          "call_type": "method_call"
        },
        {
          "name": "format_quick_wins",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 491,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 492,
          "call_type": "method_call"
        },
        {
          "name": "format_major_refactors",
          "file": "unknown",
          "line": 495,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 498,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 501,
          "call_type": "method_call"
        },
        {
          "name": "format_recommendations",
          "file": "unknown",
          "line": 501,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 502,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 505,
          "call_type": "method_call"
        },
        {
          "name": "format_summary",
          "file": "unknown",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 507,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_json_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
      "line": 510,
      "language": "python",
      "docstring": "Format result as JSON.\n\nArgs:\n    result: Output from find_refactor_candidates()\n\nReturns:\n    JSON string",
      "parameters": [
        {
          "name": "result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 840,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dumps",
          "file": "unknown",
          "line": 520,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "trace_data_lifecycle",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 13,
      "language": "python",
      "docstring": "Trace the lifecycle of a data object (class) through the codebase.\n\nAnalyzes how instances of a class are created, used, modified, and destroyed,\nproviding insights into data flow patterns and usage across architectural layers.\n\nArgs:\n    query: DocumentationQuery instance\n    class_name: Name of the class to trace\n    include_properties: Whether to include detailed property access analysis\n\nReturns:\n    Dictionary with keys:\n    - class_name: Name of the traced class\n    - class_info: Basic class information\n    - lifecycle: Dict with creation, read, update, delete operations\n    - data_flow: Flow organized by architectural layer\n    - property_analysis: Property access patterns (if include_properties=True)\n    - summary: Statistics about the lifecycle\n\nExample:\n    >>> query = DocumentationQuery()\n    >>> query.load()\n    >>> result = trace_data_lifecycle(query, \"User\", include_properties=True)\n    >>> print(f\"Found {result['summary']['total_operations']} operations\")",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "class_name",
          "type": "str",
          "default": null
        },
        {
          "name": "include_properties",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 863,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "detect_crud_operations",
          "file": "unknown",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "build_data_flow",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "analyze_property_access",
          "file": "unknown",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 90,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 90,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "detect_crud_operations",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 120,
      "language": "python",
      "docstring": "Detect Create, Read, Update, Delete operations for a class.\n\nUses heuristic analysis of function names, instantiation data,\nand method calls to classify operations.\n\nArgs:\n    query: DocumentationQuery instance\n    class_name: Name of the class being traced\n    class_info: Class information dictionary\n\nReturns:\n    Dictionary with keys 'create', 'read', 'update', 'delete',\n    each containing a list of operation dictionaries with:\n    - function: Function name performing the operation\n    - file: File path\n    - line: Line number\n    - operation_type: Specific operation (e.g., 'constructor', 'getter', 'setter')",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "class_name",
          "type": "str",
          "default": null
        },
        {
          "name": "class_info",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[Dict[str, Any]]]",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "trace_data_lifecycle",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 74,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 179,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 202,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "build_data_flow",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 230,
      "language": "python",
      "docstring": "Build data flow organized by architectural layer.\n\nGroups CRUD operations by layer (Presentation, Business Logic, Data, etc.)\nto show how data flows through the architecture.\n\nArgs:\n    query: DocumentationQuery instance\n    class_name: Name of the class being traced\n    crud_ops: CRUD operations from detect_crud_operations()\n\nReturns:\n    Dictionary mapping layer names to operation categories:\n    {\n        'Presentation': {'create': [...], 'read': [...], ...},\n        'Business Logic': {'create': [...], 'read': [...], ...},\n        ...\n    }",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "class_name",
          "type": "str",
          "default": null
        },
        {
          "name": "crud_ops",
          "type": "Dict[str, List[Dict[str, Any]]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Dict[str, List[str]]]",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "trace_data_lifecycle",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 77,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 275,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 276,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "analyze_property_access",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 298,
      "language": "python",
      "docstring": "Analyze property access patterns for the class.\n\nIdentifies which properties are accessed in which operations,\nhighlighting frequently accessed or modified properties.\n\nArgs:\n    query: DocumentationQuery instance\n    class_name: Name of the class\n    class_info: Class information dictionary\n    crud_ops: CRUD operations from detect_crud_operations()\n\nReturns:\n    Dictionary with property access statistics:\n    - properties: List of property names\n    - access_patterns: Dict mapping properties to access counts\n    - mutation_hot_spots: Properties frequently modified",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "class_name",
          "type": "str",
          "default": null
        },
        {
          "name": "class_info",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "crud_ops",
          "type": "Dict[str, List[Dict[str, Any]]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "trace_data_lifecycle",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 82,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 322,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 341,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 342,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 350,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 351,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_lifecycle_view",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 376,
      "language": "python",
      "docstring": "Format lifecycle visualization showing CRUD flow.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    Formatted string with lifecycle stages",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 575,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 394,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 402,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 406,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 407,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 410,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 413,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 414,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 414,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 417,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 422,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 426,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 431,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 433,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 437,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 438,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 441,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 442,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 443,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 445,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_usage_map",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 450,
      "language": "python",
      "docstring": "Format usage map organized by architectural layer.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    Formatted string with layer breakdown",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 579,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 466,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 468,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 468,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 472,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 472,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 472,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 477,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 479,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 481,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 482,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 483,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 485,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_property_analysis",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 490,
      "language": "python",
      "docstring": "Format property access analysis.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    Formatted string with property analysis",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 584,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 500,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 505,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 512,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 514,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 514,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 515,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 519,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 524,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 525,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 528,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 530,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 532,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 535,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_summary",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 538,
      "language": "python",
      "docstring": "Format summary statistics.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    Formatted string with summary",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 751,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 446,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 551,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 553,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 554,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 555,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 557,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 559,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "format_text_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 562,
      "language": "python",
      "docstring": "Format complete text output for trace-data command.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    Formatted string with all sections",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 845,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 575,
          "call_type": "method_call"
        },
        {
          "name": "format_lifecycle_view",
          "file": "unknown",
          "line": 575,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 576,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 579,
          "call_type": "method_call"
        },
        {
          "name": "format_usage_map",
          "file": "unknown",
          "line": 579,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 580,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 583,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 584,
          "call_type": "method_call"
        },
        {
          "name": "format_property_analysis",
          "file": "unknown",
          "line": 584,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 585,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 588,
          "call_type": "method_call"
        },
        {
          "name": "format_summary",
          "file": "unknown",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 590,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_json_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
      "line": 593,
      "language": "python",
      "docstring": "Format trace result as JSON.\n\nArgs:\n    trace_result: Output from trace_data_lifecycle()\n\nReturns:\n    JSON string",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 840,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dumps",
          "file": "unknown",
          "line": 603,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "trace_execution_flow",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 13,
      "language": "python",
      "docstring": "Trace the execution flow starting from an entry function.\n\nBuilds a call chain showing all functions called (directly or indirectly)\nfrom the specified entry function, with architectural layer detection\nand complexity analysis.\n\nArgs:\n    query: DocumentationQuery instance\n    function_name: Name of the entry function to trace from\n    max_depth: Maximum call chain depth to traverse (default: 5)\n\nReturns:\n    Dictionary with keys:\n    - entry_function: Starting function name\n    - max_depth: Maximum depth used\n    - call_chain: Dict with nodes, edges, layers, hot_spots\n    - summary: Statistics about the trace\n\nExample:\n    >>> query = DocumentationQuery()\n    >>> query.load()\n    >>> result = trace_execution_flow(query, \"main\", max_depth=3)\n    >>> print(f\"Traced {result['summary']['total_functions']} functions\")",
      "parameters": [
        {
          "name": "query",
          "type": "Any",
          "default": null
        },
        {
          "name": "function_name",
          "type": "str",
          "default": null
        },
        {
          "name": "max_depth",
          "type": "int",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 819,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "identify_layers",
          "file": "unknown",
          "line": 80,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "identify_hot_spots",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "min",
          "file": "unknown",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "max",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 107,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "identify_layers",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 123,
      "language": "python",
      "docstring": "Identify architectural layer for each function based on file path patterns.\n\nUses heuristic matching on file paths to classify functions into\narchitectural layers (Presentation, Business Logic, Data, Utility, Core).\n\nArgs:\n    nodes: Dictionary of function nodes with 'file' attribute\n\nReturns:\n    Dictionary mapping function name to layer name\n\nLayer Classification Rules:\n    - Presentation: routes/, cli/, api/, handlers/, controllers/\n    - Business Logic: services/, business/, workflows/, processors/\n    - Data: models/, database/, repositories/, dao/, persistence/\n    - Utility: utils/, helpers/, common/, lib/\n    - Core: Everything else",
      "parameters": [
        {
          "name": "nodes",
          "type": "Dict[str, Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "Dict[str, str]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "trace_execution_flow",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 80,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "identify_hot_spots",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 177,
      "language": "python",
      "docstring": "Identify complexity hot spots in the call chain.\n\nHot spots are functions that exhibit concerning characteristics:\n- High cyclomatic complexity (> 10)\n- High fan-out (many direct calls, > 5)\n- Both high complexity AND high fan-out (critical)\n\nArgs:\n    nodes: Dictionary of function nodes with complexity and calls_count\n\nReturns:\n    List of hot spot dictionaries with:\n    - function: Function name\n    - reason: Why it's flagged\n    - severity: 'high', 'medium', or 'low'\n    - complexity: Complexity score\n    - fan_out: Number of direct calls",
      "parameters": [
        {
          "name": "nodes",
          "type": "Dict[str, Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "trace_execution_flow",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 87,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_tree_view",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 254,
      "language": "python",
      "docstring": "Format trace result as an ASCII tree visualization.\n\nCreates a hierarchical tree showing the call chain from the entry function,\nwith layer annotations, complexity scores, and hot spot markers.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    Formatted tree string with Unicode box-drawing characters\n\nExample Output:\n    main [Presentation] (complexity: 8)\n    \u251c\u2500 process_data [Business Logic] (complexity: 15) \ud83d\udd25\n    \u2502  \u251c\u2500 validate [Utility] (complexity: 3)\n    \u2502  \u2514\u2500 save [Data] (complexity: 5)\n    \u2514\u2500 format_output [Presentation] (complexity: 2)",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 434,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 289,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "build_tree",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 336,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_layer_summary",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 339,
      "language": "python",
      "docstring": "Format layer breakdown summary.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    Formatted string with layer statistics",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 442,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "sorted",
          "file": "unknown",
          "line": 352,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 352,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 354,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 359,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 362,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_hot_spots",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 365,
      "language": "python",
      "docstring": "Format hot spots table.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    Formatted string with hot spots table",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 438,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 380,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 383,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 385,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 387,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 388,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 390,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_summary",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 393,
      "language": "python",
      "docstring": "Format summary statistics.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    Formatted string with summary statistics",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
          "line": 751,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "format_text_output",
          "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
          "line": 446,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 408,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 412,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 414,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "format_text_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 417,
      "language": "python",
      "docstring": "Format complete text output for trace-entry command.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    Formatted string with all sections",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 845,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "format_tree_view",
          "file": "unknown",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 435,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 438,
          "call_type": "method_call"
        },
        {
          "name": "format_hot_spots",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 439,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 442,
          "call_type": "method_call"
        },
        {
          "name": "format_layer_summary",
          "file": "unknown",
          "line": 442,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "format_summary",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 448,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_json_output",
      "file": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
      "line": 451,
      "language": "python",
      "docstring": "Format trace result as JSON.\n\nArgs:\n    trace_result: Output from trace_execution_flow()\n\nReturns:\n    JSON string",
      "parameters": [
        {
          "name": "trace_result",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 840,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dumps",
          "file": "unknown",
          "line": 461,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_dump_json",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 38,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "payload",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_print_if_json",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "_handle_error",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 62,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dump",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_maybe_json",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 43,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "payload",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 72,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 118,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_query",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_class",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_function",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complexity",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "cmd_dependencies",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "cmd_search",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 500,
          "call_type": "function_call"
        },
        {
          "name": "cmd_context",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 516,
          "call_type": "function_call"
        },
        {
          "name": "cmd_describe_module",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 532,
          "call_type": "function_call"
        },
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 543,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_classes",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 596,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_functions",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 633,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_modules",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 670,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callers",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "cmd_callees",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 724,
          "call_type": "function_call"
        },
        {
          "name": "cmd_call_graph",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 770,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 822,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 830,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_entry",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 836,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 866,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 874,
          "call_type": "function_call"
        },
        {
          "name": "cmd_trace_data",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 880,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 910,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 918,
          "call_type": "function_call"
        },
        {
          "name": "cmd_impact",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 924,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 954,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 962,
          "call_type": "function_call"
        },
        {
          "name": "cmd_refactor_candidates",
          "file": "src/claude_skills/claude_skills/doc_query/cli.py",
          "line": 968,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "cmd_run",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 152,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 44,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        }
      ],
      "call_count": 39
    },
    {
      "name": "cmd_check_tools",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 55,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "get_tool_status_dict",
          "file": "unknown",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "get_quick_routing",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "_dump_json",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "print_tool_status",
          "file": "unknown",
          "line": 64,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_consult",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 67,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "print_routing_matrix",
          "file": "unknown",
          "line": 69,
          "call_type": "function_call"
        },
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "should_auto_trigger_consensus",
          "file": "unknown",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_pair_for_failure",
          "file": "unknown",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "unknown",
          "line": 107,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_discover",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 134,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "print_discovery_report",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_run",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 146,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "args",
          "type": "argparse.Namespace",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "list_presets",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "validate_preset",
          "file": "unknown",
          "line": 151,
          "call_type": "function_call"
        },
        {
          "name": "_maybe_json",
          "file": "unknown",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "run_pytest",
          "file": "unknown",
          "line": 158,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_run_tests",
      "file": "src/claude_skills/claude_skills/run_tests/cli.py",
      "line": 172,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "subparsers",
          "type": "argparse._SubParsersAction",
          "default": null
        },
        {
          "name": "parent_parser",
          "type": "argparse.ArgumentParser",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_register_test_cli",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 89,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 173,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "add_mutually_exclusive_group",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "get_presets",
          "file": "unknown",
          "line": 237,
          "call_type": "function_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "load_model_config",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 24,
      "language": "python",
      "docstring": "Load model configuration from config.yaml.\n\nReturns fallback to DEFAULT_MODELS if config not found or invalid.\n\nReturns:\n    Dict with model configuration including priorities and overrides",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_model_for_tool",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "get_flags_for_tool",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 102,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_config_path",
          "file": "unknown",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "safe_load",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_model_for_tool",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 53,
      "language": "python",
      "docstring": "Get the best model for a tool, considering priority and failure-type overrides.\n\nFalls back to hardcoded defaults if configuration not available.\n\nArgs:\n    tool: Tool name (gemini, codex, cursor-agent)\n    failure_type: Optional failure type for override lookup\n\nReturns:\n    Model name to use",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "failure_type",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 322,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_model_config",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "get_flags_for_tool",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 91,
      "language": "python",
      "docstring": "Get additional CLI flags for a tool from configuration.\n\nArgs:\n    tool: Tool name\n\nReturns:\n    List of additional flags",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 318,
          "call_type": "function_call"
        },
        {
          "name": "_build_tool_commands",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 323,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_model_config",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "load_consensus_config",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 116,
      "language": "python",
      "docstring": "Load consensus configuration from config.yaml.\n\nReturns:\n    Dict with consensus configuration (pairs and auto_trigger)",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "should_auto_trigger_consensus",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_pair_for_failure",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 193,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_pairs",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "get_auto_trigger_failures",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_info",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 385,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_config_path",
          "file": "unknown",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "safe_load",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "should_auto_trigger_consensus",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 143,
      "language": "python",
      "docstring": "Check if a failure type should automatically trigger multi-agent consensus.\n\nChecks in order:\n1. Explicit entry for failure_type\n2. Default setting for undefined types\n3. Fallback to False (single-agent)\n\nArgs:\n    failure_type: Type of test failure\n\nReturns:\n    True if consensus should be auto-triggered, False otherwise",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 99,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_consensus_config",
          "file": "unknown",
          "line": 158,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_consensus_pair_for_failure",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 177,
      "language": "python",
      "docstring": "Get the consensus pair to use for a specific failure type.\n\nChecks in order:\n1. Explicit entry for failure_type\n2. Default setting for undefined types\n3. Fallback to \"default\" pair\n\nArgs:\n    failure_type: Type of test failure\n\nReturns:\n    Pair name (e.g., 'default', 'code-focus', 'discovery-focus')\n    Returns 'default' if not configured",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 101,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_consensus_config",
          "file": "unknown",
          "line": 193,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_consensus_pairs",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 214,
      "language": "python",
      "docstring": "Get defined consensus pairs from configuration.\n\nFalls back to hardcoded MULTI_AGENT_PAIRS if not configured.\n\nReturns:\n    Dict mapping pair names to lists of tools",
      "parameters": [],
      "return_type": "Dict[str, List[str]]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1004,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_consensus_config",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_consultation_timeout",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 232,
      "language": "python",
      "docstring": "Get consultation timeout from config (default: 90 seconds).\n\nReturns:\n    Timeout in seconds",
      "parameters": [],
      "return_type": "int",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "run_consultation",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 717,
          "call_type": "function_call"
        },
        {
          "name": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 740,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_config_path",
          "file": "unknown",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 245,
          "call_type": "function_call"
        },
        {
          "name": "safe_load",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "_build_tool_commands",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 299,
      "language": "python",
      "docstring": "Build tool command templates from configuration.\n\nArgs:\n    failure_type: Optional failure type for model override selection\n\nReturns:\n    Dict mapping tool names to command templates",
      "parameters": [
        {
          "name": "failure_type",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[str]]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 327,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 513,
          "call_type": "function_call"
        },
        {
          "name": "run_tool_parallel",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 701,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_model_for_tool",
          "file": "unknown",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "get_flags_for_tool",
          "file": "unknown",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "get_model_for_tool",
          "file": "unknown",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "get_flags_for_tool",
          "file": "unknown",
          "line": 318,
          "call_type": "function_call"
        },
        {
          "name": "get_model_for_tool",
          "file": "unknown",
          "line": 322,
          "call_type": "function_call"
        },
        {
          "name": "get_flags_for_tool",
          "file": "unknown",
          "line": 323,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "get_best_tool",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 330,
      "language": "python",
      "docstring": "Get the best available tool for a given failure type.\n\nArgs:\n    failure_type: Type of test failure\n    available_tools: List of available tool names (auto-detected if None)\n\nReturns:\n    Tool name to use, or None if no tools available",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        },
        {
          "name": "available_tools",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 653,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 694,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 628,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_for_architecture",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_fallback",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_no_tools",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "test_get_best_tool_unknown_type",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 117,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 342,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "format_prompt",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 363,
      "language": "python",
      "docstring": "Format a prompt for external tool consultation.\n\nArgs:\n    failure_type: Type of test failure\n    error_message: The full error message from pytest\n    hypothesis: Your hypothesis about the root cause\n    test_code: Test code snippet (optional)\n    impl_code: Implementation code snippet (optional)\n    context: Additional context (optional)\n    question: Specific question to ask (optional)\n\nReturns:\n    Formatted prompt string",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        },
        {
          "name": "error_message",
          "type": "str",
          "default": null
        },
        {
          "name": "hypothesis",
          "type": "str",
          "default": null
        },
        {
          "name": "test_code",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "impl_code",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "context",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "question",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 657,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1059,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 390,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 391,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 393,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 394,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 399,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 400,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 402,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 408,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 413,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 414,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 415,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 418,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 420,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 428,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 432,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 448,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "read_code_file",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 451,
      "language": "python",
      "docstring": "Read code from a file path.\n\nArgs:\n    file_path: Path to the file\n\nReturns:\n    File contents, or None if file doesn't exist or can't be read",
      "parameters": [
        {
          "name": "file_path",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 645,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 651,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1049,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1054,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 469,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 473,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "run_consultation",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 489,
      "language": "python",
      "docstring": "Run the external tool consultation.\n\nArgs:\n    tool: Tool name (gemini, codex, cursor-agent)\n    prompt: Formatted prompt\n    dry_run: If True, just print the command without running\n    printer: PrettyPrinter instance (creates default if None)\n    failure_type: Optional failure type for model selection\n\nReturns:\n    Exit code from the tool",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        },
        {
          "name": "failure_type",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 494,
          "call_type": "function_call"
        },
        {
          "name": "_run_tool_capture",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 657,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 698,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 668,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 129,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_failure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 147,
          "call_type": "function_call"
        },
        {
          "name": "test_run_consultation_unknown_tool",
          "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py",
          "line": 156,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_build_tool_commands",
          "file": "unknown",
          "line": 513,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 517,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 518,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 522,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 523,
          "call_type": "method_call"
        },
        {
          "name": "copy",
          "file": "unknown",
          "line": 526,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 527,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 530,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 531,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 531,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 532,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 532,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 535,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 536,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 537,
          "call_type": "function_call"
        },
        {
          "name": "get_consultation_timeout",
          "file": "unknown",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 541,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 543,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 546,
          "call_type": "method_call"
        },
        {
          "name": "get_consultation_timeout",
          "file": "unknown",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 547,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 551,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 554,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 558,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 561,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 564,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "print_routing_matrix",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 568,
      "language": "python",
      "docstring": "Print the routing matrix showing which tools to use for each failure type.\n\nArgs:\n    printer: PrettyPrinter instance (creates default if None)",
      "parameters": [
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 69,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "header",
          "file": "unknown",
          "line": 578,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 579,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 581,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 581,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 582,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "consult_with_auto_routing",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 585,
      "language": "python",
      "docstring": "High-level consultation function with auto-routing.\n\nArgs:\n    failure_type: Type of test failure\n    error_message: Error message from pytest\n    hypothesis: Your hypothesis about the root cause\n    test_code_path: Path to test code file (optional)\n    impl_code_path: Path to implementation code file (optional)\n    context: Additional context (optional)\n    question: Specific question (optional)\n    tool: Tool to use (\"auto\" for auto-selection)\n    dry_run: If True, show command without running\n    printer: PrettyPrinter instance (creates default if None)\n\nReturns:\n    Exit code from consultation",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        },
        {
          "name": "error_message",
          "type": "str",
          "default": null
        },
        {
          "name": "hypothesis",
          "type": "str",
          "default": null
        },
        {
          "name": "test_code_path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "impl_code_path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "context",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "question",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1031,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 619,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 622,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 623,
          "call_type": "method_call"
        },
        {
          "name": "get_best_tool",
          "file": "unknown",
          "line": 628,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 630,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 632,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 633,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 636,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 637,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 637,
          "call_type": "method_call"
        },
        {
          "name": "read_code_file",
          "file": "unknown",
          "line": 645,
          "call_type": "function_call"
        },
        {
          "name": "read_code_file",
          "file": "unknown",
          "line": 651,
          "call_type": "function_call"
        },
        {
          "name": "format_prompt",
          "file": "unknown",
          "line": 657,
          "call_type": "function_call"
        },
        {
          "name": "run_consultation",
          "file": "unknown",
          "line": 668,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "run_tool_parallel",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 688,
      "language": "python",
      "docstring": "Run a single tool consultation and capture output.\n\nArgs:\n    tool: Tool name (gemini, codex, cursor-agent)\n    prompt: Formatted prompt\n    failure_type: Optional failure type for model selection\n\nReturns:\n    ConsultationResponse with results",
      "parameters": [
        {
          "name": "tool",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        },
        {
          "name": "failure_type",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "ConsultationResponse",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_tool_commands",
          "file": "unknown",
          "line": 701,
          "call_type": "function_call"
        },
        {
          "name": "copy",
          "file": "unknown",
          "line": 711,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 712,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 714,
          "call_type": "method_call"
        },
        {
          "name": "get_consultation_timeout",
          "file": "unknown",
          "line": 717,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 718,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 725,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 735,
          "call_type": "method_call"
        },
        {
          "name": "get_consultation_timeout",
          "file": "unknown",
          "line": 740,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "analyze_response_similarity",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 759,
      "language": "python",
      "docstring": "Simple heuristic to find consensus points between two responses.\n\nArgs:\n    response1: First response text\n    response2: Second response text\n\nReturns:\n    List of consensus points (simplified)",
      "parameters": [
        {
          "name": "response1",
          "type": "str",
          "default": null
        },
        {
          "name": "response2",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "synthesize_responses",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 851,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 791,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 792,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 796,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 801,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 801,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 802,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 802,
          "call_type": "method_call"
        },
        {
          "name": "intersection",
          "file": "unknown",
          "line": 803,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 806,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 806,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 806,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "synthesize_responses",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 811,
      "language": "python",
      "docstring": "Synthesize multiple consultation responses into unified insights.\n\nArgs:\n    responses: List of ConsultationResponse objects\n\nReturns:\n    Dictionary with synthesis including consensus, unique insights, etc.",
      "parameters": [
        {
          "name": "responses",
          "type": "List[ConsultationResponse]",
          "default": null
        }
      ],
      "return_type": "Dict[str, any]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1112,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 837,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 841,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 845,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 849,
          "call_type": "function_call"
        },
        {
          "name": "analyze_response_similarity",
          "file": "unknown",
          "line": 851,
          "call_type": "function_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 860,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 861,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 866,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 866,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 869,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 870,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 873,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "format_synthesis_output",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 880,
      "language": "python",
      "docstring": "Format and print the synthesis output in a structured way.\n\nArgs:\n    synthesis: Synthesis dictionary from synthesize_responses()\n    responses: List of all ConsultationResponse objects\n    printer: PrettyPrinter instance (creates default if None)",
      "parameters": [
        {
          "name": "synthesis",
          "type": "Dict[str, any]",
          "default": null
        },
        {
          "name": "responses",
          "type": "List[ConsultationResponse]",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 19,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1115,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 896,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 897,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 898,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 902,
          "call_type": "function_call"
        },
        {
          "name": "next",
          "file": "unknown",
          "line": 905,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 907,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 908,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 912,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 914,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 915,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 919,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 921,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 922,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 926,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 927,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 927,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 929,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 932,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 932,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 933,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 936,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 937,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 938,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 942,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 943,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 944,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 947,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 949,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 950,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 952,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 953,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 958,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 959,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 960,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 961,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 964,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 964,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 964,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 965,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 966,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 967,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "consult_multi_agent",
      "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
      "line": 970,
      "language": "python",
      "docstring": "Consult multiple agents in parallel and synthesize their responses.\n\nArgs:\n    failure_type: Type of test failure\n    error_message: Error message from pytest\n    hypothesis: Your hypothesis about the root cause\n    test_code_path: Path to test code file (optional)\n    impl_code_path: Path to implementation code file (optional)\n    context: Additional context (optional)\n    question: Specific question (optional)\n    pair: Which multi-agent pair to use (default, code-focus, discovery-focus)\n    dry_run: If True, show what would be run without running\n    printer: PrettyPrinter instance (creates default if None)\n\nReturns:\n    Exit code (0 if at least one consultation succeeded)",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        },
        {
          "name": "error_message",
          "type": "str",
          "default": null
        },
        {
          "name": "hypothesis",
          "type": "str",
          "default": null
        },
        {
          "name": "test_code_path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "impl_code_path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "context",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "question",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "pair",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "generate_architecture_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 649,
          "call_type": "function_call"
        },
        {
          "name": "generate_ai_context_docs",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 690,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 107,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_consensus_pairs",
          "file": "unknown",
          "line": 1004,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 1007,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1008,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 1008,
          "call_type": "method_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 1008,
          "call_type": "method_call"
        },
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 1014,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1017,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 1018,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1018,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1019,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 1020,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1021,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 1021,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1022,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 1022,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1024,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1027,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 1027,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1029,
          "call_type": "method_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "unknown",
          "line": 1031,
          "call_type": "function_call"
        },
        {
          "name": "read_code_file",
          "file": "unknown",
          "line": 1049,
          "call_type": "function_call"
        },
        {
          "name": "read_code_file",
          "file": "unknown",
          "line": 1054,
          "call_type": "function_call"
        },
        {
          "name": "format_prompt",
          "file": "unknown",
          "line": 1059,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 1070,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1070,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1072,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1073,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1074,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1074,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 1078,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1078,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1079,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 1079,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1080,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1081,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 1085,
          "call_type": "function_call"
        },
        {
          "name": "submit",
          "file": "unknown",
          "line": 1088,
          "call_type": "method_call"
        },
        {
          "name": "as_completed",
          "file": "unknown",
          "line": 1093,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 1096,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 1097,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1099,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 1101,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 1102,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 1106,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 1109,
          "call_type": "function_call"
        },
        {
          "name": "synthesize_responses",
          "file": "unknown",
          "line": 1112,
          "call_type": "function_call"
        },
        {
          "name": "format_synthesis_output",
          "file": "unknown",
          "line": 1115,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_detect_source_directory",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 17,
      "language": "python",
      "docstring": "Auto-detect the source directory for coverage reporting.\n\nReturns:\n    Source directory path if found, None otherwise",
      "parameters": [],
      "return_type": "Optional[str]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_get_presets",
          "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
          "line": 58,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "rglob",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_get_presets",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 48,
      "language": "python",
      "docstring": "Get preset configurations.\n\nThe coverage preset auto-detects the source directory to avoid hard-coding.\n\nReturns:\n    Dictionary of preset configurations",
      "parameters": [],
      "return_type": "Dict[str, Dict]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "<module>",
          "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
          "line": 126,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_detect_source_directory",
          "file": "unknown",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "insert",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "insert",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "build_pytest_command",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 129,
      "language": "python",
      "docstring": "Build the pytest command with the specified configuration.\n\nArgs:\n    preset: Name of the preset to use\n    path: Specific test file or directory to run\n    pattern: Pattern to match test names (used with -k)\n    extra_args: Additional arguments to pass to pytest\n\nReturns:\n    List of command arguments",
      "parameters": [
        {
          "name": "preset",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "pattern",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "extra_args",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "run_pytest",
          "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
          "line": 199,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "extend",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "run_pytest",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 168,
      "language": "python",
      "docstring": "Run pytest with the specified configuration.\n\nArgs:\n    preset: Name of the preset to use\n    path: Specific test file or directory to run\n    pattern: Pattern to match test names (used with -k)\n    extra_args: Additional arguments to pass to pytest\n    printer: PrettyPrinter instance (creates default if None)\n\nReturns:\n    Exit code from pytest",
      "parameters": [
        {
          "name": "preset",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "path",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "pattern",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "extra_args",
          "type": "Optional[List[str]]",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_run",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 158,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "build_pytest_command",
          "file": "unknown",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_presets",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 221,
      "language": "python",
      "docstring": "Get all available presets.\n\nReturns:\n    Dictionary of preset configurations",
      "parameters": [],
      "return_type": "Dict[str, Dict[str, str]]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_run_tests",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 237,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "list_presets",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 231,
      "language": "python",
      "docstring": "Display all available presets.\n\nArgs:\n    printer: PrettyPrinter instance (creates default if None)",
      "parameters": [
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_run",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 148,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "header",
          "file": "unknown",
          "line": 241,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "max",
          "file": "unknown",
          "line": 244,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 244,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 248,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 249,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 250,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "validate_preset",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 253,
      "language": "python",
      "docstring": "Check if a preset name is valid.\n\nArgs:\n    preset: Preset name to validate\n\nReturns:\n    True if valid, False otherwise",
      "parameters": [
        {
          "name": "preset",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_run",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 151,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "get_preset_description",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 266,
      "language": "python",
      "docstring": "Get description for a preset.\n\nArgs:\n    preset: Preset name\n\nReturns:\n    Description string or None if preset doesn't exist",
      "parameters": [
        {
          "name": "preset",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "get_preset_flags",
      "file": "src/claude_skills/claude_skills/run_tests/pytest_runner.py",
      "line": 281,
      "language": "python",
      "docstring": "Get flags for a preset.\n\nArgs:\n    preset: Preset name\n\nReturns:\n    List of flag strings or None if preset doesn't exist",
      "parameters": [
        {
          "name": "preset",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[List[str]]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "find_test_files",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 18,
      "language": "python",
      "docstring": "Find all test files in the project.\n\nArgs:\n    root_dir: Root directory to search from\n\nReturns:\n    List of Path objects for test files",
      "parameters": [
        {
          "name": "root_dir",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[Path]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 337,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 28,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "rglob",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "find_conftest_files",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 41,
      "language": "python",
      "docstring": "Find all conftest.py files.\n\nArgs:\n    root_dir: Root directory to search from\n\nReturns:\n    List of Path objects for conftest.py files",
      "parameters": [
        {
          "name": "root_dir",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[Path]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 338,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "rglob",
          "file": "unknown",
          "line": 52,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "analyze_test_file",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 55,
      "language": "python",
      "docstring": "Analyze a test file for its structure.\n\nArgs:\n    file_path: Path to the test file\n\nReturns:\n    Dictionary with analysis results",
      "parameters": [
        {
          "name": "file_path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_summary_stats",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "collect_all_markers",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 433,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "analyze_conftest",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 121,
      "language": "python",
      "docstring": "Analyze a conftest.py file for fixtures and configuration.\n\nArgs:\n    file_path: Path to conftest.py file\n\nReturns:\n    Dictionary with analysis results",
      "parameters": [
        {
          "name": "file_path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_summary_stats",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "collect_all_fixtures",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 378,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 143,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "findall",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 174,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "get_directory_structure",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 179,
      "language": "python",
      "docstring": "Build a directory structure from test files.\n\nArgs:\n    test_files: List of test file paths\n    root: Root directory path\n\nReturns:\n    Dictionary mapping directory paths to lists of file names",
      "parameters": [
        {
          "name": "test_files",
          "type": "List[Path]",
          "default": null
        },
        {
          "name": "root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 364,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "relative_to",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        },
        {
          "name": "dict",
          "file": "unknown",
          "line": 201,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "print_tree_structure",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 204,
      "language": "python",
      "docstring": "Print directory structure as a tree.\n\nArgs:\n    structure: Directory structure dictionary\n    indent: Indentation level",
      "parameters": [
        {
          "name": "structure",
          "type": "Dict",
          "default": null
        },
        {
          "name": "indent",
          "type": "int",
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 365,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "sorted",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 221,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 222,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_summary_stats",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 225,
      "language": "python",
      "docstring": "Get summary statistics for all test files.\n\nArgs:\n    test_files: List of test file paths\n    conftest_files: List of conftest file paths\n\nReturns:\n    Dictionary with summary statistics",
      "parameters": [
        {
          "name": "test_files",
          "type": "List[Path]",
          "default": null
        },
        {
          "name": "conftest_files",
          "type": "List[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 353,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 238,
          "call_type": "function_call"
        },
        {
          "name": "analyze_test_file",
          "file": "unknown",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 242,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 243,
          "call_type": "function_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "analyze_conftest",
          "file": "unknown",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 248,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 253,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "collect_all_fixtures",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 257,
      "language": "python",
      "docstring": "Collect all fixtures from conftest files.\n\nArgs:\n    conftest_files: List of conftest file paths\n    root: Root directory path\n\nReturns:\n    Dictionary mapping fixture names to their locations",
      "parameters": [
        {
          "name": "conftest_files",
          "type": "List[Path]",
          "default": null
        },
        {
          "name": "root",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, List[str]]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 396,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 268,
          "call_type": "function_call"
        },
        {
          "name": "relative_to",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "analyze_conftest",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 278,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "dict",
          "file": "unknown",
          "line": 280,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "collect_all_markers",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 283,
      "language": "python",
      "docstring": "Collect all markers from test files with usage counts.\n\nArgs:\n    test_files: List of test file paths\n\nReturns:\n    Dictionary mapping marker names to usage counts",
      "parameters": [
        {
          "name": "test_files",
          "type": "List[Path]",
          "default": null
        }
      ],
      "return_type": "Dict[str, int]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_discovery_report",
          "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
          "line": 411,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "defaultdict",
          "file": "unknown",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "analyze_test_file",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "dict",
          "file": "unknown",
          "line": 300,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "print_discovery_report",
      "file": "src/claude_skills/claude_skills/run_tests/test_discovery.py",
      "line": 303,
      "language": "python",
      "docstring": "Print a comprehensive discovery report.\n\nArgs:\n    root_dir: Root directory to analyze\n    show_summary: Show summary statistics only\n    show_tree: Show directory tree structure\n    show_fixtures: Show all fixtures\n    show_markers: Show all markers\n    show_detailed: Show detailed analysis of each file\n    printer: PrettyPrinter instance (creates default if None)\n\nReturns:\n    Exit code (0 for success, 1 for error)",
      "parameters": [
        {
          "name": "root_dir",
          "type": "str",
          "default": null
        },
        {
          "name": "show_summary",
          "type": "bool",
          "default": null
        },
        {
          "name": "show_tree",
          "type": "bool",
          "default": null
        },
        {
          "name": "show_fixtures",
          "type": "bool",
          "default": null
        },
        {
          "name": "show_markers",
          "type": "bool",
          "default": null
        },
        {
          "name": "show_detailed",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 35,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_discover",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 135,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "find_test_files",
          "file": "unknown",
          "line": 337,
          "call_type": "function_call"
        },
        {
          "name": "find_conftest_files",
          "file": "unknown",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 341,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 345,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 347,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "get_summary_stats",
          "file": "unknown",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 354,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 355,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 356,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 362,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "get_directory_structure",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "print_tree_structure",
          "file": "unknown",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 366,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 371,
          "call_type": "function_call"
        },
        {
          "name": "relative_to",
          "file": "unknown",
          "line": 374,
          "call_type": "method_call"
        },
        {
          "name": "analyze_conftest",
          "file": "unknown",
          "line": 378,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 379,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 382,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 383,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 384,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 384,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 387,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 387,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 390,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 390,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        },
        {
          "name": "collect_all_fixtures",
          "file": "unknown",
          "line": 396,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 398,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 400,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 404,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 406,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 406,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 407,
          "call_type": "function_call"
        },
        {
          "name": "collect_all_markers",
          "file": "unknown",
          "line": 411,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 413,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 414,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 416,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 416,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 425,
          "call_type": "function_call"
        },
        {
          "name": "relative_to",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "analyze_test_file",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 435,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 436,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 436,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 439,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 440,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 444,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 444,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 447,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 450,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 450,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 453,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_config_path",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 37,
      "language": "python",
      "docstring": "Get the path to the config.yaml file.\n\nReturns:\n    Path to config.yaml in the skill root directory",
      "parameters": [],
      "return_type": "Path",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "load_model_config",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "load_consensus_config",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "get_consultation_timeout",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "load_tool_config",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "load_consensus_config",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 340,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 5
    },
    {
      "name": "load_tool_config",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 49,
      "language": "python",
      "docstring": "Load tool configuration from config.yaml with fallback to defaults.\n\nReturns:\n    Dict with tool configuration",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_enabled_tools",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "get_routing_suggestions",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 171,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_config_path",
          "file": "unknown",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 63,
          "call_type": "function_call"
        },
        {
          "name": "safe_load",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_enabled_tools",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 96,
      "language": "python",
      "docstring": "Get only the enabled tools from configuration.\n\nReturns:\n    Dict with only enabled tools",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "check_tool_availability",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 120,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_tool_config",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "check_tool_availability",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 111,
      "language": "python",
      "docstring": "Check which external tools are installed and enabled.\n\nOnly checks tools that are enabled in the configuration.\n\nReturns:\n    Dict mapping tool names to availability status",
      "parameters": [],
      "return_type": "Dict[str, bool]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_available_tools",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "get_missing_tools",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 148,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_enabled_tools",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "which",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_available_tools",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 130,
      "language": "python",
      "docstring": "Get list of available external tools.\n\nReturns:\n    List of tool names that are installed",
      "parameters": [],
      "return_type": "List[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_best_tool",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 86,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/code_doc/ai_consultation.py",
          "line": 483,
          "call_type": "function_call"
        },
        {
          "name": "cmd_analyze_with_ai",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 324,
          "call_type": "function_call"
        },
        {
          "name": "cmd_consult",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "get_best_tool",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 342,
          "call_type": "function_call"
        },
        {
          "name": "consult_with_auto_routing",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 619,
          "call_type": "function_call"
        },
        {
          "name": "consult_multi_agent",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 1014,
          "call_type": "function_call"
        },
        {
          "name": "get_quick_routing",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 273,
          "call_type": "function_call"
        },
        {
          "name": "get_tool_status_dict",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 310,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "check_tool_availability",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "get_missing_tools",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 141,
      "language": "python",
      "docstring": "Get list of missing external tools.\n\nReturns:\n    List of tool names that are not installed",
      "parameters": [],
      "return_type": "List[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "get_tool_status_dict",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 311,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "check_tool_availability",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "get_routing_suggestions",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 152,
      "language": "python",
      "docstring": "Provide routing suggestions based on available tools.\n\nArgs:\n    available_tools: List of tool names that are available\n\nReturns:\n    List of suggestion strings",
      "parameters": [
        {
          "name": "available_tools",
          "type": "List[str]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 297,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_tool_config",
          "file": "unknown",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_quick_routing",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 211,
      "language": "python",
      "docstring": "Get quick tool routing suggestion for a failure type.\n\nArgs:\n    failure_type: Type of test failure (assertion, exception, etc.)\n    available_tools: List of available tools (auto-detected if None)\n\nReturns:\n    Routing suggestion string",
      "parameters": [
        {
          "name": "failure_type",
          "type": "str",
          "default": null
        },
        {
          "name": "available_tools",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "print_tool_status",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 292,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "print_tool_status",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 256,
      "language": "python",
      "docstring": "Print tool availability status to console.\n\nArgs:\n    printer: PrettyPrinter instance (creates default if None)\n    include_routing: If provided, also show routing for this failure type\n\nReturns:\n    Exit code: 0 if any tools available, 1 if none",
      "parameters": [
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        },
        {
          "name": "include_routing",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 64,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 273,
          "call_type": "function_call"
        },
        {
          "name": "get_missing_tools",
          "file": "unknown",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 276,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 282,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 287,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "item",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "get_quick_routing",
          "file": "unknown",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "get_routing_suggestions",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 298,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_tool_status_dict",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 303,
      "language": "python",
      "docstring": "Get tool status as a dictionary (for JSON output).\n\nReturns:\n    Dict with 'available' and 'missing' keys",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_tools",
          "file": "src/claude_skills/claude_skills/run_tests/cli.py",
          "line": 57,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_available_tools",
          "file": "unknown",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "get_missing_tools",
          "file": "unknown",
          "line": 311,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "load_consensus_config",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 333,
      "language": "python",
      "docstring": "Load consensus configuration from config.yaml.\n\nReturns:\n    Dict with consensus configuration",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "should_auto_trigger_consensus",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_pair_for_failure",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 193,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_pairs",
          "file": "src/claude_skills/claude_skills/run_tests/consultation.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "get_auto_trigger_failures",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "get_consensus_info",
          "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
          "line": 385,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_config_path",
          "file": "unknown",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 343,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "safe_load",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "get_auto_trigger_failures",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 358,
      "language": "python",
      "docstring": "Get list of failure types that auto-trigger consensus.\n\nReturns:\n    List of failure type names",
      "parameters": [],
      "return_type": "List[str]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "load_consensus_config",
          "file": "unknown",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "get_consensus_info",
      "file": "src/claude_skills/claude_skills/run_tests/tool_checking.py",
      "line": 378,
      "language": "python",
      "docstring": "Get consensus configuration info (for display/debugging).\n\nReturns:\n    Dict with consensus pairs and auto-trigger info",
      "parameters": [],
      "return_type": "Dict",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "load_consensus_config",
          "file": "unknown",
          "line": 385,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 394,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "format_execution_plan",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 57,
      "language": "python",
      "docstring": "Format an execution plan for a task with proper newlines and structure.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task ID to format\n    specs_dir: Path to specs directory\n\nReturns:\n    Formatted execution plan string ready for display",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 39,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_format_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 600,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "get_progress_summary",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 143,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 143,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 148,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 168,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 224,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 245,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_verify_tools",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 255,
      "language": "python",
      "docstring": "Verify required tools are available.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "system",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_find_specs",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 274,
      "language": "python",
      "docstring": "Find specs directories.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 276,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 284,
          "call_type": "function_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_next_task",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 302,
      "language": "python",
      "docstring": "Find next actionable task.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 309,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "get_next_task",
          "file": "unknown",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 319,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 325,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 328,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 334,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 336,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 336,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 338,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_task_info",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 343,
      "language": "python",
      "docstring": "Get detailed task information.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 350,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "get_task_info",
          "file": "unknown",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 370,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 370,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 373,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 375,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 377,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 377,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 379,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_check_deps",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 384,
      "language": "python",
      "docstring": "Check task dependencies.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 388,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 391,
          "call_type": "function_call"
        },
        {
          "name": "_check_all_task_deps",
          "file": "unknown",
          "line": 397,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 401,
          "call_type": "method_call"
        },
        {
          "name": "check_dependencies",
          "file": "unknown",
          "line": 403,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 410,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 410,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 412,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 413,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 415,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 418,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 420,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 423,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_check_all_task_deps",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 436,
      "language": "python",
      "docstring": "Check dependencies for all tasks in the spec.",
      "parameters": [
        {
          "name": "spec_data",
          "type": null,
          "default": null
        },
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 397,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 439,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 441,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 445,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "check_dependencies",
          "file": "unknown",
          "line": 447,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 452,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 452,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 460,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 460,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 460,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 461,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 461,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 461,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 462,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 463,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 468,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 471,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 473,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 477,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 480,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_progress",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 485,
      "language": "python",
      "docstring": "Show overall progress.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 490,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 490,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 490,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 492,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 495,
          "call_type": "function_call"
        },
        {
          "name": "get_progress_summary",
          "file": "unknown",
          "line": 499,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 502,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 502,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 504,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 505,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 506,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 510,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 511,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_init_env",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 518,
      "language": "python",
      "docstring": "Initialize development environment.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 521,
          "call_type": "method_call"
        },
        {
          "name": "init_environment",
          "file": "unknown",
          "line": 523,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 526,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 530,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 530,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 533,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 534,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 536,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 537,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 538,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_prepare_task",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 543,
      "language": "python",
      "docstring": "Prepare task for implementation.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 546,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 550,
          "call_type": "method_call"
        },
        {
          "name": "ensure_reports_directory",
          "file": "unknown",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "unknown",
          "line": 556,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 559,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 563,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 563,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 565,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 566,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 566,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 567,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 567,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 569,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 569,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 571,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 575,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 577,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 579,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 580,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 582,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 584,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 585,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 588,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_format_plan",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 593,
      "language": "python",
      "docstring": "Format execution plan for display.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 597,
          "call_type": "method_call"
        },
        {
          "name": "format_execution_plan",
          "file": "unknown",
          "line": 600,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 603,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 604,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 608,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_validate_spec",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 612,
      "language": "python",
      "docstring": "Validate spec file.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 615,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 617,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec",
          "file": "unknown",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 621,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 621,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 623,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 626,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 629,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 632,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 632,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 634,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 637,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 637,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 639,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 642,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 644,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_find_pattern",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 649,
      "language": "python",
      "docstring": "Find files matching a pattern.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 652,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "find_pattern",
          "file": "unknown",
          "line": 655,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 658,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 658,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 661,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 661,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 663,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 665,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_detect_project",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 670,
      "language": "python",
      "docstring": "Detect project type and dependencies.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 673,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 675,
          "call_type": "method_call"
        },
        {
          "name": "detect_project",
          "file": "unknown",
          "line": 676,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 679,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 679,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 681,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 682,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 685,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 688,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 690,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 693,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 693,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 694,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 694,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 695,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 696,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 697,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 697,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 700,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 700,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 701,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 701,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 702,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 703,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 704,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 704,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_find_tests",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 709,
      "language": "python",
      "docstring": "Find test files and patterns.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 712,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 714,
          "call_type": "method_call"
        },
        {
          "name": "find_tests",
          "file": "unknown",
          "line": 715,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 718,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 718,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 721,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 722,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 724,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 727,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 730,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 730,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 732,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 733,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 734,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 734,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 736,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_check_environment",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 741,
      "language": "python",
      "docstring": "Check environmental requirements.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 744,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 746,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 747,
          "call_type": "method_call"
        },
        {
          "name": "check_environment",
          "file": "unknown",
          "line": 749,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 752,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 752,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 755,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 757,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 760,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 762,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 765,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 765,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 766,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 766,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 767,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 768,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 769,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 769,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 772,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 774,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 777,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 779,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_find_circular_deps",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 784,
      "language": "python",
      "docstring": "Find circular dependencies in JSON spec.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 787,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 791,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 794,
          "call_type": "function_call"
        },
        {
          "name": "find_circular_deps",
          "file": "unknown",
          "line": 798,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 801,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 801,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 804,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 805,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 805,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 807,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 807,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 809,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 812,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 812,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 814,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 817,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 817,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 819,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_find_related_files",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 824,
      "language": "python",
      "docstring": "Find files related to a source file.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 827,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 829,
          "call_type": "method_call"
        },
        {
          "name": "find_related_files",
          "file": "unknown",
          "line": 830,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 833,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 833,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 835,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 836,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 839,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 841,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 844,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 844,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 846,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 847,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 848,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 848,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 851,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 851,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 853,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 854,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 855,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 855,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_validate_paths",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 860,
      "language": "python",
      "docstring": "Validate and normalize paths.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 863,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 866,
          "call_type": "method_call"
        },
        {
          "name": "validate_paths",
          "file": "unknown",
          "line": 867,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 870,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 870,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 873,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 873,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 875,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 876,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 879,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 879,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 881,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 882,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_spec_stats",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 887,
      "language": "python",
      "docstring": "Show spec file statistics.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 890,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 892,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 893,
          "call_type": "method_call"
        },
        {
          "name": "spec_stats",
          "file": "unknown",
          "line": 894,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 897,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 897,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 900,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 902,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 904,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 905,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 908,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 909,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 910,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 911,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 912,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 913,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 916,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 917,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 918,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 918,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 919,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 919,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 921,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 924,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 925,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 926,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 927,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_next",
      "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
      "line": 934,
      "language": "python",
      "docstring": "Register 'next' subcommands for unified CLI.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 31,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 939,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 940,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 943,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 944,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 947,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 948,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 949,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 952,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 953,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 954,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 955,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 958,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 959,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 960,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 961,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 964,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 965,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 966,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 970,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 971,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 972,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 973,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 976,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 977,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 978,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 979,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 982,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 983,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 984,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 985,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 988,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 989,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 990,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 993,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 994,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 995,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 996,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 999,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1000,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1001,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1004,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1005,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1006,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1007,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1010,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1011,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1012,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1013,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1016,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1017,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1018,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1021,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1022,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1023,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1024,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1027,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1028,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1029,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1030,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1033,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1034,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1035,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1036,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "is_unblocked",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 17,
      "language": "python",
      "docstring": "Check if all blocking dependencies are completed.\n\nThis checks both task-level dependencies and phase-level dependencies.\nA task is blocked if:\n1. Any of its direct task dependencies are not completed, OR\n2. Its parent phase is blocked by an incomplete phase\n\nArgs:\n    spec_data: JSON spec file data\n    task_id: Task identifier\n    task_data: Task data dictionary\n\nReturns:\n    True if task has no blockers or all blockers are completed",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "check_dependencies",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 195,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "is_in_current_phase",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 72,
      "language": "python",
      "docstring": "Check if task belongs to current phase (including nested groups).\n\nArgs:\n    spec_data: JSON spec file data\n    task_id: Task identifier\n    phase_id: Phase identifier to check against\n\nReturns:\n    True if task is within the phase hierarchy",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "phase_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 144,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "get_next_task",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 101,
      "language": "python",
      "docstring": "Find the next actionable task.\n\nArgs:\n    spec_data: JSON spec file data\n\nReturns:\n    Tuple of (task_id, task_data) or None if no task available",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Optional[Tuple[str, Dict]]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_returns_first_pending",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 20,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_skips_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_respects_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 44,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_from_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_none_when_all_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "test_get_next_task_empty_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "test_task_progression_through_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 256,
          "call_type": "function_call"
        },
        {
          "name": "test_task_progression_through_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "test_task_progression_through_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 270,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "is_unblocked",
          "file": "unknown",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "is_in_current_phase",
          "file": "unknown",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "sort",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        }
      ],
      "call_count": 12
    },
    {
      "name": "get_task_info",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 157,
      "language": "python",
      "docstring": "Get detailed information about a task.\n\nArgs:\n    spec_data: JSON spec file data\n    task_id: Task identifier\n\nReturns:\n    Task data dictionary or None",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_task_info",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_existing_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_includes_all_fields",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_info_for_different_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 240,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_node",
          "file": "unknown",
          "line": 168,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "check_dependencies",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 171,
      "language": "python",
      "docstring": "Check dependency status for a task.\n\nArgs:\n    spec_data: JSON spec file data\n    task_id: Task identifier\n\nReturns:\n    Dictionary with dependency analysis",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 403,
          "call_type": "function_call"
        },
        {
          "name": "_check_all_task_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 447,
          "call_type": "function_call"
        },
        {
          "name": "prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 133,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_nonexistent_task",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_includes_blocks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 161,
          "call_type": "function_call"
        },
        {
          "name": "test_check_dependencies_resolved_when_complete",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 175,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 244,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "is_unblocked",
          "file": "unknown",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "prepare_task",
      "file": "src/claude_skills/claude_skills/sdd_next/discovery.py",
      "line": 237,
      "language": "python",
      "docstring": "Prepare complete context for task implementation.\n\nCombines task discovery, dependency checking, and detail extraction.\nNow includes automatic spec validation and doc-query context gathering.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    task_id: Optional task ID (auto-discovers if not provided)\n\nReturns:\n    Complete task preparation data with validation and context",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "task_id",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "format_execution_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "cmd_prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 556,
          "call_type": "function_call"
        },
        {
          "name": "test_prepare_task_success",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_prepare_task_includes_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "test_prepare_task_returns_metadata_only",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 203,
          "call_type": "function_call"
        },
        {
          "name": "test_prepare_task_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "test_prepare_task_auto_finds_next",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 219,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py",
          "line": 248,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "validate_spec_before_proceed",
          "file": "unknown",
          "line": 266,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 266,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 270,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "get_next_task",
          "file": "unknown",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "get_task_info",
          "file": "unknown",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "check_dependencies",
          "file": "unknown",
          "line": 308,
          "call_type": "function_call"
        },
        {
          "name": "check_doc_query_available",
          "file": "unknown",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 316,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 317,
          "call_type": "method_call"
        },
        {
          "name": "get_task_context_from_docs",
          "file": "unknown",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 327,
          "call_type": "function_call"
        }
      ],
      "call_count": 8
    },
    {
      "name": "detect_project",
      "file": "src/claude_skills/claude_skills/sdd_next/project.py",
      "line": 13,
      "language": "python",
      "docstring": "Detect project type and extract dependencies.\n\nArgs:\n    directory: Directory to analyze (defaults to current directory)\n\nReturns:\n    Dictionary with project type, dependencies, and metadata",
      "parameters": [
        {
          "name": "directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 21,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_detect_project",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 676,
          "call_type": "function_call"
        },
        {
          "name": "check_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/project.py",
          "line": 253,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_node_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 18,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_python_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 26,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_project_includes_config_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_project_extracts_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_project_extracts_dev_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 50,
          "call_type": "function_call"
        },
        {
          "name": "test_detect_unknown_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_project_analysis_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "test_python_project_full_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 246,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 24,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 44,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 88,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "find_tests",
      "file": "src/claude_skills/claude_skills/sdd_next/project.py",
      "line": 118,
      "language": "python",
      "docstring": "Discover test files and patterns in the project.\n\nArgs:\n    directory: Directory to search (defaults to current directory)\n    source_file: Optional source file to find corresponding test\n\nReturns:\n    Dictionary with test files, patterns, and framework detection",
      "parameters": [
        {
          "name": "directory",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "source_file",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 17,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_find_tests",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 715,
          "call_type": "function_call"
        },
        {
          "name": "find_related_files",
          "file": "src/claude_skills/claude_skills/sdd_next/project.py",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "test_find_tests_in_node_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "test_find_tests_in_python_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "test_find_tests_detects_framework",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_find_corresponding_test_file",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "test_find_tests_empty_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_project_analysis_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 230,
          "call_type": "function_call"
        },
        {
          "name": "test_python_project_full_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 250,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 156,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 157,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 165,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "check_environment",
      "file": "src/claude_skills/claude_skills/sdd_next/project.py",
      "line": 224,
      "language": "python",
      "docstring": "Check environmental requirements and configuration.\n\nArgs:\n    directory: Directory to check (defaults to current directory)\n    required_deps: Optional list of required dependencies to check\n\nReturns:\n    Dictionary with environment validation results",
      "parameters": [
        {
          "name": "directory",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "required_deps",
          "type": "Optional[List[str]]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 749,
          "call_type": "function_call"
        },
        {
          "name": "test_check_environment_valid_project",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 123,
          "call_type": "function_call"
        },
        {
          "name": "test_check_environment_with_requirements",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 133,
          "call_type": "function_call"
        },
        {
          "name": "test_check_environment_missing_dependencies",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "test_check_environment_includes_config_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 150,
          "call_type": "function_call"
        },
        {
          "name": "test_check_environment_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 161,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_project_analysis_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 234,
          "call_type": "function_call"
        },
        {
          "name": "test_python_project_full_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 254,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "detect_project",
          "file": "unknown",
          "line": 253,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 256,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 256,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 260,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 289,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 290,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 292,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 297,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        }
      ],
      "call_count": 8
    },
    {
      "name": "find_related_files",
      "file": "src/claude_skills/claude_skills/sdd_next/project.py",
      "line": 303,
      "language": "python",
      "docstring": "Find files related to a given file.\n\nArgs:\n    file_path: Path to the source file\n    directory: Project directory (defaults to current directory)\n\nReturns:\n    Dictionary with categorized related files",
      "parameters": [
        {
          "name": "file_path",
          "type": "str",
          "default": null
        },
        {
          "name": "directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_find_related_files",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 830,
          "call_type": "function_call"
        },
        {
          "name": "test_find_related_files_test_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "test_find_related_files_same_directory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_find_related_files_similar_files",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "test_find_related_files_includes_source",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "test_find_related_files_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_project_analysis_workflow",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 240,
          "call_type": "function_call"
        },
        {
          "name": "test_python_project_full_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py",
          "line": 258,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 315,
          "call_type": "method_call"
        },
        {
          "name": "is_absolute",
          "file": "unknown",
          "line": 320,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 326,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 339,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "iterdir",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 340,
          "call_type": "method_call"
        },
        {
          "name": "find_tests",
          "file": "unknown",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 356,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 359,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 368,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 373,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 373,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 373,
          "call_type": "function_call"
        }
      ],
      "call_count": 8
    },
    {
      "name": "validate_spec",
      "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
      "line": 16,
      "language": "python",
      "docstring": "Validate a JSON spec file using the shared hierarchy validator.",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Path",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_valid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 19,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 27,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_checks_frontmatter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_checks_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 47,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 22,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 22,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 28,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "is_valid",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "find_circular_deps",
      "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
      "line": 48,
      "language": "python",
      "docstring": "Detected circular dependencies wrapper (backwards compatible).",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 798,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_none",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_detected",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "test_find_circular_deps_shows_chains",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 76,
          "call_type": "function_call"
        },
        {
          "name": "test_find_orphaned_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 91,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_circular_dependencies",
          "file": "unknown",
          "line": 50,
          "call_type": "function_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "validate_paths",
      "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
      "line": 53,
      "language": "python",
      "docstring": "Validate and normalize filesystem paths.",
      "parameters": [
        {
          "name": "paths",
          "type": "list",
          "default": null
        },
        {
          "name": "base_directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate_paths",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 867,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_existing_paths",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_mixed_paths",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_paths_with_base_dir",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 125,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "validate_and_normalize_paths",
          "file": "unknown",
          "line": 55,
          "call_type": "function_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "spec_stats",
      "file": "src/claude_skills/claude_skills/sdd_next/validation.py",
      "line": 58,
      "language": "python",
      "docstring": "Return statistics and metadata about a JSON spec file.",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Path",
          "default": null
        },
        {
          "name": "json_spec_file",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_spec_stats",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 894,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_stats_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_stats_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_stats_with_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_spec_stats_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 162,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "read_text",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "splitlines",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 100,
          "call_type": "function_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 121,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 123,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "get_json_spec_metadata",
          "file": "unknown",
          "line": 151,
          "call_type": "function_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "init_environment",
      "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
      "line": 15,
      "language": "python",
      "docstring": "Initialize development environment with complete setup.\n\nArgs:\n    spec_path: Optional path to spec file or directory\n\nReturns:\n    Dictionary with environment paths and validation status",
      "parameters": [
        {
          "name": "spec_path",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_init_env",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 523,
          "call_type": "function_call"
        },
        {
          "name": "test_init_environment_from_specs_dir",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
          "line": 14,
          "call_type": "function_call"
        },
        {
          "name": "test_init_environment_creates_directories",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
          "line": 24,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "ensure_directory",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "ensure_directory",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "find_pattern",
      "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
      "line": 57,
      "language": "python",
      "docstring": "Find files matching a pattern.\n\nArgs:\n    pattern: Glob pattern (e.g., \"*.ts\", \"src/**/*.spec.ts\")\n    directory: Directory to search (defaults to current directory)\n\nReturns:\n    List of matching file paths",
      "parameters": [
        {
          "name": "pattern",
          "type": "str",
          "default": null
        },
        {
          "name": "directory",
          "type": "Optional[Path]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_find_pattern",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 655,
          "call_type": "function_call"
        },
        {
          "name": "test_find_pattern_simple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "test_find_pattern_recursive",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py",
          "line": 42,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "glob",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "rglob",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "is_file",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "cmd_create",
      "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
      "line": 20,
      "language": "python",
      "docstring": "Create a new specification.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "info",
          "file": "unknown",
          "line": 22,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 28,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "ensure_reports_directory",
          "file": "unknown",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "create_spec_interactive",
          "file": "unknown",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_analyze",
      "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
      "line": 68,
      "language": "python",
      "docstring": "Analyze codebase for planning.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "get_project_context",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 99,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_template",
      "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
      "line": 125,
      "language": "python",
      "docstring": "Work with spec templates.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "header",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "list_templates",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 147,
          "call_type": "method_call"
        },
        {
          "name": "get_template_description",
          "file": "unknown",
          "line": 150,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_plan",
      "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
      "line": 160,
      "language": "python",
      "docstring": "Register plan subcommands for unified CLI.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 34,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "analyze_codebase",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 15,
      "language": "python",
      "docstring": "Analyze codebase using doc-query if available.\n\nArgs:\n    directory: Directory to analyze\n\nReturns:\n    Analysis results dictionary",
      "parameters": [
        {
          "name": "directory",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_project_context",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 207,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "run",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 36,
          "call_type": "function_call"
        },
        {
          "name": "parse_doc_query_stats",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 54,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "parse_doc_query_stats",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 59,
      "language": "python",
      "docstring": "Parse doc-query stats output.\n\nArgs:\n    output: stdout from doc-query stats\n\nReturns:\n    Parsed statistics dictionary",
      "parameters": [
        {
          "name": "output",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "analyze_codebase",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 45,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "split",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "float",
          "file": "unknown",
          "line": 80,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "create_spec_interactive",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 88,
      "language": "python",
      "docstring": "Create a new spec interactively.\n\nArgs:\n    title: Optional spec title (will prompt if not provided)\n    template: Template to use (simple, medium, complex, security)\n    specs_dir: Directory to save spec (defaults to specs/active)\n    default_category: Optional default task category (overrides automatic inference)\n                     One of: investigation, implementation, refactoring, decision, research\n\nReturns:\n    Tuple of (success, message, spec_dict)",
      "parameters": [
        {
          "name": "title",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "template",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "default_category",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Tuple[bool, str, Optional[Dict[str, Any]]]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_create",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 40,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_template",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "generate_spec_from_template",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "find_specs_directory",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 143,
      "language": "python",
      "docstring": "Find the specs directory in the project.\n\nReturns:\n    Path to specs directory or None if not found",
      "parameters": [],
      "return_type": "Optional[Path]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "get_session_state",
          "file": "src/claude_skills/claude_skills/common/integrations.py",
          "line": 425,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_specs",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 277,
          "call_type": "function_call"
        },
        {
          "name": "cmd_next_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 307,
          "call_type": "function_call"
        },
        {
          "name": "cmd_task_info",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "cmd_progress",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 490,
          "call_type": "function_call"
        },
        {
          "name": "cmd_prepare_task",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 548,
          "call_type": "function_call"
        },
        {
          "name": "cmd_format_plan",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 595,
          "call_type": "function_call"
        },
        {
          "name": "cmd_find_circular_deps",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "init_environment",
          "file": "src/claude_skills/claude_skills/sdd_next/workflow.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "cmd_create",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "get_project_context",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "cmd_render",
          "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "cmd_update_status",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "cmd_mark_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "cmd_unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_revision",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 250,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_verification",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "cmd_track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "cmd_time_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "cmd_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "cmd_audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "cmd_query_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "cmd_get_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_phases",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_complete",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "cmd_phase_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "cmd_list_blockers",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 641,
          "call_type": "function_call"
        },
        {
          "name": "cmd_reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "cmd_check_journaling",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 682,
          "call_type": "function_call"
        },
        {
          "name": "cmd_bulk_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 721,
          "call_type": "function_call"
        },
        {
          "name": "cmd_complete_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 748,
          "call_type": "function_call"
        },
        {
          "name": "cmd_sync_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "update_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 237,
          "call_type": "function_call"
        },
        {
          "name": "add_revision_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "add_verification_result",
          "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_from_project_root",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 17,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_with_explicit_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 25,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_returns_none_when_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_validates_structure",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 43,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_from_subdirectory",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 57,
          "call_type": "function_call"
        },
        {
          "name": "test_path_resolution_with_symlinks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_specs_directory_traversal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "cwd",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "is_dir",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        }
      ],
      "call_count": 56
    },
    {
      "name": "suggest_documentation_generation",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 161,
      "language": "python",
      "docstring": "Suggest generating documentation if not available.\n\nArgs:\n    directory: Project directory\n\nReturns:\n    Suggestion message",
      "parameters": [
        {
          "name": "directory",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "get_project_context",
      "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
      "line": 183,
      "language": "python",
      "docstring": "Get context about the project for planning.\n\nArgs:\n    directory: Project directory\n\nReturns:\n    Context dictionary with project info",
      "parameters": [
        {
          "name": "directory",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 79,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 194,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "analyze_codebase",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "list_templates",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "line": 53,
      "language": "python",
      "docstring": "Get all available templates.\n\nReturns:\n    Dictionary of template_id -> template_info",
      "parameters": [],
      "return_type": "Dict[str, Dict[str, Any]]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_template",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_list_templates_returns_dict",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 157,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 2
    },
    {
      "name": "get_template",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "line": 63,
      "language": "python",
      "docstring": "Get a specific template by ID.\n\nArgs:\n    template_id: Template identifier (simple, medium, complex, security)\n\nReturns:\n    Template dictionary or None if not found",
      "parameters": [
        {
          "name": "template_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "create_spec_interactive",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "generate_spec_from_template",
          "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "get_template_description",
          "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "test_get_template_valid",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "test_get_template_invalid",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 170,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "generate_spec_from_template",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "line": 76,
      "language": "python",
      "docstring": "Generate a spec structure from a template.\n\nArgs:\n    template_id: Template to use\n    title: Specification title\n    spec_id: Optional spec ID (auto-generated if not provided)\n    default_category: Optional default task category (overrides automatic inference)\n                     One of: investigation, implementation, refactoring, decision, research\n    **kwargs: Additional metadata to override template defaults\n\nReturns:\n    Spec dictionary ready to be serialized to JSON",
      "parameters": [
        {
          "name": "template_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "default_category",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "create_spec_interactive",
          "file": "src/claude_skills/claude_skills/sdd_plan/planner.py",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "test_full_workflow_with_categories",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_spec_with_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_spec_without_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 195,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_spec_all_categories",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_spec_category_none",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 225,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_template",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 147,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "get_template_description",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "line": 168,
      "language": "python",
      "docstring": "Get a human-readable description of a template.\n\nArgs:\n    template_id: Template identifier\n\nReturns:\n    Formatted description string",
      "parameters": [
        {
          "name": "template_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_template",
          "file": "src/claude_skills/claude_skills/sdd_plan/cli.py",
          "line": 150,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get_template",
          "file": "unknown",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "infer_task_category",
      "file": "src/claude_skills/claude_skills/sdd_plan/templates.py",
      "line": 198,
      "language": "python",
      "docstring": "Infer task_category based on keywords in the task title.\n\nAnalyzes the task title for category-specific keywords and returns\nthe most likely task category. Defaults to 'implementation' when\nkeywords are ambiguous or absent.\n\nThe function checks keywords in priority order:\n1. investigation - exploring/analyzing existing code\n2. refactoring - improving code structure\n3. decision - architectural/design choices\n4. research - gathering external information\n5. implementation - creating new functionality (default)\n\nArgs:\n    task_title: The task title to analyze\n    task_type: Type of node (task, subtask, verify, etc.) - currently unused\n               but reserved for future enhancements\n\nReturns:\n    One of: 'investigation', 'implementation', 'refactoring', 'decision', 'research'\n\nExamples:\n    >>> infer_task_category(\"Analyze current authentication flow\")\n    'investigation'\n\n    >>> infer_task_category(\"Create user service\")\n    'implementation'\n\n    >>> infer_task_category(\"Extract validation to utility\")\n    'refactoring'\n\n    >>> infer_task_category(\"Choose between JWT vs sessions\")\n    'decision'\n\n    >>> infer_task_category(\"Research OAuth 2.0 best practices\")\n    'research'\n\n    >>> infer_task_category(\"\")\n    'implementation'",
      "parameters": [
        {
          "name": "task_title",
          "type": "str",
          "default": null
        },
        {
          "name": "task_type",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "_build_task_category_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "_build_placeholder_file_path_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 886,
          "call_type": "function_call"
        },
        {
          "name": "test_investigation_keywords",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "test_implementation_keywords",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "test_refactoring_keywords",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "test_decision_keywords",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "test_research_keywords",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_default_fallback",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "test_case_insensitivity",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "test_priority_order",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 121,
          "call_type": "function_call"
        },
        {
          "name": "test_priority_order",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "test_priority_order",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 127,
          "call_type": "function_call"
        },
        {
          "name": "test_empty_and_none_handling",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_empty_and_none_handling",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_task_type_parameter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "test_task_type_parameter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_multi_word_phrases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "test_multi_word_phrases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "test_multi_word_phrases",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py",
          "line": 149,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "lower",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 252,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 272,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 293,
          "call_type": "function_call"
        }
      ],
      "call_count": 19
    },
    {
      "name": "cmd_review",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
      "line": 30,
      "language": "python",
      "docstring": "Review a specification file using multiple AI models.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "detect_available_tools",
          "file": "unknown",
          "line": 41,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 48,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "read",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "review_with_tools",
          "file": "unknown",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 111,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "generate_markdown_report",
          "file": "unknown",
          "line": 128,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 135,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 142,
          "call_type": "function_call"
        },
        {
          "name": "ensure_reviews_directory",
          "file": "unknown",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "generate_json_report",
          "file": "unknown",
          "line": 155,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 161,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 165,
          "call_type": "function_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 170,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_list_tools",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
      "line": 175,
      "language": "python",
      "docstring": "List available AI CLI tools.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "header",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "check_tool_available",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 192,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 222,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_plan_review",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
      "line": 233,
      "language": "python",
      "docstring": "Register plan-review subcommands for unified CLI.",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 35,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 237,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "generate_review_prompt",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 72,
      "language": "python",
      "docstring": "Generate an unbiased, critical review prompt.\n\nArgs:\n    spec_content: Full specification content\n    review_type: Type of review (quick, full, security, feasibility)\n    spec_id: Specification ID\n    title: Specification title\n\nReturns:\n    Formatted prompt string",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "review_type",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "review_with_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
          "line": 239,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "_generate_quick_review_prompt",
          "file": "unknown",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "_generate_security_review_prompt",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "_generate_feasibility_review_prompt",
          "file": "unknown",
          "line": 95,
          "call_type": "function_call"
        },
        {
          "name": "_generate_full_review_prompt",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_generate_full_review_prompt",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 100,
      "language": "python",
      "docstring": "Generate full comprehensive review prompt.",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "generate_review_prompt",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
          "line": 97,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "_generate_quick_review_prompt",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 162,
      "language": "python",
      "docstring": "Generate quick review prompt focusing on completeness and clarity.",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "generate_review_prompt",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
          "line": 91,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "_generate_security_review_prompt",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 199,
      "language": "python",
      "docstring": "Generate security-focused review prompt.",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "generate_review_prompt",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
          "line": 93,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "_generate_feasibility_review_prompt",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 257,
      "language": "python",
      "docstring": "Generate feasibility-focused review prompt.",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "generate_review_prompt",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
          "line": 95,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "get_stance_instruction",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/prompts.py",
      "line": 307,
      "language": "python",
      "docstring": "Get stance-specific instruction for a model.\n\nArgs:\n    stance: for, against, or neutral\n\nReturns:\n    Stance instruction string",
      "parameters": [
        {
          "name": "stance",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "generate_markdown_report",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 12,
      "language": "python",
      "docstring": "Generate comprehensive markdown review report.\n\nWith AI synthesis, the consensus already contains structured markdown.\nThis function wraps it with header and model details.\n\nArgs:\n    consensus: Consensus data from AI synthesis\n    spec_id: Specification ID\n    spec_title: Specification title\n    review_type: Type of review performed\n    parsed_responses: Individual model responses (optional)\n\nReturns:\n    Formatted markdown report",
      "parameters": [
        {
          "name": "consensus",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_title",
          "type": "str",
          "default": null
        },
        {
          "name": "review_type",
          "type": "str",
          "default": null
        },
        {
          "name": "parsed_responses",
          "type": "List[Dict[str, Any]]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 128,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "capitalize",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 63,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_get_recommendation_summary",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 84,
      "language": "python",
      "docstring": "Get summary text for recommendation.",
      "parameters": [
        {
          "name": "consensus",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "recommendation",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_get_score_assessment",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 105,
      "language": "python",
      "docstring": "Get qualitative assessment for a score.",
      "parameters": [
        {
          "name": "score",
          "type": "float",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": []
    },
    {
      "name": "_format_issue",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 119,
      "language": "python",
      "docstring": "Format an issue for display.",
      "parameters": [
        {
          "name": "number",
          "type": "int",
          "default": null
        },
        {
          "name": "issue",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "brief",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "join",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_format_model_summary",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 145,
      "language": "python",
      "docstring": "Format individual model response for display.\n\nArgs:\n    model_data: Normalized model response data\n\nReturns:\n    List of formatted lines",
      "parameters": [
        {
          "name": "model_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "generate_json_report",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reporting.py",
      "line": 221,
      "language": "python",
      "docstring": "Generate JSON format review report.\n\nArgs:\n    consensus: Consensus data\n    spec_id: Specification ID\n    spec_title: Specification title\n    review_type: Review type\n\nReturns:\n    JSON-serializable report dictionary",
      "parameters": [
        {
          "name": "consensus",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_title",
          "type": "str",
          "default": null
        },
        {
          "name": "review_type",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 155,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "replace",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 243,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "check_tool_available",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
      "line": 40,
      "language": "python",
      "docstring": "Check if an AI CLI tool is available.\n\nArgs:\n    tool_name: Name of the tool (gemini, codex, cursor-agent)\n\nReturns:\n    True if tool is available, False otherwise",
      "parameters": [
        {
          "name": "tool_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_list_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "detect_available_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
          "line": 87,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "detect_available_tools",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
      "line": 78,
      "language": "python",
      "docstring": "Detect which AI CLI tools are installed and available.\n\nReturns:\n    List of available tool names",
      "parameters": [],
      "return_type": "List[str]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 41,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "keys",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "check_tool_available",
          "file": "unknown",
          "line": 87,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "call_tool",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
      "line": 92,
      "language": "python",
      "docstring": "Call an AI CLI tool with a prompt.\n\nArgs:\n    tool_name: Name of tool to call\n    prompt: Prompt to send\n    timeout: Optional timeout override\n\nReturns:\n    Result dictionary with success, output, error",
      "parameters": [
        {
          "name": "tool_name",
          "type": "str",
          "default": null
        },
        {
          "name": "prompt",
          "type": "str",
          "default": null
        },
        {
          "name": "timeout",
          "type": "Optional[int]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "review_with_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
          "line": 289,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 196,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "review_with_tools",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
      "line": 202,
      "language": "python",
      "docstring": "Review a spec using multiple AI tools with full synthesis.\n\nArgs:\n    spec_content: Specification content to review\n    tools: List of tool names to use\n    review_type: Type of review (quick, full, security, feasibility)\n    spec_id: Specification ID\n    spec_title: Specification title\n    parallel: Run tools in parallel (vs sequential)\n\nReturns:\n    Review results with parsed responses and consensus",
      "parameters": [
        {
          "name": "spec_content",
          "type": "str",
          "default": null
        },
        {
          "name": "tools",
          "type": "List[str]",
          "default": null
        },
        {
          "name": "review_type",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_title",
          "type": "str",
          "default": null
        },
        {
          "name": "parallel",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_review",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/cli.py",
          "line": 99,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "time",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "generate_review_prompt",
          "file": "unknown",
          "line": 239,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 251,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 251,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 252,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 255,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "submit",
          "file": "unknown",
          "line": 259,
          "call_type": "method_call"
        },
        {
          "name": "as_completed",
          "file": "unknown",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 271,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 278,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 281,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "call_tool",
          "file": "unknown",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 291,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 294,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 299,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "parse_response",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 308,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 311,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 313,
          "call_type": "method_call"
        },
        {
          "name": "build_consensus",
          "file": "unknown",
          "line": 318,
          "call_type": "function_call"
        },
        {
          "name": "time",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "parse_response",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py",
      "line": 15,
      "language": "python",
      "docstring": "Extract raw response from tool output.\n\nHandles wrapper formats (like gemini CLI) but returns raw markdown/text.\nNo parsing or structuring - that's done by AI synthesis.\n\nArgs:\n    tool_output: Raw output from AI tool\n    tool_name: Name of the tool for logging\n\nReturns:\n    Response dictionary with raw text",
      "parameters": [
        {
          "name": "tool_output",
          "type": "str",
          "default": null
        },
        {
          "name": "tool_name",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "review_with_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
          "line": 304,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "rfind",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "synthesize_with_ai",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py",
      "line": 61,
      "language": "python",
      "docstring": "Use AI to synthesize multiple model reviews into consensus.\n\nInstead of fragile regex parsing, let AI read natural language reviews\nand create structured synthesis.\n\nArgs:\n    responses: List of response dicts with \"tool\" and \"raw_review\" keys\n    spec_id: Specification ID\n    spec_title: Specification title\n    working_dir: Working directory for AI tool\n\nReturns:\n    Synthesized consensus dictionary",
      "parameters": [
        {
          "name": "responses",
          "type": "List[Dict[str, Any]]",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_title",
          "type": "str",
          "default": null
        },
        {
          "name": "working_dir",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "build_consensus",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py",
          "line": 247,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "len",
          "file": "unknown",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 154,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "find",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "rfind",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 200,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 217,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "build_consensus",
      "file": "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py",
      "line": 222,
      "language": "python",
      "docstring": "Build consensus from multiple model responses using AI synthesis.\n\nThis replaces fragile regex parsing with AI-based natural language synthesis.\n\nArgs:\n    responses: List of response dicts from parse_response()\n    spec_id: Specification ID\n    spec_title: Specification title\n\nReturns:\n    Consensus dictionary with synthesis results",
      "parameters": [
        {
          "name": "responses",
          "type": "List[Dict[str, Any]]",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_title",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "review_with_tools",
          "file": "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py",
          "line": 318,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "synthesize_with_ai",
          "file": "unknown",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 265,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_render",
      "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
      "line": 16,
      "language": "python",
      "docstring": "Render JSON spec to human-readable markdown.\n\nArgs:\n    args: Command line arguments\n    printer: Output printer\n\nReturns:\n    Exit code (0 for success, 1 for error)",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 12,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 26,
          "call_type": "method_call"
        },
        {
          "name": "endswith",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 31,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 36,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 38,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 49,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "ensure_human_readable_directory",
          "file": "unknown",
          "line": 64,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "to_markdown",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "print_exc",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "register_render",
      "file": "src/claude_skills/claude_skills/sdd_render/cli.py",
      "line": 97,
      "language": "python",
      "docstring": "Register 'render' command for unified CLI.\n\nArgs:\n    subparsers: Subparser object from argparse\n    parent_parser: Parent parser with global options",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 36,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_execute_verify",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 48,
      "language": "python",
      "docstring": "Execute a verification task automatically (Priority 1 Integration).",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 29,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 50,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 67,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 78,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "execute_verify_task",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 89,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "add_verification_result",
          "file": "unknown",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "add_verification_result",
          "file": "unknown",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 147,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_update_status",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 155,
      "language": "python",
      "docstring": "Update task status.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "update_task_status",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "hasattr",
          "file": "unknown",
          "line": 171,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_mark_blocked",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 178,
      "language": "python",
      "docstring": "Mark task as blocked.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 182,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "mark_task_blocked",
          "file": "unknown",
          "line": 187,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_unblock_task",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 201,
      "language": "python",
      "docstring": "Unblock a task.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "unblock_task",
          "file": "unknown",
          "line": 210,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_add_journal",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 222,
      "language": "python",
      "docstring": "Add journal entry.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "add_journal_entry",
          "file": "unknown",
          "line": 231,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_add_revision",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 246,
      "language": "python",
      "docstring": "Add revision entry.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 248,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 250,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 250,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 250,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "add_revision_entry",
          "file": "unknown",
          "line": 255,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_update_frontmatter",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 268,
      "language": "python",
      "docstring": "Update metadata field in JSON spec.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "update_metadata",
          "file": "unknown",
          "line": 280,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_add_verification",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 292,
      "language": "python",
      "docstring": "Add verification result.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 298,
          "call_type": "method_call"
        },
        {
          "name": "add_verification_result",
          "file": "unknown",
          "line": 301,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_format_verification_summary",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 317,
      "language": "python",
      "docstring": "Format verification results summary.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 322,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 323,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 331,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 334,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "format_verification_summary",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_move_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 350,
      "language": "python",
      "docstring": "Move spec to another folder.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 352,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "move_spec",
          "file": "unknown",
          "line": 356,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_complete_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 366,
      "language": "python",
      "docstring": "Mark spec as completed and move to completed folder.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 372,
          "call_type": "method_call"
        },
        {
          "name": "resolve",
          "file": "unknown",
          "line": 376,
          "call_type": "method_call"
        },
        {
          "name": "complete_spec",
          "file": "unknown",
          "line": 378,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 383,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_track_time",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 391,
      "language": "python",
      "docstring": "Track time spent on task.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 393,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "track_time",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_time_report",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 412,
      "language": "python",
      "docstring": "Generate time tracking report.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 415,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "generate_time_report",
          "file": "unknown",
          "line": 422,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_status_report",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 436,
      "language": "python",
      "docstring": "Get status report.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 439,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 441,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "get_status_report",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 453,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_audit_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 458,
      "language": "python",
      "docstring": "Perform deep audit of JSON spec.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 461,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "audit_spec",
          "file": "unknown",
          "line": 468,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 475,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 475,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 477,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_query_tasks",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 480,
      "language": "python",
      "docstring": "Query and filter tasks.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 483,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        },
        {
          "name": "query_tasks",
          "file": "unknown",
          "line": 493,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 507,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 509,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 509,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_get_task",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 514,
      "language": "python",
      "docstring": "Get detailed task information.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 517,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 519,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 521,
          "call_type": "method_call"
        },
        {
          "name": "get_task",
          "file": "unknown",
          "line": 524,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 529,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 533,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_get_journal",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 538,
      "language": "python",
      "docstring": "Get journal entries for a spec or task.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 542,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 544,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 546,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "get_journal_entries",
          "file": "unknown",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 557,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 562,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 562,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_list_phases",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 567,
      "language": "python",
      "docstring": "List all phases.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 570,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 574,
          "call_type": "method_call"
        },
        {
          "name": "list_phases",
          "file": "unknown",
          "line": 577,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 584,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 584,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_check_complete",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 589,
      "language": "python",
      "docstring": "Check if spec, phase, or task is ready to complete.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 592,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 596,
          "call_type": "method_call"
        },
        {
          "name": "check_complete",
          "file": "unknown",
          "line": 599,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 602,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 603,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 608,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 608,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 610,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_phase_time",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 613,
      "language": "python",
      "docstring": "Calculate time for a phase.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 616,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 620,
          "call_type": "method_call"
        },
        {
          "name": "phase_time",
          "file": "unknown",
          "line": 623,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 631,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 631,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_list_blockers",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 636,
      "language": "python",
      "docstring": "List all blocked tasks.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 639,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 641,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 641,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 641,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 643,
          "call_type": "method_call"
        },
        {
          "name": "list_blockers",
          "file": "unknown",
          "line": 646,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 653,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 653,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_reconcile_state",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 658,
      "language": "python",
      "docstring": "Reconcile JSON spec to fix inconsistent task statuses.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 660,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 662,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 664,
          "call_type": "method_call"
        },
        {
          "name": "reconcile_state",
          "file": "unknown",
          "line": 667,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_check_journaling",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 677,
      "language": "python",
      "docstring": "Check for unjournaled completed tasks.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 680,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 682,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 682,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 682,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 684,
          "call_type": "method_call"
        },
        {
          "name": "detect_unjournaled_tasks",
          "file": "unknown",
          "line": 687,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 697,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 697,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 701,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 705,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 705,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "item",
          "file": "unknown",
          "line": 707,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 708,
          "call_type": "method_call"
        },
        {
          "name": "blank",
          "file": "unknown",
          "line": 710,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 711,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 712,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_bulk_journal",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 717,
      "language": "python",
      "docstring": "Bulk journal completed tasks.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 719,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 721,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 721,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 721,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 723,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 729,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 729,
          "call_type": "method_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "unknown",
          "line": 731,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_complete_task",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 744,
      "language": "python",
      "docstring": "Complete task workflow (status, journaling, metadata sync).",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 746,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 748,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 748,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 748,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 750,
          "call_type": "method_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "unknown",
          "line": 753,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 772,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 772,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_sync_metadata",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 778,
      "language": "python",
      "docstring": "Synchronize spec metadata with hierarchy data.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 780,
          "call_type": "method_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 784,
          "call_type": "method_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "unknown",
          "line": 787,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_update",
      "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
      "line": 797,
      "language": "python",
      "docstring": "Register 'update' subcommands for unified CLI.\n\nArgs:\n    subparsers: The subparsers object to add commands to\n    parent_parser: Parent parser with global options (--json, --quiet, --verbose, etc.)",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 32,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 806,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 807,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 808,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 809,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 810,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 811,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 812,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 813,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 816,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 817,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 818,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 819,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 820,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 821,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 822,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 823,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 826,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 827,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 828,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 829,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 830,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 831,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 834,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 835,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 836,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 837,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 838,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 839,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 840,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 841,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 842,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 845,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 846,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 847,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 848,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 849,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 850,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 853,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 854,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 855,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 856,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 857,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 858,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 859,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 860,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 861,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 862,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 865,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 866,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 867,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 868,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 869,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 872,
          "call_type": "method_call"
        },
        {
          "name": "add_mutually_exclusive_group",
          "file": "unknown",
          "line": 873,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 874,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 875,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 876,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 879,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 880,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 881,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 882,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 883,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 886,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 887,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 888,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 889,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 890,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 891,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 892,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 895,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 896,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 897,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 898,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 899,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 900,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 903,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 904,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 905,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 909,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 910,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 911,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 914,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 915,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 916,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 919,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 920,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 921,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 922,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 923,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 924,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 925,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 926,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 929,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 930,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 931,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 932,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 933,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 936,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 937,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 938,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 939,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 942,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 943,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 944,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 947,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 948,
          "call_type": "method_call"
        },
        {
          "name": "add_mutually_exclusive_group",
          "file": "unknown",
          "line": 949,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 950,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 951,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 952,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 955,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 956,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 957,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 958,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 961,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 962,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 963,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 966,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 967,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 968,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 969,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 972,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 973,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 974,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 977,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 978,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 979,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 980,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 981,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 982,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 983,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 986,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 987,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 988,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 989,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 990,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 991,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 992,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 995,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1000,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1001,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1002,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1003,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1004,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1005,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1006,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1007,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1013,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1018,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1019,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1020,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1021,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 1024,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1025,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 1026,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 1027,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "mark_task_journaled",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 24,
      "language": "python",
      "docstring": "Mark a task as journaled by clearing the needs_journaling flag.\n\nCalled automatically when add_journal_entry() includes a task_id.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task identifier\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 506,
          "call_type": "function_call"
        },
        {
          "name": "_simulate_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 125,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 83,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_build_journal_entry",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 88,
      "language": "python",
      "docstring": "Construct a journal entry payload and return entry plus timestamp.",
      "parameters": [
        {
          "name": "title",
          "type": "str",
          "default": null
        },
        {
          "name": "content",
          "type": "str",
          "default": null
        },
        {
          "name": "entry_type",
          "type": "str",
          "default": null
        },
        {
          "name": "author",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Tuple[Dict[str, Any], str]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "_simulate_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 115,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "replace",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_ensure_journal_container",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 114,
      "language": "python",
      "docstring": "Ensure spec_data has a journal container.",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "add_journal_entry",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 448,
          "call_type": "function_call"
        },
        {
          "name": "_simulate_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 123,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "add_journal_entry",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 120,
      "language": "python",
      "docstring": "Add an entry to the journal array in the JSON spec file.\n\nArgs:\n    spec_id: Specification ID\n    title: Entry title (e.g., \"Task 1-2 Started\", \"Blocker: Redis Dependency\")\n    content: Entry content (plain text)\n    task_id: Optional task ID to reference\n    entry_type: Type of entry (status_change, deviation, blocker, decision, note)\n    author: Author of the entry (default: claude-code)\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    dry_run: If True, show entry without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        },
        {
          "name": "content",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "entry_type",
          "type": "str",
          "default": null
        },
        {
          "name": "author",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_add_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 231,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 20,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_with_task_id",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_custom_author",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 68,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_entry_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 130,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 159,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "_build_journal_entry",
          "file": "unknown",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "_ensure_journal_container",
          "file": "unknown",
          "line": 178,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "mark_task_journaled",
          "file": "unknown",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 202,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        }
      ],
      "call_count": 8
    },
    {
      "name": "update_metadata",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 210,
      "language": "python",
      "docstring": "Update a single field in the JSON spec metadata.\n\nArgs:\n    spec_id: Specification ID\n    key: Metadata key to update\n    value: New value (can be string, int, list, dict, etc.)\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    dry_run: If True, show change without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "key",
          "type": "str",
          "default": null
        },
        {
          "name": "value",
          "type": "Any",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_update_frontmatter",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_simple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_numeric_value",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 165,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_creates_metadata_object",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_update_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 207,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 237,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 239,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 243,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 245,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 269,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "add_revision_entry",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 281,
      "language": "python",
      "docstring": "Add a revision entry to the JSON spec metadata.revisions array.\n\nArgs:\n    spec_id: Specification ID\n    version: Version string (e.g., \"1.1\", \"2.0\")\n    changes: Description of changes\n    author: Author of the changes\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    dry_run: If True, show entry without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "version",
          "type": "str",
          "default": null
        },
        {
          "name": "changes",
          "type": "str",
          "default": null
        },
        {
          "name": "author",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_add_revision",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 255,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_custom_author",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 254,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_multiple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 273,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_multiple",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 281,
          "call_type": "function_call"
        },
        {
          "name": "test_add_revision_entry_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 297,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 310,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 312,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 316,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 318,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 331,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 334,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 337,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "next",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 351,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 354,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_render_template",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 375,
      "language": "python",
      "docstring": "Render a journal template using string.Template.",
      "parameters": [
        {
          "name": "template_name",
          "type": "str",
          "default": null
        },
        {
          "name": "context",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 485,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "files",
          "file": "unknown",
          "line": 378,
          "call_type": "method_call"
        },
        {
          "name": "read_text",
          "file": "unknown",
          "line": 379,
          "call_type": "method_call"
        },
        {
          "name": "safe_substitute",
          "file": "unknown",
          "line": 383,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "bulk_journal_tasks",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 386,
      "language": "python",
      "docstring": "Add journal entries for multiple completed tasks at once.\n\nGenerates a journal entry for each task with:\n- Task ID and title\n- Completion timestamp\n- Status change note\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    task_ids: List of task IDs to journal (if None, journals all unjournaled tasks)\n    dry_run: If True, show entries without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "task_ids",
          "type": "Optional[List[str]]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 21,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_bulk_journal",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 731,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "detect_unjournaled_tasks",
          "file": "unknown",
          "line": 427,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 442,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_journal_container",
          "file": "unknown",
          "line": 448,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 451,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 453,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 454,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 457,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 458,
          "call_type": "method_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 464,
          "call_type": "function_call"
        },
        {
          "name": "strftime",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 467,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 469,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 475,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 478,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 478,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 478,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 483,
          "call_type": "method_call"
        },
        {
          "name": "_render_template",
          "file": "unknown",
          "line": 485,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 487,
          "call_type": "method_call"
        },
        {
          "name": "_build_journal_entry",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 493,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 500,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 503,
          "call_type": "method_call"
        },
        {
          "name": "mark_task_journaled",
          "file": "unknown",
          "line": 506,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 515,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 519,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 520,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 520,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 520,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 521,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 524,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 527,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 528,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 531,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 531,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 531,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 533,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "sync_metadata_from_state",
      "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
      "line": 537,
      "language": "python",
      "docstring": "Automatically synchronize JSON metadata with hierarchy data.\n\nUpdates:\n- last_updated: Current timestamp\n- progress_percentage: Calculated from hierarchy\n- status: \"completed\" when all tasks done, otherwise \"active\"\n- current_phase: ID of first in-progress phase\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    dry_run: If True, show changes without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 21,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_sync_metadata",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 787,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_calculates_progress",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 327,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_sets_completed_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_finds_current_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 371,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py",
          "line": 393,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 568,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 574,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 582,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 583,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 588,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 589,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 591,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 592,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 597,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 602,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 603,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 603,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 607,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 612,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 616,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 617,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 618,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 619,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 622,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 627,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 631,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 631,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 631,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 634,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 635,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 638,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 638,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 642,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "move_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
      "line": 19,
      "language": "python",
      "docstring": "Move a spec file between lifecycle folders.\n\nArgs:\n    spec_file: Path to current spec file\n    target_folder: Target folder name (active, completed, archived)\n    dry_run: If True, show move without executing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_file",
          "type": "Path",
          "default": null
        },
        {
          "name": "target_folder",
          "type": "str",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_move_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 231,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_to_completed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 22,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_to_archived",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_to_active",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_invalid_target",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_file_not_found",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_target_exists",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_move_spec_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 117,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "ensure_directory",
          "file": "unknown",
          "line": 55,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "move",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "_regenerate_documentation",
      "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
      "line": 81,
      "language": "python",
      "docstring": "Regenerate codebase documentation.\n\nArgs:\n    specs_dir: Path to specs directory (used to locate project root)\n    printer: Printer for output messages\n\nReturns:\n    True if regeneration succeeded, False otherwise",
      "parameters": [
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
          "line": 240,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 106,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "complete_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/lifecycle.py",
      "line": 129,
      "language": "python",
      "docstring": "Mark a spec as completed and move it to completed folder.\n\nPerforms the following:\n1. Verifies all tasks are completed\n2. Updates JSON metadata (status, completed_date, actual_hours)\n3. Moves JSON spec file to completed/ folder\n4. Regenerates codebase documentation (unless skip_doc_regen is True)\n\nArgs:\n    spec_id: Specification ID\n    spec_file: Path to JSON spec file (optional - will be auto-detected if not provided)\n    specs_dir: Path to specs directory\n    actual_hours: Optional actual hours spent\n    skip_doc_regen: If True, skip documentation regeneration\n    dry_run: If True, show changes without executing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "spec_file",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "actual_hours",
          "type": "Optional[float]",
          "default": null
        },
        {
          "name": "skip_doc_regen",
          "type": "bool",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_complete_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 378,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_all_tasks_done",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_without_actual_hours",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 169,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_incomplete_tasks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 215,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_creates_metadata",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_spec_updates_last_updated",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py",
          "line": 270,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_spec_file",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 166,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 188,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 230,
          "call_type": "method_call"
        },
        {
          "name": "move_spec",
          "file": "unknown",
          "line": 231,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "_regenerate_documentation",
          "file": "unknown",
          "line": 240,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "phase_time",
      "file": "src/claude_skills/claude_skills/sdd_update/query.py",
      "line": 35,
      "language": "python",
      "docstring": "Calculate time spent on a specific phase.\n\nThis is a time-tracking specific operation that remains in sdd-update.\n\nArgs:\n    spec_id: Specification ID\n    phase_id: Phase ID to calculate time for\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    Dictionary with time breakdown, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "phase_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_phase_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 623,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_with_time_data",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_without_time_data",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 372,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_variance_positive",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 415,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_variance_negative",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 457,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_nonexistent_phase",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 469,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py",
          "line": 480,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "collect_times",
          "file": "unknown",
          "line": 105,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "find_verify_tasks_for_task",
      "file": "src/claude_skills/claude_skills/sdd_update/status.py",
      "line": 17,
      "language": "python",
      "docstring": "Find all verify tasks associated with a given task.\n\nVerify tasks are identified by:\n1. Having type=\"verify\"\n2. Being a sibling or child of the task (same parent or task is parent)\n3. Having an ID pattern like verify-X-Y where X matches task-X-Y\n\nArgs:\n    spec_data: Loaded JSON spec data\n    task_id: Task ID to find verify tasks for (e.g., \"task-1-1\")\n\nReturns:\n    List of verify task IDs",
      "parameters": [
        {
          "name": "spec_data",
          "type": "dict",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "update_task_status",
          "file": "src/claude_skills/claude_skills/sdd_update/status.py",
          "line": 152,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 37,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "update_task_status",
      "file": "src/claude_skills/claude_skills/sdd_update/status.py",
      "line": 52,
      "language": "python",
      "docstring": "Update a task's status with automatic progress recalculation.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task identifier\n    new_status: New status (pending, in_progress, completed, blocked)\n    specs_dir: Path to specs/active directory\n    note: Optional note about the status change\n    dry_run: If True, don't save changes\n    verify: If True and new_status is 'completed', run associated verify tasks\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "new_status",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "note",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "verify",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 37,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_update_status",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 345,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "error",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 89,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 111,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 145,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "find_verify_tasks_for_task",
          "file": "unknown",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 157,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "execute_verify_task",
          "file": "unknown",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 171,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 213,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 224,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 234,
          "call_type": "function_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 235,
          "call_type": "function_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 236,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 242,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 251,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "mark_task_blocked",
      "file": "src/claude_skills/claude_skills/sdd_update/status.py",
      "line": 259,
      "language": "python",
      "docstring": "Mark a task as blocked with detailed blocker information.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task identifier\n    reason: Description of why task is blocked\n    specs_dir: Path to specs/active directory\n    blocker_type: Type of blocker (dependency, technical, resource, decision)\n    ticket: Optional ticket/issue reference\n    dry_run: If True, don't save changes\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "reason",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "blocker_type",
          "type": "str",
          "default": null
        },
        {
          "name": "ticket",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_mark_blocked",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 187,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "warning",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 290,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 294,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 301,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 324,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 324,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 339,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 343,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 345,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "unblock_task",
      "file": "src/claude_skills/claude_skills/sdd_update/status.py",
      "line": 353,
      "language": "python",
      "docstring": "Unblock a task and optionally set it to pending or in_progress.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task identifier\n    resolution: Optional description of how blocker was resolved\n    specs_dir: Path to specs/active directory\n    dry_run: If True, don't save changes\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "resolution",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_unblock_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 210,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 379,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 380,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 385,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 387,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 393,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 393,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "copy",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 398,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 405,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 406,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 407,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 408,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 409,
          "call_type": "method_call"
        },
        {
          "name": "pop",
          "file": "unknown",
          "line": 416,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 426,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 438,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 439,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 442,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 443,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 444,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 448,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "track_time",
      "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
      "line": 15,
      "language": "python",
      "docstring": "Record actual time spent on a task.\n\nArgs:\n    spec_id: Specification ID\n    task_id: Task identifier\n    actual_hours: Actual hours spent on task\n    specs_dir: Path to specs/active directory\n    dry_run: If True, show change without saving\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "actual_hours",
          "type": "float",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_track_time",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 335,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "error",
          "file": "unknown",
          "line": 41,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 45,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 51,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "float",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 68,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "generate_time_report",
      "file": "src/claude_skills/claude_skills/sdd_update/time_tracking.py",
      "line": 84,
      "language": "python",
      "docstring": "Generate time variance report for a spec.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    printer: Optional printer for output\n\nReturns:\n    Dictionary with time analysis, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_time_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 422,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "float",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "float",
          "file": "unknown",
          "line": 127,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 133,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 157,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "abs",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "validate_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "line": 16,
      "language": "python",
      "docstring": "Validate JSON spec consistency using comprehensive hierarchy validator.\n\nChecks for:\n- Valid JSON structure\n- Required fields present\n- Parent-child relationships valid\n- No orphaned nodes\n- No circular dependencies\n- Progress calculations correct\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    printer: Optional printer for output\n\nReturns:\n    True if valid, False if issues found",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate_spec",
          "file": "src/claude_skills/claude_skills/sdd_next/cli.py",
          "line": 618,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_valid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 19,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 27,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_checks_frontmatter",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 34,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_spec_checks_json_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 40,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_spec",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py",
          "line": 47,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 46,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "is_valid",
          "file": "unknown",
          "line": 61,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 66,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "get_status_report",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "line": 73,
      "language": "python",
      "docstring": "Generate comprehensive status report.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    printer: Optional printer for output\n\nReturns:\n    Dictionary with status information, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Optional[Dict]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 446,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 93,
          "call_type": "function_call"
        },
        {
          "name": "get_progress_summary",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "list_phases",
          "file": "unknown",
          "line": 101,
          "call_type": "function_call"
        },
        {
          "name": "get_task_counts_by_status",
          "file": "unknown",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "detect_unjournaled_tasks",
          "file": "unknown",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 140,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "audit_spec",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "line": 146,
      "language": "python",
      "docstring": "Perform deep audit of JSON spec.\n\nMore comprehensive than validate_spec, includes:\n- Circular dependency detection\n- Progress calculation verification\n- Metadata completeness checks\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    printer: Optional printer for output\n\nReturns:\n    Dictionary with audit results",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 16,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_audit_spec",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 468,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "find_circular_dependencies",
          "file": "unknown",
          "line": 181,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 203,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 209,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 209,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "reconcile_state",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "line": 227,
      "language": "python",
      "docstring": "Reconcile JSON spec by fixing inconsistent task statuses.\n\nFinds tasks where metadata.completed_at exists but status != \"completed\",\nand updates their status to match the metadata. This fixes issues where\na task was marked complete but the status wasn't properly updated.\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs/active directory\n    dry_run: If True, don't save changes\n    printer: Optional printer for output\n\nReturns:\n    True if reconciliation successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_reconcile_state",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 667,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "action",
          "file": "unknown",
          "line": 255,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 271,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 286,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 299,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 299,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 301,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 310,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 314,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 315,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 316,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 319,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 319,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "detect_unjournaled_tasks",
      "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
      "line": 323,
      "language": "python",
      "docstring": "Find completed tasks that need journal entries.\n\nReturns list of tasks with:\n- task_id\n- title\n- completed_at timestamp\n- parent_id (for context)\n\nArgs:\n    spec_id: Specification ID\n    specs_dir: Path to specs directory\n    printer: Optional printer for output\n\nReturns:\n    List of unjournaled task dictionaries, or None on error",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Path",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "List[Dict]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_check_journaling",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 687,
          "call_type": "function_call"
        },
        {
          "name": "bulk_journal_tasks",
          "file": "src/claude_skills/claude_skills/sdd_update/journal.py",
          "line": 427,
          "call_type": "function_call"
        },
        {
          "name": "get_status_report",
          "file": "src/claude_skills/claude_skills/sdd_update/validation.py",
          "line": 114,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 359,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 368,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 370,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 372,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "add_verification_result",
      "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
      "line": 17,
      "language": "python",
      "docstring": "Add verification results to the JSON spec file hierarchy node metadata.\n\nArgs:\n    spec_id: Specification ID\n    verify_id: Verification identifier (e.g., 'verify-1-1')\n    status: PASSED, FAILED, or PARTIAL\n    command: Command that was run (if automated)\n    output: Command output or test results\n    issues: Issues found during verification\n    notes: Additional notes\n    specs_dir: Optional specs directory (auto-detected if not provided)\n    dry_run: If True, show result without writing\n    printer: Optional printer for output\n\nReturns:\n    True if successful, False otherwise",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "verify_id",
          "type": "str",
          "default": null
        },
        {
          "name": "status",
          "type": "str",
          "default": null
        },
        {
          "name": "command",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "output",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "issues",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "notes",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "specs_dir",
          "type": "Optional[Path]",
          "default": null
        },
        {
          "name": "dry_run",
          "type": "bool",
          "default": null
        },
        {
          "name": "printer",
          "type": "Optional[PrettyPrinter]",
          "default": null
        }
      ],
      "return_type": "bool",
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 103,
          "call_type": "function_call"
        },
        {
          "name": "cmd_execute_verify",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "cmd_add_verification",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 301,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_passed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 27,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_failed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 63,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_partial",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_updates_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 119,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_invalid_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_nonexistent_verify_id",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_result_minimal",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 198,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 52,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 58,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 64,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 79,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 104,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "update_node",
          "file": "unknown",
          "line": 123,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        }
      ],
      "call_count": 11
    },
    {
      "name": "format_verification_summary",
      "file": "src/claude_skills/claude_skills/sdd_update/verification.py",
      "line": 143,
      "language": "python",
      "docstring": "Format a summary of multiple verification results with proper newlines.\n\nArgs:\n    verification_results: List of dicts with keys:\n        - verify_id: str (e.g., 'verify-1-1')\n        - title: str\n        - status: str ('PASSED', 'FAILED', 'PARTIAL')\n        - command: Optional[str]\n        - result: Optional[str]\n        - notes: Optional[str]\n\nReturns:\n    Formatted summary string ready for display",
      "parameters": [
        {
          "name": "verification_results",
          "type": "list[dict]",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_format_verification_summary",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "test_format_verification_summary_all_passed",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "test_format_verification_summary_mixed_results",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 270,
          "call_type": "function_call"
        },
        {
          "name": "test_format_verification_summary_empty_list",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "test_format_verification_summary_includes_command",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "test_format_verification_summary_includes_notes",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py",
          "line": 312,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "sum",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 164,
          "call_type": "function_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 164,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 165,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 176,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 178,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 203,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 215,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "_get_timestamp",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 26,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "str",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_simulate_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 97,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "replace",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_derive_default_journal",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 30,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "task_title",
          "type": "str",
          "default": null
        },
        {
          "name": "actual_hours",
          "type": "Optional[float]",
          "default": null
        },
        {
          "name": "note",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Tuple[str, str]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_simulate_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 291,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 42,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_bump_version",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 48,
      "language": "python",
      "docstring": "Determine the next semantic version based on bump type.",
      "parameters": [
        {
          "name": "current_version",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "bump",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 281,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "int",
          "file": "unknown",
          "line": 55,
          "call_type": "function_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 55,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_simulate_workflow",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 73,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "state",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        },
        {
          "name": "actual_hours",
          "type": "Optional[float]",
          "default": null
        },
        {
          "name": "note",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "journal_title",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "journal_content",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "journal_entry_type",
          "type": "str",
          "default": null
        },
        {
          "name": "author",
          "type": "str",
          "default": null
        },
        {
          "name": "revision_version",
          "type": "Optional[str]",
          "default": null
        },
        {
          "name": "revision_changes",
          "type": "Optional[str]",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 305,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "deepcopy",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "_get_timestamp",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "_derive_default_journal",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "_build_journal_entry",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "_ensure_journal_container",
          "file": "unknown",
          "line": 123,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 124,
          "call_type": "method_call"
        },
        {
          "name": "mark_task_journaled",
          "file": "unknown",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 151,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 159,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_calculate_diff",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 167,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "before",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "after",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "task_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 399,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 175,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 179,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 180,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 189,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 201,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 206,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 209,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_print_diff",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 215,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "diff",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "printer",
          "type": "PrettyPrinter",
          "default": null
        }
      ],
      "return_type": "None",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "complete_task_workflow",
          "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
          "line": 401,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "info",
          "file": "unknown",
          "line": 217,
          "call_type": "method_call"
        },
        {
          "name": "header",
          "file": "unknown",
          "line": 220,
          "call_type": "method_call"
        },
        {
          "name": "result",
          "file": "unknown",
          "line": 223,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 227,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 234,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 235,
          "call_type": "method_call"
        },
        {
          "name": "detail",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 236,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "complete_task_workflow",
      "file": "src/claude_skills/claude_skills/sdd_update/workflow.py",
      "line": 239,
      "language": "python",
      "docstring": "Complete a task with optional journaling, time tracking, and revision updates.",
      "parameters": [],
      "return_type": "Optional[Dict[str, Any]]",
      "complexity": 27,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_complete_task",
          "file": "src/claude_skills/claude_skills/sdd_update/cli.py",
          "line": 753,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 264,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 268,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 270,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "_bump_version",
          "file": "unknown",
          "line": 281,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 281,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 281,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 283,
          "call_type": "method_call"
        },
        {
          "name": "_derive_default_journal",
          "file": "unknown",
          "line": 291,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 304,
          "call_type": "method_call"
        },
        {
          "name": "_simulate_workflow",
          "file": "unknown",
          "line": 305,
          "call_type": "function_call"
        },
        {
          "name": "_calculate_diff",
          "file": "unknown",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "_print_diff",
          "file": "unknown",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 333,
          "call_type": "method_call"
        },
        {
          "name": "track_time",
          "file": "unknown",
          "line": 335,
          "call_type": "function_call"
        },
        {
          "name": "update_task_status",
          "file": "unknown",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "add_journal_entry",
          "file": "unknown",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "add_revision_entry",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "sync_metadata_from_state",
          "file": "unknown",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "load_json_spec",
          "file": "unknown",
          "line": 390,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "_calculate_diff",
          "file": "unknown",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "_print_diff",
          "file": "unknown",
          "line": 401,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_stats_to_dict",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 45,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "stats",
          "type": null,
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "asdict",
          "file": "unknown",
          "line": 46,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "_dependencies_to_dict",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 49,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "analysis",
          "type": null,
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": []
    },
    {
      "name": "_normalized_to_dict",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 61,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "normalized",
          "type": "NormalizedValidationResult",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "asdict",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "_serialize_fix_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 65,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "action",
          "type": null,
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 289,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "_status_to_exit_code",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 76,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "status",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "int",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 375,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 1
    },
    {
      "name": "_filter_actions_by_selection",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 84,
      "language": "python",
      "docstring": "Filter actions based on ID or category selection.",
      "parameters": [
        {
          "name": "actions",
          "type": null,
          "default": null
        },
        {
          "name": "selection_criteria",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 271,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "startswith",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_interactive_select_fixes",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 102,
      "language": "python",
      "docstring": "Interactively prompt user to select fixes.",
      "parameters": [
        {
          "name": "actions",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 279,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "print",
          "file": "unknown",
          "line": 107,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 108,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 109,
          "call_type": "function_call"
        },
        {
          "name": "enumerate",
          "file": "unknown",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        },
        {
          "name": "input",
          "file": "unknown",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "int",
          "file": "unknown",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 136,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "cmd_validate",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 147,
      "language": "python",
      "docstring": "Validate JSON spec file.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 16,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 152,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 156,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 166,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 167,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 169,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 172,
          "call_type": "function_call"
        },
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 187,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "format_validation_summary",
          "file": "unknown",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 201,
          "call_type": "function_call"
        },
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 206,
          "call_type": "function_call"
        },
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "asdict",
          "file": "unknown",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "ensure_reports_directory",
          "file": "unknown",
          "line": 225,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 231,
          "call_type": "function_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 232,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 233,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_fix",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 242,
      "language": "python",
      "docstring": "Auto-fix validation issues in spec file.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 35,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 247,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 250,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 255,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 256,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 258,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 261,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "_filter_actions_by_selection",
          "file": "unknown",
          "line": 271,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "_interactive_select_fixes",
          "file": "unknown",
          "line": 279,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 281,
          "call_type": "method_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 288,
          "call_type": "function_call"
        },
        {
          "name": "_serialize_fix_action",
          "file": "unknown",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 291,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 294,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 296,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 296,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 297,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 302,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 303,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 309,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 313,
          "call_type": "function_call"
        },
        {
          "name": "compute_diff",
          "file": "unknown",
          "line": 321,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 322,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 325,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 326,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_json",
          "file": "unknown",
          "line": 326,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 328,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 329,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_markdown",
          "file": "unknown",
          "line": 329,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 330,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 337,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 339,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 340,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 342,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 343,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 344,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 351,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 353,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 353,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 355,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 357,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 361,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 362,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 363,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 364,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 367,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 369,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "_status_to_exit_code",
          "file": "unknown",
          "line": 375,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 375,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_report",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 379,
      "language": "python",
      "docstring": "Generate detailed validation report.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 384,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 387,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 393,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 398,
          "call_type": "function_call"
        },
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        },
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "asdict",
          "file": "unknown",
          "line": 405,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 416,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 424,
          "call_type": "function_call"
        },
        {
          "name": "ensure_reports_directory",
          "file": "unknown",
          "line": 426,
          "call_type": "function_call"
        },
        {
          "name": "with_suffix",
          "file": "unknown",
          "line": 433,
          "call_type": "method_call"
        },
        {
          "name": "with_suffix",
          "file": "unknown",
          "line": 435,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 437,
          "call_type": "function_call"
        },
        {
          "name": "write",
          "file": "unknown",
          "line": 438,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 440,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "cmd_stats",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 444,
      "language": "python",
      "docstring": "Show spec statistics and complexity metrics.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 446,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 451,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 452,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 456,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 457,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        },
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "render_statistics",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 468,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 469,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "cmd_check_deps",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 474,
      "language": "python",
      "docstring": "Check for circular dependencies.",
      "parameters": [
        {
          "name": "args",
          "type": null,
          "default": null
        },
        {
          "name": "printer",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 18,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "resolve",
          "file": "unknown",
          "line": 476,
          "call_type": "method_call"
        },
        {
          "name": "action",
          "file": "unknown",
          "line": 479,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 481,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 482,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 487,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 488,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 490,
          "call_type": "method_call"
        },
        {
          "name": "analyze_dependencies",
          "file": "unknown",
          "line": 493,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 503,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 503,
          "call_type": "method_call"
        },
        {
          "name": "success",
          "file": "unknown",
          "line": 505,
          "call_type": "method_call"
        },
        {
          "name": "error",
          "file": "unknown",
          "line": 507,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 508,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 510,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 512,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 513,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 515,
          "call_type": "function_call"
        },
        {
          "name": "warning",
          "file": "unknown",
          "line": 517,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 518,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 520,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 520,
          "call_type": "method_call"
        },
        {
          "name": "info",
          "file": "unknown",
          "line": 522,
          "call_type": "method_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 523,
          "call_type": "function_call"
        },
        {
          "name": "print",
          "file": "unknown",
          "line": 525,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "register_validate",
      "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
      "line": 534,
      "language": "python",
      "docstring": "Register 'validate' subcommand for unified CLI.\n\nArgs:\n    subparsers: ArgumentParser subparsers object\n    parent_parser: Parent parser with global options\n\nNote:\n    Handlers receive (args, printer) when invoked from main().",
      "parameters": [
        {
          "name": "subparsers",
          "type": null,
          "default": null
        },
        {
          "name": "parent_parser",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "register_all_subcommands",
          "file": "src/claude_skills/claude_skills/cli/sdd/registry.py",
          "line": 33,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 546,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 549,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 550,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 555,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 558,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 561,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 562,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 564,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 566,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 568,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 570,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 572,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 574,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 576,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 579,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 582,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 583,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 584,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 586,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 588,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 591,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 595,
          "call_type": "method_call"
        },
        {
          "name": "add_parser",
          "file": "unknown",
          "line": 598,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 601,
          "call_type": "method_call"
        },
        {
          "name": "add_argument",
          "file": "unknown",
          "line": 602,
          "call_type": "method_call"
        },
        {
          "name": "set_defaults",
          "file": "unknown",
          "line": 604,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "compute_diff",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 30,
      "language": "python",
      "docstring": "Compute differences between before and after spec states.\n\nArgs:\n    before: Spec data before fixes\n    after: Spec data after fixes\n\nReturns:\n    DiffReport with all detected changes",
      "parameters": [
        {
          "name": "before",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "after",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "DiffReport",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 321,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_with_diff",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "test_diff_computation",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 193,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 56,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 66,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 69,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 72,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "_compare_nodes",
          "file": "unknown",
          "line": 81,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 84,
          "call_type": "function_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "_compare_nodes",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 89,
      "language": "python",
      "docstring": "Compare two node dicts and return list of changes.",
      "parameters": [
        {
          "name": "node_id",
          "type": "str",
          "default": null
        },
        {
          "name": "before",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "after",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "List[FieldChange]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "compute_diff",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 81,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "_compare_dicts",
          "file": "unknown",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 131,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 134,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 135,
          "call_type": "method_call"
        },
        {
          "name": "_compare_dicts",
          "file": "unknown",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_compare_dicts",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 142,
      "language": "python",
      "docstring": "Compare two dictionaries and return field changes.",
      "parameters": [
        {
          "name": "node_id",
          "type": "str",
          "default": null
        },
        {
          "name": "dict_name",
          "type": "str",
          "default": null
        },
        {
          "name": "before",
          "type": "Dict[str, Any]",
          "default": null
        },
        {
          "name": "after",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "List[FieldChange]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_compare_nodes",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 130,
          "call_type": "function_call"
        },
        {
          "name": "_compare_nodes",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 136,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 149,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "format_diff_markdown",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 171,
      "language": "python",
      "docstring": "Format diff report as markdown.",
      "parameters": [
        {
          "name": "report",
          "type": "DiffReport",
          "default": null
        },
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 329,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_with_diff",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 120,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 183,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 197,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 197,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 199,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 200,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 204,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 205,
          "call_type": "method_call"
        },
        {
          "name": "_format_value",
          "file": "unknown",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 207,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 208,
          "call_type": "method_call"
        },
        {
          "name": "_format_value",
          "file": "unknown",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 210,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 211,
          "call_type": "method_call"
        },
        {
          "name": "_format_value",
          "file": "unknown",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 212,
          "call_type": "method_call"
        },
        {
          "name": "_format_value",
          "file": "unknown",
          "line": 212,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 218,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 221,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 222,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 226,
          "call_type": "method_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 227,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 229,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 231,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "format_diff_json",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 234,
      "language": "python",
      "docstring": "Format diff report as JSON.",
      "parameters": [
        {
          "name": "report",
          "type": "DiffReport",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 326,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 253,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_format_value",
      "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
      "line": 256,
      "language": "python",
      "docstring": "Format a value for display in diff output.",
      "parameters": [
        {
          "name": "value",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "format_diff_markdown",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 205,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_markdown",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_markdown",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 211,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_markdown",
          "file": "src/claude_skills/claude_skills/sdd_validate/diff.py",
          "line": 212,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 260,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 261,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 264,
          "call_type": "function_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "collect_fix_actions",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 56,
      "language": "python",
      "docstring": "Translate a validation result into fix actions.",
      "parameters": [
        {
          "name": "result",
          "type": "JsonSpecValidationResult",
          "default": null
        }
      ],
      "return_type": "List[FixAction]",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 262,
          "call_type": "function_call"
        },
        {
          "name": "test_collect_fix_actions_finds_multiple_issues",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_with_diff",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "test_selective_fix_application",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_new_fix_builders_work",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_placeholder_file_paths",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 447,
          "call_type": "function_call"
        },
        {
          "name": "test_collect_fix_actions_empty",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "test_collect_fix_actions_with_enhanced_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_collect_fix_actions_deduplicates",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 510,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "set",
          "file": "unknown",
          "line": 60,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        },
        {
          "name": "builder",
          "file": "unknown",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 100,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 102,
          "call_type": "method_call"
        },
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 119,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "apply_fix_actions",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 127,
      "language": "python",
      "docstring": "Apply fix actions to a spec file.",
      "parameters": [
        {
          "name": "actions",
          "type": "Iterable[FixAction]",
          "default": null
        },
        {
          "name": "spec_path",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "FixReport",
      "complexity": 14,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_fix",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 311,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_with_diff",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_selective_fix_application",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_migrate_placeholder_file_paths",
          "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
          "line": 451,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_dry_run",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 389,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_real_apply",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "test_apply_fix_actions_handles_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 476,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "extend",
          "file": "unknown",
          "line": 139,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 143,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "deepcopy",
          "file": "unknown",
          "line": 150,
          "call_type": "method_call"
        },
        {
          "name": "backup_json_spec",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "with_suffix",
          "file": "unknown",
          "line": 160,
          "call_type": "method_call"
        },
        {
          "name": "copy2",
          "file": "unknown",
          "line": 161,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 171,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 172,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 174,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "deepcopy",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "asdict",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "save_json_spec",
          "file": "unknown",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "find_specs_directory",
          "file": "unknown",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 186,
          "call_type": "function_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_build_counts_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 191,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_counts_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 82,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_build_metadata_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 213,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_metadata_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "test_build_metadata_action_verify",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 140,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 215,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 219,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_build_task_category_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 250,
      "language": "python",
      "docstring": "Build auto-fix for missing or invalid task_category in task nodes.\n\nThis builder is special - it can be triggered by any metadata-related error on a task node,\nnot just task_category-specific errors. It proactively adds task_category to tasks that are\nmissing it, even when the validation doesn't report it as an error (backward compatibility).",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 10,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_task_category_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "test_build_task_category_action_investigation",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 223,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 262,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 267,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 272,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 273,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 280,
          "call_type": "method_call"
        },
        {
          "name": "infer_task_category",
          "file": "unknown",
          "line": 283,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_build_hierarchy_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 319,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_hierarchy_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 264,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 320,
          "call_type": "method_call"
        },
        {
          "name": "search",
          "file": "unknown",
          "line": 321,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 325,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_build_date_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 355,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_date_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 295,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "join",
          "file": "unknown",
          "line": 360,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 370,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_build_status_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 380,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "test_build_status_action",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 326,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 381,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 386,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 390,
          "call_type": "method_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 391,
          "call_type": "function_call"
        },
        {
          "name": "validate_status",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_normalize_timestamp",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 415,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "value",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "apply",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 347,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 350,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_timestamp",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 351,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "strip",
          "file": "unknown",
          "line": 419,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 419,
          "call_type": "function_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 420,
          "call_type": "method_call"
        },
        {
          "name": "strptime",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "fromisoformat",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "astimezone",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        }
      ],
      "call_count": 7
    },
    {
      "name": "_resolve_node_id",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 436,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "hierarchy",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[str]",
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_metadata_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 215,
          "call_type": "function_call"
        },
        {
          "name": "_build_task_category_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "_build_status_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 382,
          "call_type": "function_call"
        },
        {
          "name": "_build_missing_fields_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 470,
          "call_type": "function_call"
        },
        {
          "name": "_build_empty_title_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 525,
          "call_type": "function_call"
        },
        {
          "name": "_build_invalid_type_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 557,
          "call_type": "function_call"
        },
        {
          "name": "_build_verification_type_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 613,
          "call_type": "function_call"
        },
        {
          "name": "_build_missing_deps_structure_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "_build_leaf_count_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 742,
          "call_type": "function_call"
        },
        {
          "name": "_build_placeholder_file_path_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 828,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "findall",
          "file": "unknown",
          "line": 440,
          "call_type": "method_call"
        }
      ],
      "call_count": 10
    },
    {
      "name": "_normalize_status",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 446,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "value",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_status_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 391,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 359,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 362,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 366,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_status",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 371,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "replace",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 450,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 450,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 459,
          "call_type": "method_call"
        }
      ],
      "call_count": 14
    },
    {
      "name": "_build_missing_fields_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 467,
      "language": "python",
      "docstring": "Add missing required node fields with sensible defaults.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 15,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 469,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 470,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 474,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 485,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_empty_title_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 522,
      "language": "python",
      "docstring": "Generate title from node ID for nodes with empty titles.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 524,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 525,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 529,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 530,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 530,
          "call_type": "method_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 533,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_invalid_type_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 554,
      "language": "python",
      "docstring": "Normalize invalid node types.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 557,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 561,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 565,
          "call_type": "method_call"
        },
        {
          "name": "_normalize_node_type",
          "file": "unknown",
          "line": 567,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "_normalize_node_type",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 589,
      "language": "python",
      "docstring": "Normalize node type to valid value.",
      "parameters": [
        {
          "name": "value",
          "type": "Any",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_build_invalid_type_action",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 567,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 576,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "replace",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 594,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 601,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_build_verification_type_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 610,
      "language": "python",
      "docstring": "Fix verification_type for verify nodes.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 612,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 613,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 617,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 618,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_bidirectional_deps_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 643,
      "language": "python",
      "docstring": "Synchronize bidirectional dependency relationships.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 11,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 646,
          "call_type": "method_call"
        },
        {
          "name": "compile",
          "file": "unknown",
          "line": 650,
          "call_type": "method_call"
        },
        {
          "name": "compile",
          "file": "unknown",
          "line": 651,
          "call_type": "method_call"
        },
        {
          "name": "search",
          "file": "unknown",
          "line": 653,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 655,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 656,
          "call_type": "method_call"
        },
        {
          "name": "search",
          "file": "unknown",
          "line": 659,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 661,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 662,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_missing_deps_structure_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 703,
      "language": "python",
      "docstring": "Create dependencies dict structure.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 705,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 706,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 710,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_leaf_count_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 739,
      "language": "python",
      "docstring": "Fix leaf node total_tasks to be 1.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 741,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 742,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 746,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 747,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 750,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "_build_orphan_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 772,
      "language": "python",
      "docstring": "Handle orphaned nodes by attaching to spec-root.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 775,
          "call_type": "method_call"
        },
        {
          "name": "search",
          "file": "unknown",
          "line": 779,
          "call_type": "method_call"
        },
        {
          "name": "group",
          "file": "unknown",
          "line": 783,
          "call_type": "method_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 784,
          "call_type": "method_call"
        },
        {
          "name": "split",
          "file": "unknown",
          "line": 784,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 789,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 808,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "_build_placeholder_file_path_action",
      "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
      "line": 818,
      "language": "python",
      "docstring": "Detect and flag placeholder file_path values for migration.\n\nDetects file_path values that are actually placeholders like:\n- investigation, implementation, refactoring, decision, research (category names)\n- TBD, tbd, N/A, none, null (placeholder text)\n\nThese indicate old specs that need migration to use task_category instead.",
      "parameters": [
        {
          "name": "error",
          "type": "EnhancedError",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Optional[FixAction]",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "collect_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_category_name",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 544,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_tbd",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 597,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_case_insensitive",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 645,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_all_placeholders",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 702,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_non_placeholder",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 738,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_no_file_path",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 765,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_subtask",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 792,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_non_task_node",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 840,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_preserves_existing_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 870,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_whitespace",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 919,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_tbd_maps_to_decision",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 963,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_category_mapping",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 1017,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_generic_placeholder_uses_title",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 1063,
          "call_type": "function_call"
        },
        {
          "name": "test_build_placeholder_file_path_action_preview_shows_category",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
          "line": 1109,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 827,
          "call_type": "method_call"
        },
        {
          "name": "_resolve_node_id",
          "file": "unknown",
          "line": 828,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 832,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 837,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 841,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 842,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 845,
          "call_type": "function_call"
        },
        {
          "name": "strip",
          "file": "unknown",
          "line": 861,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 861,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 868,
          "call_type": "method_call"
        },
        {
          "name": "infer_task_category",
          "file": "unknown",
          "line": 886,
          "call_type": "function_call"
        }
      ],
      "call_count": 15
    },
    {
      "name": "_category_from_field",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 57,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "field",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "_collect_messages",
          "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
          "line": 75,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "endswith",
          "file": "unknown",
          "line": 58,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "endswith",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "_collect_messages",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 65,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "result",
          "type": "JsonSpecValidationResult",
          "default": null
        },
        {
          "name": "fields",
          "type": "Iterable[str]",
          "default": null
        },
        {
          "name": "severity",
          "type": "str",
          "default": null
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "normalize_validation_result",
          "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "normalize_validation_result",
          "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
          "line": 138,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "getattr",
          "file": "unknown",
          "line": 70,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 71,
          "call_type": "method_call"
        },
        {
          "name": "_category_from_field",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "_merge_enhanced_issues",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 83,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "issues",
          "type": "List[Dict[str, Any]]",
          "default": null
        },
        {
          "name": "enhanced_errors",
          "type": "List[EnhancedError]",
          "default": null
        }
      ],
      "return_type": "Tuple[List[Dict[str, Any]], int, int]",
      "complexity": 8,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": false,
      "callers": [
        {
          "name": "normalize_validation_result",
          "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
          "line": 140,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 116,
          "call_type": "method_call"
        },
        {
          "name": "update",
          "file": "unknown",
          "line": 118,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 121,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 122,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "normalize_validation_result",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 133,
      "language": "python",
      "docstring": "Convert a raw validation result into aggregate counts and issue metadata.",
      "parameters": [
        {
          "name": "result",
          "type": "JsonSpecValidationResult",
          "default": null
        }
      ],
      "return_type": "NormalizedValidationResult",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "src/claude_skills/claude_skills/sdd_validate/fix.py",
          "line": 184,
          "call_type": "function_call"
        },
        {
          "name": "generate_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/reporting.py",
          "line": 23,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_validation_result_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 20,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_validation_result_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "test_normalize_validation_result_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 61,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "extend",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "_collect_messages",
          "file": "unknown",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 138,
          "call_type": "method_call"
        },
        {
          "name": "_collect_messages",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "_merge_enhanced_issues",
          "file": "unknown",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 141,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 145,
          "call_type": "function_call"
        },
        {
          "name": "getattr",
          "file": "unknown",
          "line": 154,
          "call_type": "function_call"
        },
        {
          "name": "sorted",
          "file": "unknown",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 163,
          "call_type": "method_call"
        }
      ],
      "call_count": 6
    },
    {
      "name": "format_validation_summary",
      "file": "src/claude_skills/claude_skills/sdd_validate/formatting.py",
      "line": 171,
      "language": "python",
      "docstring": "Render a human-readable summary of validation findings.",
      "parameters": [
        {
          "name": "result",
          "type": "NormalizedValidationResult",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 7,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 199,
          "call_type": "function_call"
        },
        {
          "name": "test_format_validation_summary_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "test_format_validation_summary_verbose",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
          "line": 117,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "append",
          "file": "unknown",
          "line": 181,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 182,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 190,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 191,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 192,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 193,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 196,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 198,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "generate_report",
      "file": "src/claude_skills/claude_skills/sdd_validate/reporting.py",
      "line": 11,
      "language": "python",
      "docstring": "Generate a validation report in the requested format.",
      "parameters": [
        {
          "name": "result",
          "type": "JsonSpecValidationResult",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 40,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 402,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_markdown_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 18,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_markdown_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_markdown_with_warnings",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 56,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_json_clean",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 71,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_json_with_errors",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_stats",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_stats_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_cycles",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 160,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_orphaned",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 183,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_deadlocks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 206,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_bottlenecks",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_all_types",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 252,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_with_dependencies_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_legacy_dependency_keys",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 302,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_mixed_dependency_keys",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 329,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_invalid_format",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 345,
          "call_type": "function_call"
        },
        {
          "name": "test_generate_report_empty_dependency_analysis",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
          "line": 364,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 23,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 34,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 36,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 54,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 69,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 70,
          "call_type": "method_call"
        },
        {
          "name": "upper",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 77,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 80,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 81,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 84,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 86,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 87,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 94,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 98,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 101,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 103,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 105,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 106,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 107,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 112,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 114,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 115,
          "call_type": "method_call"
        },
        {
          "name": "isinstance",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 119,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 120,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 123,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 128,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 130,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 132,
          "call_type": "method_call"
        }
      ],
      "call_count": 19
    },
    {
      "name": "calculate_statistics",
      "file": "src/claude_skills/claude_skills/sdd_validate/stats.py",
      "line": 29,
      "language": "python",
      "docstring": "Compute statistics for a spec file.",
      "parameters": [
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "SpecStatistics",
      "complexity": 13,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_analyze",
          "file": "src/claude_skills/claude_skills/code_doc/cli.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "generate",
          "file": "src/claude_skills/claude_skills/code_doc/generator.py",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "cmd_validate",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 206,
          "call_type": "function_call"
        },
        {
          "name": "cmd_report",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_basic",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 51,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_with_verifications",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_empty_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "test_calculate_statistics_status_counts",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 161,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "traverse",
          "file": "unknown",
          "line": 67,
          "call_type": "function_call"
        },
        {
          "name": "round",
          "file": "unknown",
          "line": 71,
          "call_type": "function_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 73,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 74,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 75,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 82,
          "call_type": "method_call"
        },
        {
          "name": "stat",
          "file": "unknown",
          "line": 85,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 90,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        }
      ],
      "call_count": 9
    },
    {
      "name": "render_statistics",
      "file": "src/claude_skills/claude_skills/sdd_validate/stats.py",
      "line": 104,
      "language": "python",
      "docstring": "Render statistics for display.",
      "parameters": [
        {
          "name": "stats",
          "type": "SpecStatistics",
          "default": null
        }
      ],
      "return_type": "str",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "cmd_stats",
          "file": "src/claude_skills/claude_skills/sdd_validate/cli.py",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "test_render_statistics_text",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "test_render_statistics_json",
          "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
          "line": 213,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "dumps",
          "file": "unknown",
          "line": 110,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 141,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 142,
          "call_type": "method_call"
        },
        {
          "name": "extend",
          "file": "unknown",
          "line": 144,
          "call_type": "method_call"
        },
        {
          "name": "join",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "create_sample_spec_content",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 27,
      "language": "python",
      "docstring": "Create a sample spec JSON structure.\n\nArgs:\n    spec_id: Specification identifier\n    title: Specification title\n    estimated_hours: Estimated hours for the spec\n    num_phases: Number of phases to create\n    tasks_per_phase: Number of tasks per phase\n    include_verify: Whether to include verify nodes (default: False)\n    include_subtasks: Whether to include subtask nodes (default: False)\n\nReturns:\n    Complete spec data dictionary",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "default": null
        },
        {
          "name": "estimated_hours",
          "type": "float",
          "default": null
        },
        {
          "name": "num_phases",
          "type": "int",
          "default": null
        },
        {
          "name": "tasks_per_phase",
          "type": "int",
          "default": null
        },
        {
          "name": "include_verify",
          "type": "bool",
          "default": null
        },
        {
          "name": "include_subtasks",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "Dict",
      "complexity": 9,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_json_spec",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 267,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_simple",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_with_time",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 580,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_completed",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 620,
          "call_type": "function_call"
        },
        {
          "name": "valid_json_spec",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 654,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "range",
          "file": "unknown",
          "line": 71,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 96,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 126,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "create_sample_spec_data",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 174,
      "language": "python",
      "docstring": "Create sample JSON spec data.",
      "parameters": [
        {
          "name": "spec_id",
          "type": "str",
          "default": null
        },
        {
          "name": "num_phases",
          "type": "int",
          "default": null
        },
        {
          "name": "tasks_per_phase",
          "type": "int",
          "default": null
        },
        {
          "name": "with_dependencies",
          "type": "bool",
          "default": null
        }
      ],
      "return_type": "Dict[str, Any]",
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "ensure_json_spec_file",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_complex",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 457,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_with_deps",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 474,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_circular_deps",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 509,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 536,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 184,
          "call_type": "method_call"
        },
        {
          "name": "isoformat",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "now",
          "file": "unknown",
          "line": 185,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 190,
          "call_type": "function_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 204,
          "call_type": "function_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        }
      ],
      "call_count": 5
    },
    {
      "name": "ensure_json_spec",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 254,
      "language": "python",
      "docstring": "Ensure a JSON spec file exists for the given spec_id.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "sample_spec_simple",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "sample_spec_complex",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "sample_spec_invalid",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "sample_json_spec_circular_deps",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 501,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "create_sample_spec_content",
          "file": "unknown",
          "line": 267,
          "call_type": "function_call"
        },
        {
          "name": "title",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        },
        {
          "name": "replace",
          "file": "unknown",
          "line": 269,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 274,
          "call_type": "method_call"
        }
      ],
      "call_count": 4
    },
    {
      "name": "ensure_json_spec_file",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 279,
      "language": "python",
      "docstring": "Ensure matching JSON spec file is created for given spec data.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": "Path",
          "default": null
        },
        {
          "name": "spec_data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "exists",
          "file": "unknown",
          "line": 282,
          "call_type": "method_call"
        },
        {
          "name": "create_sample_spec_data",
          "file": "unknown",
          "line": 283,
          "call_type": "function_call"
        },
        {
          "name": "sum",
          "file": "unknown",
          "line": 285,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 285,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 288,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "write_spec_data",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 292,
      "language": "python",
      "docstring": "Write updated spec data to the active specs directory.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": "Path",
          "default": null
        },
        {
          "name": "data",
          "type": "Dict[str, Any]",
          "default": null
        }
      ],
      "return_type": "Path",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "sample_spec_complex",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 411,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "get",
          "file": "unknown",
          "line": 294,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "temp_dir",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 304,
      "language": "python",
      "docstring": "Provide a temporary directory that's cleaned up after test.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "specs_structure",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 311,
      "language": "python",
      "docstring": "Create a complete specs directory structure.\n\nStructure:\n    tmp_path/\n    \u2514\u2500\u2500 specs/\n        \u251c\u2500\u2500 active/      (JSON spec files)\n        \u251c\u2500\u2500 completed/   (completed specs)\n        \u2514\u2500\u2500 archived/    (archived specs)\n\nReturns:\n    Path to the specs directory (containing active/completed/archived subdirectories)",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 326,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 327,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 328,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 329,
          "call_type": "method_call"
        },
        {
          "name": "exists",
          "file": "unknown",
          "line": 331,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_spec_simple",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 342,
      "language": "python",
      "docstring": "Create a simple spec file with 2 phases, 2 tasks each.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "ensure_json_spec",
          "file": "unknown",
          "line": 344,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "sample_spec_complex",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 355,
      "language": "python",
      "docstring": "Create a complex spec file with 3 phases, 3 tasks each.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "ensure_json_spec",
          "file": "unknown",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "read_text",
          "file": "unknown",
          "line": 366,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 371,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 382,
          "call_type": "method_call"
        },
        {
          "name": "range",
          "file": "unknown",
          "line": 384,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 397,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 402,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 406,
          "call_type": "function_call"
        },
        {
          "name": "write_spec_data",
          "file": "unknown",
          "line": 411,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "sample_spec_invalid",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 415,
      "language": "python",
      "docstring": "Create an invalid spec file (missing frontmatter).",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "ensure_json_spec",
          "file": "unknown",
          "line": 417,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "read_text",
          "file": "unknown",
          "line": 423,
          "call_type": "method_call"
        },
        {
          "name": "pop",
          "file": "unknown",
          "line": 424,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_simple",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 435,
      "language": "python",
      "docstring": "Create a simple JSON spec for testing basic operations.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        },
        {
          "name": "sample_spec_simple",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_content",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 449,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_complex",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 455,
      "language": "python",
      "docstring": "Create a complex JSON spec for the complex spec.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        },
        {
          "name": "sample_spec_complex",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_data",
          "file": "unknown",
          "line": 457,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 465,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_with_deps",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 471,
      "language": "python",
      "docstring": "Create a JSON spec with task dependencies.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        },
        {
          "name": "sample_spec_simple",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_data",
          "file": "unknown",
          "line": 474,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 493,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 493,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_circular_deps",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 499,
      "language": "python",
      "docstring": "Create a JSON spec with circular dependencies.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        },
        {
          "name": "sample_spec_simple",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "ensure_json_spec",
          "file": "unknown",
          "line": 501,
          "call_type": "function_call"
        },
        {
          "name": "create_sample_spec_data",
          "file": "unknown",
          "line": 509,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 528,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 528,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_with_blockers",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 534,
      "language": "python",
      "docstring": "Create a JSON spec with some blocked tasks.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        },
        {
          "name": "sample_spec_simple",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_data",
          "file": "unknown",
          "line": 536,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 572,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 572,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_with_time",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 578,
      "language": "python",
      "docstring": "Create a JSON spec with time tracking data.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_content",
          "file": "unknown",
          "line": 580,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 612,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 612,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_json_spec_completed",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 618,
      "language": "python",
      "docstring": "Create a fully completed JSON spec.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_content",
          "file": "unknown",
          "line": 620,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 628,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 634,
          "call_type": "method_call"
        },
        {
          "name": "recalculate_progress",
          "file": "unknown",
          "line": 640,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 644,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 644,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "valid_json_spec",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 650,
      "language": "python",
      "docstring": "Create a valid JSON spec with verification nodes for testing verification operations.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_sample_spec_content",
          "file": "unknown",
          "line": 654,
          "call_type": "function_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 665,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 665,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 669,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 669,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "state_with_orphaned_nodes",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 675,
      "language": "python",
      "docstring": "Create a JSON spec with orphaned nodes (missing parents/invalid dependencies).",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 742,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 742,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "invalid_state_structure",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 747,
      "language": "python",
      "docstring": "Create a JSON spec with nodes missing required fields.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 792,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 792,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "state_with_circular_deps_plan",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 797,
      "language": "python",
      "docstring": "Create a JSON spec with circular dependencies.",
      "parameters": [
        {
          "name": "specs_structure",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 880,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 880,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_node_project",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 889,
      "language": "python",
      "docstring": "Create a sample Node.js project structure.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 892,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 911,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 911,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 914,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 915,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 918,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 919,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_python_project",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 925,
      "language": "python",
      "docstring": "Create a sample Python project structure.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 928,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 932,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 936,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 939,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 940,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 941,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 944,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 945,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 946,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_frontmatter",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 956,
      "language": "python",
      "docstring": "Sample frontmatter data.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "sample_task_data",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 969,
      "language": "python",
      "docstring": "Sample task data.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "mock_printer",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 995,
      "language": "python",
      "docstring": "Mock PrettyPrinter for testing output.",
      "parameters": [
        {
          "name": "mocker",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "Mock",
          "file": "unknown",
          "line": 998,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "assert_json_structure",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 1007,
      "language": "python",
      "docstring": "Helper to assert JSON structure.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "create_temp_spec_file",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 1017,
      "language": "python",
      "docstring": "Factory fixture to create temporary JSON spec files.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "sample_spec_invalid_frontmatter",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 1050,
          "call_type": "function_call"
        },
        {
          "name": "sample_spec_invalid_phases",
          "file": "src/claude_skills/claude_skills/tests/conftest.py",
          "line": 1120,
          "call_type": "function_call"
        }
      ],
      "calls": [],
      "call_count": 2
    },
    {
      "name": "create_temp_json_spec",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 1027,
      "language": "python",
      "docstring": "Factory fixture to create temporary JSON specs.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "sample_spec_invalid_frontmatter",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 1042,
      "language": "python",
      "docstring": "Create a spec missing required top-level fields.",
      "parameters": [
        {
          "name": "create_temp_spec_file",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "create_temp_spec_file",
          "file": "unknown",
          "line": 1050,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "sample_spec_invalid_phases",
      "file": "src/claude_skills/claude_skills/tests/conftest.py",
      "line": 1054,
      "language": "python",
      "docstring": "Create a spec with invalid phase structure.",
      "parameters": [
        {
          "name": "create_temp_spec_file",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_spec_json",
          "file": "unknown",
          "line": 1056,
          "call_type": "function_call"
        },
        {
          "name": "create_temp_spec_file",
          "file": "unknown",
          "line": 1120,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "run_doc_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
      "line": 14,
      "language": "python",
      "docstring": "Run doc CLI via sdd.",
      "parameters": [],
      "return_type": "subprocess.CompletedProcess[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_doc_help_lists_key_subcommands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
          "line": 23,
          "call_type": "function_call"
        },
        {
          "name": "test_doc_requires_subcommand",
          "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
          "line": 38,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 16,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 17,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 18,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 19,
          "call_type": "method_call"
        }
      ],
      "call_count": 2
    },
    {
      "name": "test_doc_help_lists_key_subcommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
      "line": 22,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_doc_cli",
          "file": "unknown",
          "line": 23,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 25,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_doc_requires_subcommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py",
      "line": 37,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_doc_cli",
          "file": "unknown",
          "line": 38,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 40,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "run_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
      "line": 20,
      "language": "python",
      "docstring": "Run sdd command with fallback to python -m if sdd not on PATH.\n\nAutomatically reorders arguments to put global flags before subcommands.\nGlobal flags: --path, --specs-dir, --quiet, --json, --debug, --verbose, --no-color",
      "parameters": [],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_version",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_tools_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_nonexistent_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 327,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 337,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_shows_new_commands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_status_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_type_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_format_simple",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 193,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 367,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_nonexistent_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 403,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 421,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 454,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 473,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_with_task_id",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_custom_author",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_new_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 521,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_failed_status",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 591,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_specific_tasks",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 636,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_clean_spec_exit_0",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_warnings_spec_exit_1",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_errors_spec_exit_2",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_verbose_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report_json_format",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_with_issues",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_dry_run",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_creates_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_no_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_report_markdown",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_report_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_dependencies",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_deep_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_verification_coverage",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_cycles",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_orphaned",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 323,
          "call_type": "function_call"
        },
        {
          "name": "test_quiet_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 332,
          "call_type": "function_call"
        },
        {
          "name": "test_no_color_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "test_verbose_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "test_help_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 350,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_spec_file_argument",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 373,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "list",
          "file": "unknown",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "which",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        }
      ],
      "call_count": 92
    },
    {
      "name": "run_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
      "line": 20,
      "language": "python",
      "docstring": "Run sdd command with fallback to python -m if sdd not on PATH.\n\nAutomatically reorders arguments to put global flags before subcommands.\nGlobal flags: --path, --specs-dir, --quiet, --json, --debug, --verbose, --no-color",
      "parameters": [],
      "return_type": null,
      "complexity": 6,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_version",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_tools_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_nonexistent_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 327,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 337,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_shows_new_commands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_status_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_type_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_format_simple",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 193,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 367,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_nonexistent_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 403,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 421,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 454,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 473,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_with_task_id",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_custom_author",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_new_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 521,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_failed_status",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 591,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_specific_tasks",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 636,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_clean_spec_exit_0",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_warnings_spec_exit_1",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_errors_spec_exit_2",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_verbose_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report_json_format",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_with_issues",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_dry_run",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_creates_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_no_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_report_markdown",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_report_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_dependencies",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_deep_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_verification_coverage",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_cycles",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_orphaned",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 323,
          "call_type": "function_call"
        },
        {
          "name": "test_quiet_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 332,
          "call_type": "function_call"
        },
        {
          "name": "test_no_color_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "test_verbose_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "test_help_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 350,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_spec_file_argument",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 373,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "list",
          "file": "unknown",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 39,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 44,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 49,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 53,
          "call_type": "method_call"
        },
        {
          "name": "which",
          "file": "unknown",
          "line": 59,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 60,
          "call_type": "method_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 62,
          "call_type": "method_call"
        }
      ],
      "call_count": 92
    },
    {
      "name": "run_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
      "line": 24,
      "language": "python",
      "docstring": "Helper to run sdd CLI with unified command (sdd-validate commands).",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 73,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_version",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_tools_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 98,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 112,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 122,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 137,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 148,
          "call_type": "function_call"
        },
        {
          "name": "test_next_task_nonexistent_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 163,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_task_info_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 189,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 207,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 218,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 229,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 247,
          "call_type": "function_call"
        },
        {
          "name": "test_progress_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 258,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 289,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 309,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 319,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 327,
          "call_type": "function_call"
        },
        {
          "name": "test_complete_task_discovery_workflow",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py",
          "line": 337,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_shows_new_commands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 84,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_status_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 117,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_type_filter",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_format_simple",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 158,
          "call_type": "function_call"
        },
        {
          "name": "test_query_tasks_invalid_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 177,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 193,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_get_task_nonexistent",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 246,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 259,
          "call_type": "function_call"
        },
        {
          "name": "test_list_phases_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 278,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 293,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 341,
          "call_type": "function_call"
        },
        {
          "name": "test_check_complete_exit_code",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 351,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 367,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 381,
          "call_type": "function_call"
        },
        {
          "name": "test_phase_time_nonexistent_phase",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 403,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 421,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 434,
          "call_type": "function_call"
        },
        {
          "name": "test_list_blockers_no_blockers",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 454,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 473,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_with_task_id",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "test_add_journal_custom_author",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 505,
          "call_type": "function_call"
        },
        {
          "name": "test_sync_metadata_new_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 521,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "test_add_verification_failed_status",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 591,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_new_signature",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 615,
          "call_type": "function_call"
        },
        {
          "name": "test_bulk_journal_specific_tasks",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py",
          "line": 636,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_clean_spec_exit_0",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 47,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_warnings_spec_exit_1",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 53,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_errors_spec_exit_2",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 65,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_json_verbose",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 77,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_verbose_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 85,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_nonexistent_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_with_report_json_format",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 115,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_with_issues",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_preview_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 144,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_dry_run",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_creates_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_no_backup",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 174,
          "call_type": "function_call"
        },
        {
          "name": "test_fix_apply_json_output",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 186,
          "call_type": "function_call"
        },
        {
          "name": "test_report_markdown",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 198,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 208,
          "call_type": "function_call"
        },
        {
          "name": "test_report_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 220,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_dependencies",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 226,
          "call_type": "function_call"
        },
        {
          "name": "test_report_json_stdout",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 232,
          "call_type": "function_call"
        },
        {
          "name": "test_report_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_basic",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 263,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_deep_hierarchy",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "test_stats_verification_coverage",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 282,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_clean_spec",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_cycles",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 300,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_json",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 306,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_with_bottleneck_threshold",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 317,
          "call_type": "function_call"
        },
        {
          "name": "test_check_deps_orphaned",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 323,
          "call_type": "function_call"
        },
        {
          "name": "test_quiet_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 332,
          "call_type": "function_call"
        },
        {
          "name": "test_no_color_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 338,
          "call_type": "function_call"
        },
        {
          "name": "test_verbose_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "test_help_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 350,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 360,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_spec_file_argument",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_json_file",
          "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py",
          "line": 373,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "which",
          "file": "unknown",
          "line": 27,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 28,
          "call_type": "function_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 33,
          "call_type": "method_call"
        }
      ],
      "call_count": 92
    },
    {
      "name": "spec_with_issues",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 19,
      "language": "python",
      "docstring": "Create a test spec with various fixable issues.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "test_collect_fix_actions_finds_multiple_issues",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 72,
      "language": "python",
      "docstring": "Test that collect_fix_actions finds all auto-fixable issues.",
      "parameters": [
        {
          "name": "spec_with_issues",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 74,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 75,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 85,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_fix_actions_with_diff",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 88,
      "language": "python",
      "docstring": "Test apply_fix_actions with diff capture.",
      "parameters": [
        {
          "name": "spec_with_issues",
          "type": null,
          "default": null
        },
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 92,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 93,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 102,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 104,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        },
        {
          "name": "compute_diff",
          "file": "unknown",
          "line": 116,
          "call_type": "function_call"
        },
        {
          "name": "format_diff_markdown",
          "file": "unknown",
          "line": 120,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_selective_fix_application",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 125,
      "language": "python",
      "docstring": "Test that we can selectively apply only certain fixes.",
      "parameters": [
        {
          "name": "spec_with_issues",
          "type": null,
          "default": null
        },
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 3,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 128,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 129,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 131,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 132,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 138,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 146,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 147,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_new_fix_builders_work",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 150,
      "language": "python",
      "docstring": "Test that the new fix builders are functional.",
      "parameters": [
        {
          "name": "spec_with_issues",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 153,
          "call_type": "function_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "setdefault",
          "file": "unknown",
          "line": 158,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 162,
          "call_type": "function_call"
        },
        {
          "name": "keys",
          "file": "unknown",
          "line": 162,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 166,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_diff_computation",
      "file": "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py",
      "line": 169,
      "language": "python",
      "docstring": "Test diff computation with before/after states.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "compute_diff",
          "file": "unknown",
          "line": 193,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "run_skills_dev_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
      "line": 15,
      "language": "python",
      "docstring": "Run skills-dev CLI via sdd.",
      "parameters": [],
      "return_type": "subprocess.CompletedProcess[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_skills_dev_help_lists_key_subcommands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "test_skills_dev_requires_subcommand",
          "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "test_skills_dev_migrate_shows_guidance",
          "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
          "line": 44,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 17,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 18,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 19,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 20,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "test_skills_dev_help_lists_key_subcommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
      "line": 23,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_skills_dev_cli",
          "file": "unknown",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 26,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_skills_dev_requires_subcommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
      "line": 36,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_skills_dev_cli",
          "file": "unknown",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_skills_dev_migrate_shows_guidance",
      "file": "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py",
      "line": 43,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_skills_dev_cli",
          "file": "unknown",
          "line": 44,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "spec_with_all_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 27,
      "language": "python",
      "docstring": "Create a test spec with all five task_category types.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "spec_without_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 126,
      "language": "python",
      "docstring": "Create a test spec in old format (no task_category field).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "spec_with_mixed_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 184,
      "language": "python",
      "docstring": "Create a test spec with mix of categorized and uncategorized tasks.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "spec_with_placeholder_paths",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 257,
      "language": "python",
      "docstring": "Create spec with placeholder file_path values that need migration.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "test_validate_spec_with_all_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 318,
      "language": "python",
      "docstring": "Test that validation accepts spec with all valid task_category types.",
      "parameters": [
        {
          "name": "spec_with_all_categories",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 5,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 320,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 323,
          "call_type": "method_call"
        },
        {
          "name": "set",
          "file": "unknown",
          "line": 328,
          "call_type": "function_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 330,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 331,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 332,
          "call_type": "method_call"
        },
        {
          "name": "add",
          "file": "unknown",
          "line": 334,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_validate_spec_without_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 341,
      "language": "python",
      "docstring": "Test that validation accepts old-format spec without task_category (backward compat).",
      "parameters": [
        {
          "name": "spec_without_categories",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_validate_spec_with_invalid_category",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 351,
      "language": "python",
      "docstring": "Test that validation rejects invalid task_category values.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 386,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 389,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 395,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 395,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 396,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_validate_mixed_format_spec",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 399,
      "language": "python",
      "docstring": "Test that validation accepts spec with mix of categorized/uncategorized tasks.",
      "parameters": [
        {
          "name": "spec_with_mixed_categories",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 401,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 404,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_migrate_old_spec_preserves_functionality",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 413,
      "language": "python",
      "docstring": "Test that old specs can be migrated without breaking functionality.",
      "parameters": [
        {
          "name": "spec_without_categories",
          "type": null,
          "default": null
        },
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 416,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 417,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 420,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 421,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 431,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 433,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 434,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_migrate_placeholder_file_paths",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 439,
      "language": "python",
      "docstring": "Test that placeholder file_path values can be migrated with task_category.",
      "parameters": [
        {
          "name": "spec_with_placeholder_paths",
          "type": null,
          "default": null
        },
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 442,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 446,
          "call_type": "function_call"
        },
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 447,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 451,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 453,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 459,
          "call_type": "function_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 462,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 463,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 467,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_full_workflow_with_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 475,
      "language": "python",
      "docstring": "Test complete workflow: generate -> validate -> use spec with task_category.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_spec_from_template",
          "file": "unknown",
          "line": 478,
          "call_type": "function_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 489,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 490,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 496,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 497,
          "call_type": "method_call"
        },
        {
          "name": "open",
          "file": "unknown",
          "line": 499,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 500,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 503,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 504,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_backward_compatibility_no_breaking_changes",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 508,
      "language": "python",
      "docstring": "Test that existing workflows work unchanged with old-format specs.",
      "parameters": [
        {
          "name": "spec_without_categories",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 511,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 514,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 522,
          "call_type": "function_call"
        },
        {
          "name": "values",
          "file": "unknown",
          "line": 525,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 525,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 526,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_gradual_migration_path",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 533,
      "language": "python",
      "docstring": "Test that specs can be gradually migrated (some tasks categorized, some not).",
      "parameters": [
        {
          "name": "spec_with_mixed_categories",
          "type": null,
          "default": null
        },
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 4,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "open",
          "file": "unknown",
          "line": 536,
          "call_type": "function_call"
        },
        {
          "name": "dump",
          "file": "unknown",
          "line": 537,
          "call_type": "method_call"
        },
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 540,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 541,
          "call_type": "method_call"
        },
        {
          "name": "items",
          "file": "unknown",
          "line": 552,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 553,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 554,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 556,
          "call_type": "method_call"
        },
        {
          "name": "append",
          "file": "unknown",
          "line": 558,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 561,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 562,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_empty_task_category_field",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 569,
      "language": "python",
      "docstring": "Test handling of empty/null task_category (should use default inference).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 604,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 608,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_case_sensitivity_of_categories",
      "file": "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py",
      "line": 613,
      "language": "python",
      "docstring": "Test that task_category values are case-sensitive.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "validate_spec_hierarchy",
          "file": "unknown",
          "line": 648,
          "call_type": "function_call"
        },
        {
          "name": "count_all_issues",
          "file": "unknown",
          "line": 651,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "run_test_cli",
      "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
      "line": 15,
      "language": "python",
      "docstring": "Run test CLI via sdd.",
      "parameters": [],
      "return_type": "subprocess.CompletedProcess[str]",
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_test_help_lists_key_subcommands",
          "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "test_test_requires_subcommand",
          "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "test_test_run_list_presets_success",
          "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
          "line": 44,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "copy",
          "file": "unknown",
          "line": 17,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 18,
          "call_type": "function_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 19,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 20,
          "call_type": "method_call"
        }
      ],
      "call_count": 3
    },
    {
      "name": "test_test_help_lists_key_subcommands",
      "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
      "line": 23,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_test_cli",
          "file": "unknown",
          "line": 24,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 26,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_test_requires_subcommand",
      "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
      "line": 36,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_test_cli",
          "file": "unknown",
          "line": 37,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 39,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_test_run_list_presets_success",
      "file": "src/claude_skills/claude_skills/tests/integration/test_test_cli.py",
      "line": 43,
      "language": "python",
      "docstring": null,
      "parameters": [],
      "return_type": "None",
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "run_test_cli",
          "file": "unknown",
          "line": 44,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 46,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "has_sdd_command",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 19,
      "language": "python",
      "docstring": "Check if sdd command is available on PATH.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "run_sdd_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 31,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "which",
          "file": "unknown",
          "line": 21,
          "call_type": "method_call"
        }
      ],
      "call_count": 1
    },
    {
      "name": "run_sdd_command",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 24,
      "language": "python",
      "docstring": "Run sdd command with fallback to python -m if sdd not on PATH.\n\nThis ensures tests work in different environments.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [
        {
          "name": "test_cli_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 46,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_no_args",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "test_cli_version_implicit",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 69,
          "call_type": "function_call"
        },
        {
          "name": "test_verify_tools",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 83,
          "call_type": "function_call"
        },
        {
          "name": "test_find_specs",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 99,
          "call_type": "function_call"
        },
        {
          "name": "test_status_report_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 114,
          "call_type": "function_call"
        },
        {
          "name": "test_update_command_exists",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 125,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_help",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_command_exists",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 151,
          "call_type": "function_call"
        },
        {
          "name": "test_json_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 166,
          "call_type": "function_call"
        },
        {
          "name": "test_quiet_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 187,
          "call_type": "function_call"
        },
        {
          "name": "test_quiet_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 194,
          "call_type": "function_call"
        },
        {
          "name": "test_verbose_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 206,
          "call_type": "function_call"
        },
        {
          "name": "test_verbose_flag",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "test_invalid_command",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 228,
          "call_type": "function_call"
        },
        {
          "name": "test_missing_required_arg",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 241,
          "call_type": "function_call"
        },
        {
          "name": "test_next_command_works",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 257,
          "call_type": "function_call"
        },
        {
          "name": "test_update_command_works",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 269,
          "call_type": "function_call"
        },
        {
          "name": "test_validate_command_works",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "test_new_sdd_command_works",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "test_help_fast_response",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 312,
          "call_type": "function_call"
        },
        {
          "name": "test_command_help_fast_response",
          "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
          "line": 328,
          "call_type": "function_call"
        }
      ],
      "calls": [
        {
          "name": "has_sdd_command",
          "file": "unknown",
          "line": 31,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 32,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 32,
          "call_type": "function_call"
        },
        {
          "name": "run",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        },
        {
          "name": "list",
          "file": "unknown",
          "line": 36,
          "call_type": "function_call"
        }
      ],
      "call_count": 22
    },
    {
      "name": "minimal_specs_dir",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 343,
      "language": "python",
      "docstring": "Create a minimal specs directory structure for testing.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 346,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 347,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 348,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 349,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_spec_file",
      "file": "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py",
      "line": 355,
      "language": "python",
      "docstring": "Create a minimal sample spec file for testing.",
      "parameters": [
        {
          "name": "minimal_specs_dir",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 358,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "sample_modules",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 11,
      "language": "python",
      "docstring": "Sample module data for testing framework and layer detection.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "django_modules",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 108,
      "language": "python",
      "docstring": "Sample Django module data.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "flask_modules",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 133,
      "language": "python",
      "docstring": "Sample Flask module data.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "plain_modules",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 149,
      "language": "python",
      "docstring": "Sample plain Python library (no framework).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "sample_statistics",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 174,
      "language": "python",
      "docstring": "Sample code statistics.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "sample_framework_info",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 188,
      "language": "python",
      "docstring": "Sample framework detection result.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "sample_layers",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 199,
      "language": "python",
      "docstring": "Sample layer detection result.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "mock_subprocess_run",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 214,
      "language": "python",
      "docstring": "Mock subprocess.run for AI tool testing.",
      "parameters": [
        {
          "name": "monkeypatch",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "setattr",
          "file": "unknown",
          "line": 225,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "mock_subprocess_run_failure",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 230,
      "language": "python",
      "docstring": "Mock subprocess.run returning failure.",
      "parameters": [
        {
          "name": "monkeypatch",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "setattr",
          "file": "unknown",
          "line": 241,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "temp_project_dir",
      "file": "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py",
      "line": 246,
      "language": "python",
      "docstring": "Create a temporary project directory with README.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 249,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 252,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "doc_query_samples",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/conftest.py",
      "line": 9,
      "language": "python",
      "docstring": "Create sample documentation payloads for doc_query tests.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": "Path",
          "default": null
        }
      ],
      "return_type": "Dict[str, Path]",
      "complexity": 1,
      "decorators": [
        "pytest.fixture"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 12,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 88,
          "call_type": "method_call"
        },
        {
          "name": "mkdir",
          "file": "unknown",
          "line": 91,
          "call_type": "method_call"
        },
        {
          "name": "write_text",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 113,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_normalizes_modern_payload",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 6,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "doc_query_samples",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 8,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 9,
          "call_type": "method_call"
        },
        {
          "name": "get_stats",
          "file": "unknown",
          "line": 11,
          "call_type": "method_call"
        },
        {
          "name": "list_modules",
          "file": "unknown",
          "line": 17,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 18,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_normalizes_legacy_payload",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 25,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "doc_query_samples",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 27,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 28,
          "call_type": "method_call"
        },
        {
          "name": "get_stats",
          "file": "unknown",
          "line": 30,
          "call_type": "method_call"
        },
        {
          "name": "find_module",
          "file": "unknown",
          "line": 35,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_describe_module_returns_summary",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 40,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "doc_query_samples",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 43,
          "call_type": "method_call"
        },
        {
          "name": "describe_module",
          "file": "unknown",
          "line": 45,
          "call_type": "method_call"
        },
        {
          "name": "approx",
          "file": "unknown",
          "line": 47,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 48,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_context_for_area_includes_docstrings_and_stats",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 52,
      "language": "python",
      "docstring": null,
      "parameters": [
        {
          "name": "doc_query_samples",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "str",
          "file": "unknown",
          "line": 54,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 55,
          "call_type": "method_call"
        },
        {
          "name": "get_context_for_area",
          "file": "unknown",
          "line": 57,
          "call_type": "method_call"
        },
        {
          "name": "approx",
          "file": "unknown",
          "line": 65,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_callers_with_v2_schema",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 72,
      "language": "python",
      "docstring": "Test get_callers() with schema v2.0 cross-reference data.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 76,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 94,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 95,
          "call_type": "method_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 97,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 98,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_get_callers_exclude_file",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 106,
      "language": "python",
      "docstring": "Test get_callers() with include_file=False.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 109,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 124,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 125,
          "call_type": "method_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 127,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 128,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_get_callers_exclude_line",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 134,
      "language": "python",
      "docstring": "Test get_callers() with include_line=False.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 152,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 153,
          "call_type": "method_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 155,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 156,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_get_callers_function_not_found",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 162,
      "language": "python",
      "docstring": "Test get_callers() returns empty list when function not found.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 165,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 167,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 168,
          "call_type": "method_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 170,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_callers_no_callers",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 174,
      "language": "python",
      "docstring": "Test get_callers() returns empty list when function has no callers.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 177,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 186,
          "call_type": "method_call"
        },
        {
          "name": "get_callers",
          "file": "unknown",
          "line": 188,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_callees_with_v2_schema",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 192,
      "language": "python",
      "docstring": "Test get_callees() with schema v2.0 cross-reference data.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 195,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        },
        {
          "name": "get_callees",
          "file": "unknown",
          "line": 216,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 217,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_get_callees_exclude_file",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 225,
      "language": "python",
      "docstring": "Test get_callees() with include_file=False.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 228,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 243,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 244,
          "call_type": "method_call"
        },
        {
          "name": "get_callees",
          "file": "unknown",
          "line": 246,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 247,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_get_callees_function_not_found",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 251,
      "language": "python",
      "docstring": "Test get_callees() returns empty list when function not found.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 254,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 256,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 257,
          "call_type": "method_call"
        },
        {
          "name": "get_callees",
          "file": "unknown",
          "line": 259,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_call_count_with_value",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 263,
      "language": "python",
      "docstring": "Test get_call_count() returns count when available.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 266,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 274,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 275,
          "call_type": "method_call"
        },
        {
          "name": "get_call_count",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_call_count_none",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 281,
      "language": "python",
      "docstring": "Test get_call_count() returns None when not available.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 284,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 292,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 293,
          "call_type": "method_call"
        },
        {
          "name": "get_call_count",
          "file": "unknown",
          "line": 295,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_get_call_count_function_not_found",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 299,
      "language": "python",
      "docstring": "Test get_call_count() returns None when function not found.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 302,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 304,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 305,
          "call_type": "method_call"
        },
        {
          "name": "get_call_count",
          "file": "unknown",
          "line": 307,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_normalize_v2_schema_fields",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 311,
      "language": "python",
      "docstring": "Test that v2.0 schema fields are properly normalized.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 314,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 334,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 335,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 339,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 343,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 344,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_callees_only",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 360,
      "language": "python",
      "docstring": "Test build_call_graph() with direction='callees'.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 363,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 389,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 390,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 392,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 396,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 397,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_callers_only",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 400,
      "language": "python",
      "docstring": "Test build_call_graph() with direction='callers'.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 403,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 430,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 432,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 436,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 437,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_both_directions",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 440,
      "language": "python",
      "docstring": "Test build_call_graph() with direction='both'.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 443,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 463,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 464,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 466,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 470,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 471,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_max_depth",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 474,
      "language": "python",
      "docstring": "Test build_call_graph() respects max_depth.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 477,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 509,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 510,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 513,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 516,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_handles_cycles",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 521,
      "language": "python",
      "docstring": "Test build_call_graph() handles circular dependencies.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 524,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 547,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 548,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 551,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 554,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 558,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_function_not_found",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 561,
      "language": "python",
      "docstring": "Test build_call_graph() with non-existent function.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 564,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 566,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 567,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 569,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 572,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 573,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_isolated_function",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 577,
      "language": "python",
      "docstring": "Test build_call_graph() with function that has no callers or callees.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 580,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 588,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 589,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 591,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 594,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 595,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_include_metadata",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 599,
      "language": "python",
      "docstring": "Test build_call_graph() includes metadata when requested.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 602,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 619,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 620,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 622,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_without_metadata",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 634,
      "language": "python",
      "docstring": "Test build_call_graph() excludes metadata when not requested.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 637,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 653,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 654,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 656,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_depth_values",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 665,
      "language": "python",
      "docstring": "Test build_call_graph() assigns correct depth values.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 668,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 692,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 693,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 695,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_call_graph_invalid_direction",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 702,
      "language": "python",
      "docstring": "Test build_call_graph() raises error for invalid direction.",
      "parameters": [
        {
          "name": "tmp_path",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "write_text",
          "file": "unknown",
          "line": 705,
          "call_type": "method_call"
        },
        {
          "name": "str",
          "file": "unknown",
          "line": 707,
          "call_type": "function_call"
        },
        {
          "name": "load",
          "file": "unknown",
          "line": 708,
          "call_type": "method_call"
        },
        {
          "name": "raises",
          "file": "unknown",
          "line": 710,
          "call_type": "method_call"
        },
        {
          "name": "build_call_graph",
          "file": "unknown",
          "line": 711,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_exact_match",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 716,
      "language": "python",
      "docstring": "Test exact name matching.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 724,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 726,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_exact_match_no_results",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 730,
      "language": "python",
      "docstring": "Test exact match returns empty list when no match found.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 734,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_regex_pattern",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 739,
      "language": "python",
      "docstring": "Test regex pattern matching (case-insensitive).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 748,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 750,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_regex_case_insensitive",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 756,
      "language": "python",
      "docstring": "Test that regex pattern matching is case-insensitive.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 765,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 767,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_regex_complex_pattern",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 770,
      "language": "python",
      "docstring": "Test regex with more complex pattern.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 780,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 782,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_invalid_regex",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 788,
      "language": "python",
      "docstring": "Test that invalid regex raises re.error.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "raises",
          "file": "unknown",
          "line": 794,
          "call_type": "method_call"
        },
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 795,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_empty_items",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 798,
      "language": "python",
      "docstring": "Test with empty items list.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 800,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_custom_key_function",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 805,
      "language": "python",
      "docstring": "Test custom key function for nested fields.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 814,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 818,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 821,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_custom_key_exact_match",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 827,
      "language": "python",
      "docstring": "Test custom key function with exact matching.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 835,
          "call_type": "method_call"
        },
        {
          "name": "get",
          "file": "unknown",
          "line": 839,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 842,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_missing_key",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 846,
      "language": "python",
      "docstring": "Test graceful handling when key is missing from some items.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 854,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 857,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_empty_string_values",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 861,
      "language": "python",
      "docstring": "Test that empty string values are skipped.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 869,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 871,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_regex_empty_string",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 875,
      "language": "python",
      "docstring": "Test regex pattern with empty string values.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 883,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 885,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_key_func_exception",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 889,
      "language": "python",
      "docstring": "Test that exceptions in key_func are handled gracefully.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 898,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 906,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_preserves_item_structure",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 910,
      "language": "python",
      "docstring": "Test that filtered items maintain their full structure.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 917,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 919,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_pattern_filter_multiple_matches",
      "file": "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py",
      "line": 923,
      "language": "python",
      "docstring": "Test pattern that matches multiple items.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "apply_pattern_filter",
          "file": "unknown",
          "line": 932,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 934,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_collect_fix_actions_empty",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 26,
      "language": "python",
      "docstring": "Test collecting actions from a clean validation result.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 35,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 37,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_collect_fix_actions_with_enhanced_errors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 40,
      "language": "python",
      "docstring": "Test collecting actions from enhanced errors.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 59,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        },
        {
          "name": "any",
          "file": "unknown",
          "line": 62,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_counts_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 65,
      "language": "python",
      "docstring": "Test building counts fix action.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_counts_action",
          "file": "unknown",
          "line": 82,
          "call_type": "function_call"
        },
        {
          "name": "callable",
          "file": "unknown",
          "line": 88,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_metadata_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 91,
      "language": "python",
      "docstring": "Test building metadata fix action.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_metadata_action",
          "file": "unknown",
          "line": 108,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 117,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_metadata_action_verify",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 123,
      "language": "python",
      "docstring": "Test building metadata fix action for verification nodes.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_metadata_action",
          "file": "unknown",
          "line": 140,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 146,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_task_category_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 154,
      "language": "python",
      "docstring": "Test building task_category fix action for implementation task.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_task_category_action",
          "file": "unknown",
          "line": 176,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 194,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_task_category_action_investigation",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 201,
      "language": "python",
      "docstring": "Test building task_category fix action for investigation task.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_task_category_action",
          "file": "unknown",
          "line": 223,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 238,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_hierarchy_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 246,
      "language": "python",
      "docstring": "Test building hierarchy fix action.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_hierarchy_action",
          "file": "unknown",
          "line": 264,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_date_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 282,
      "language": "python",
      "docstring": "Test building date normalization action.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_date_action",
          "file": "unknown",
          "line": 295,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 303,
          "call_type": "method_call"
        },
        {
          "name": "endswith",
          "file": "unknown",
          "line": 306,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_status_action",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 309,
      "language": "python",
      "docstring": "Test building status normalization action.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_status_action",
          "file": "unknown",
          "line": 326,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 338,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_normalize_timestamp",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 343,
      "language": "python",
      "docstring": "Test timestamp normalization.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 346,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 347,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 348,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 349,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 350,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_timestamp",
          "file": "unknown",
          "line": 351,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_normalize_status",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 354,
      "language": "python",
      "docstring": "Test status normalization.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 356,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 357,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 358,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 359,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 362,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 363,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 365,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 366,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 369,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 370,
          "call_type": "function_call"
        },
        {
          "name": "_normalize_status",
          "file": "unknown",
          "line": 371,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_fix_actions_dry_run",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 374,
      "language": "python",
      "docstring": "Test applying actions in dry-run mode.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "patch",
          "file": "unknown",
          "line": 388,
          "call_type": "function_call"
        },
        {
          "name": "mock_open",
          "file": "unknown",
          "line": 388,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 389,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 392,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 393,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_fix_actions_real_apply",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 401,
      "language": "python",
      "docstring": "Test actually applying fix actions.",
      "parameters": [
        {
          "name": "mock_backup",
          "type": null,
          "default": null
        },
        {
          "name": "mock_save",
          "type": null,
          "default": null
        },
        {
          "name": "mock_validate",
          "type": null,
          "default": null
        },
        {
          "name": "mock_recalc",
          "type": null,
          "default": null
        }
      ],
      "return_type": null,
      "complexity": 1,
      "decorators": [
        "patch('claude_skills.sdd_validate.fix.recalculate_progress')",
        "patch('claude_skills.sdd_validate.fix.validate_spec_hierarchy')",
        "patch('claude_skills.sdd_validate.fix.save_json_spec')",
        "patch('claude_skills.sdd_validate.fix.backup_json_spec')"
      ],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "__setitem__",
          "file": "unknown",
          "line": 425,
          "call_type": "method_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "mock_open",
          "file": "unknown",
          "line": 429,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 429,
          "call_type": "method_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 430,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 438,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 439,
          "call_type": "function_call"
        },
        {
          "name": "assert_called_once",
          "file": "unknown",
          "line": 444,
          "call_type": "method_call"
        },
        {
          "name": "assert_called_once",
          "file": "unknown",
          "line": 447,
          "call_type": "method_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 397,
          "call_type": "function_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 398,
          "call_type": "function_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 399,
          "call_type": "function_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 400,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_apply_fix_actions_handles_errors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 450,
      "language": "python",
      "docstring": "Test that apply_fix_actions handles errors gracefully.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "throw",
          "file": "unknown",
          "line": 460,
          "call_type": "method_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "mock_open",
          "file": "unknown",
          "line": 466,
          "call_type": "function_call"
        },
        {
          "name": "dumps",
          "file": "unknown",
          "line": 466,
          "call_type": "method_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 467,
          "call_type": "function_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 468,
          "call_type": "function_call"
        },
        {
          "name": "patch",
          "file": "unknown",
          "line": 469,
          "call_type": "function_call"
        },
        {
          "name": "apply_fix_actions",
          "file": "unknown",
          "line": 476,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 479,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 480,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_collect_fix_actions_deduplicates",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 483,
      "language": "python",
      "docstring": "Test that collect_fix_actions doesn't create duplicate actions.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "collect_fix_actions",
          "file": "unknown",
          "line": 510,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 518,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 519,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_category_name",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 522,
      "language": "python",
      "docstring": "Test detecting file_path with category name as placeholder.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 544,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 563,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_tbd",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 571,
      "language": "python",
      "docstring": "Test detecting file_path with TBD placeholder.\n\nTBD (To Be Determined) maps to 'decision' category because it indicates\na decision needs to be made about what to implement.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 597,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 612,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_case_insensitive",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 620,
      "language": "python",
      "docstring": "Test that placeholder detection is case-insensitive.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 645,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 660,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_all_placeholders",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 667,
      "language": "python",
      "docstring": "Test detection of all placeholder patterns.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 702,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_non_placeholder",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 707,
      "language": "python",
      "docstring": "Test that real file paths are not detected as placeholders.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 738,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_no_file_path",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 743,
      "language": "python",
      "docstring": "Test that nodes without file_path are skipped.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 765,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_subtask",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 770,
      "language": "python",
      "docstring": "Test that placeholder detection works for subtasks.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 792,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 807,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_non_task_node",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 815,
      "language": "python",
      "docstring": "Test that placeholder detection only applies to task/subtask nodes.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 840,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_preserves_existing_category",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 845,
      "language": "python",
      "docstring": "Test that existing task_category is not overwritten.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 870,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 888,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_whitespace",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 897,
      "language": "python",
      "docstring": "Test that placeholders with whitespace are detected.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 919,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 934,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_tbd_maps_to_decision",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 941,
      "language": "python",
      "docstring": "Test that 'tbd' placeholder maps to 'decision' category.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 963,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 978,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_category_mapping",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 986,
      "language": "python",
      "docstring": "Test that category-name placeholders map directly to their category.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "items",
          "file": "unknown",
          "line": 996,
          "call_type": "method_call"
        },
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 1017,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 1032,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_generic_placeholder_uses_title",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 1041,
      "language": "python",
      "docstring": "Test that generic placeholders (n/a, none, null) use title-based inference.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 1063,
          "call_type": "function_call"
        },
        {
          "name": "apply",
          "file": "unknown",
          "line": 1078,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_build_placeholder_file_path_action_preview_shows_category",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py",
      "line": 1087,
      "language": "python",
      "docstring": "Test that the preview message shows the inferred category.",
      "parameters": [],
      "return_type": null,
      "complexity": 2,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "_build_placeholder_file_path_action",
          "file": "unknown",
          "line": 1109,
          "call_type": "function_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 1113,
          "call_type": "method_call"
        },
        {
          "name": "lower",
          "file": "unknown",
          "line": 1114,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_normalize_validation_result_clean",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 12,
      "language": "python",
      "docstring": "Test normalization of a clean validation result.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 20,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_normalize_validation_result_with_errors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 32,
      "language": "python",
      "docstring": "Test normalization with errors.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 42,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_normalize_validation_result_with_warnings",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 52,
      "language": "python",
      "docstring": "Test normalization with warnings only.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "normalize_validation_result",
          "file": "unknown",
          "line": 61,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_format_validation_summary_basic",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 71,
      "language": "python",
      "docstring": "Test basic summary formatting.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "format_validation_summary",
          "file": "unknown",
          "line": 83,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_format_validation_summary_verbose",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 90,
      "language": "python",
      "docstring": "Test verbose summary formatting.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "format_validation_summary",
          "file": "unknown",
          "line": 117,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_normalized_validation_result_properties",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py",
      "line": 128,
      "language": "python",
      "docstring": "Test NormalizedValidationResult computed properties.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": []
    },
    {
      "name": "test_generate_report_markdown_clean",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 10,
      "language": "python",
      "docstring": "Test generating markdown report for clean validation.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 18,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_markdown_with_errors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 27,
      "language": "python",
      "docstring": "Test generating markdown report with errors.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 37,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_markdown_with_warnings",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 47,
      "language": "python",
      "docstring": "Test generating markdown report with warnings.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 56,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_json_clean",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 63,
      "language": "python",
      "docstring": "Test generating JSON report for clean validation.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 71,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 72,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 78,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 79,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_json_with_errors",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 82,
      "language": "python",
      "docstring": "Test generating JSON report with errors.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 91,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 92,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 96,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_stats",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 100,
      "language": "python",
      "docstring": "Test generating report with statistics.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 115,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_stats_json",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 123,
      "language": "python",
      "docstring": "Test generating JSON report with statistics.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 136,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 137,
          "call_type": "method_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_cycles",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 144,
      "language": "python",
      "docstring": "Test generating report with dependency cycles (CLI format).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 160,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_orphaned",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 167,
      "language": "python",
      "docstring": "Test generating report with orphaned dependencies (CLI format).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 183,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_deadlocks",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 190,
      "language": "python",
      "docstring": "Test generating report with deadlocks (CLI format).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 206,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_bottlenecks",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 213,
      "language": "python",
      "docstring": "Test generating report with bottlenecks (CLI format).",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 229,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_all_types",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 236,
      "language": "python",
      "docstring": "Test generating report with all dependency types.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 252,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_with_dependencies_json",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 260,
      "language": "python",
      "docstring": "Test generating JSON report with dependencies.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 276,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 277,
          "call_type": "method_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 280,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 281,
          "call_type": "function_call"
        },
        {
          "name": "len",
          "file": "unknown",
          "line": 282,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_legacy_dependency_keys",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 286,
      "language": "python",
      "docstring": "Test report generation with legacy dependency key names.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 302,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_mixed_dependency_keys",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 313,
      "language": "python",
      "docstring": "Test report generation with mixed new and legacy keys.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 329,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_invalid_format",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 336,
      "language": "python",
      "docstring": "Test that invalid format raises ValueError.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "raises",
          "file": "unknown",
          "line": 344,
          "call_type": "method_call"
        },
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 345,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_generate_report_empty_dependency_analysis",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py",
      "line": 348,
      "language": "python",
      "docstring": "Test report with empty dependency analysis.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "generate_report",
          "file": "unknown",
          "line": 364,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_calculate_statistics_basic",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 12,
      "language": "python",
      "docstring": "Test basic statistics calculation.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 51,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_calculate_statistics_with_verifications",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 66,
      "language": "python",
      "docstring": "Test statistics with verification nodes.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 97,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_calculate_statistics_empty_hierarchy",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 104,
      "language": "python",
      "docstring": "Test statistics with empty hierarchy.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 113,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_calculate_statistics_status_counts",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 122,
      "language": "python",
      "docstring": "Test status counting.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "calculate_statistics",
          "file": "unknown",
          "line": 161,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_render_statistics_text",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 169,
      "language": "python",
      "docstring": "Test text rendering of statistics.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "render_statistics",
          "file": "unknown",
          "line": 185,
          "call_type": "function_call"
        }
      ]
    },
    {
      "name": "test_render_statistics_json",
      "file": "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py",
      "line": 197,
      "language": "python",
      "docstring": "Test JSON rendering of statistics.",
      "parameters": [],
      "return_type": null,
      "complexity": 1,
      "decorators": [],
      "is_async": false,
      "is_exported": false,
      "is_public": true,
      "callers": [],
      "calls": [
        {
          "name": "render_statistics",
          "file": "unknown",
          "line": 213,
          "call_type": "function_call"
        },
        {
          "name": "loads",
          "file": "unknown",
          "line": 214,
          "call_type": "method_call"
        }
      ]
    }
  ],
  "dependencies": {
    "src/claude_skills/claude_skills/__init__.py": [
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/cli/sdd/__init__.py": [
      "sys",
      "argparse",
      "pathlib.Path",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.metrics.track_metrics",
      "claude_skills.cli.sdd.options.add_global_options",
      "claude_skills.cli.sdd.options.create_global_parent_parser",
      "claude_skills.cli.sdd.registry.register_all_subcommands"
    ],
    "src/claude_skills/claude_skills/cli/sdd/options.py": [
      "argparse"
    ],
    "src/claude_skills/claude_skills/cli/sdd/registry.py": [
      "logging"
    ],
    "src/claude_skills/claude_skills/cli/skills_dev/gendocs.py": [
      "sys",
      "pathlib.Path",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/cli/skills_dev/migrate.py": [
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/cli/skills_dev/registry.py": [
      "__future__.annotations",
      "argparse",
      "typing.Any",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/cli/skills_dev/setup_permissions.py": [
      "json",
      "sys",
      "pathlib.Path",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/cli/skills_dev/start_helper.py": [
      "json",
      "sys",
      "pathlib.Path",
      "datetime.datetime",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.integrations.get_session_state"
    ],
    "src/claude_skills/claude_skills/code_doc/__init__.py": [
      "parser.CodebaseAnalyzer",
      "calculator.calculate_complexity",
      "calculator.calculate_statistics",
      "formatter.MarkdownGenerator",
      "formatter.JSONGenerator",
      "generator.DocumentationGenerator"
    ],
    "src/claude_skills/claude_skills/code_doc/ai_consultation.py": [
      "subprocess",
      "sys",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "concurrent.futures.ThreadPoolExecutor",
      "concurrent.futures.as_completed",
      "time"
    ],
    "src/claude_skills/claude_skills/code_doc/ast_analysis.py": [
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.Dict",
      "typing.List",
      "typing.Set",
      "typing.Optional",
      "typing.Any",
      "enum.Enum"
    ],
    "src/claude_skills/claude_skills/code_doc/calculator.py": [
      "ast",
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "collections.defaultdict"
    ],
    "src/claude_skills/claude_skills/code_doc/cli.py": [
      "__future__.annotations",
      "argparse",
      "json",
      "sys",
      "traceback",
      "pathlib.Path",
      "typing.Iterable",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.metrics.track_metrics",
      "claude_skills.code_doc.generator.DocumentationGenerator",
      "claude_skills.code_doc.parsers.Language",
      "claude_skills.code_doc.parsers.create_parser_factory",
      "claude_skills.code_doc.calculator.calculate_statistics",
      "claude_skills.code_doc.detectors.detect_framework",
      "claude_skills.code_doc.detectors.identify_key_files",
      "claude_skills.code_doc.detectors.detect_layers",
      "claude_skills.code_doc.detectors.suggest_reading_order",
      "claude_skills.code_doc.detectors.extract_readme",
      "claude_skills.code_doc.detectors.create_context_summary",
      "claude_skills.code_doc.ai_consultation.get_available_tools",
      "claude_skills.code_doc.ai_consultation.generate_architecture_docs",
      "claude_skills.code_doc.ai_consultation.generate_ai_context_docs",
      "claude_skills.code_doc.ai_consultation.compose_architecture_doc",
      "claude_skills.code_doc.ai_consultation.compose_ai_context_doc"
    ],
    "src/claude_skills/claude_skills/code_doc/detectors.py": [
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Optional",
      "typing.Set",
      "pathlib.Path",
      "collections.defaultdict",
      "fnmatch"
    ],
    "src/claude_skills/claude_skills/code_doc/formatter.py": [
      "datetime.datetime",
      "datetime.timezone",
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "collections.defaultdict"
    ],
    "src/claude_skills/claude_skills/code_doc/generator.py": [
      "json",
      "pathlib.Path",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.List"
    ],
    "src/claude_skills/claude_skills/code_doc/parser.py": [
      "ast",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "collections.defaultdict"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/__init__.py": [
      "base.BaseParser",
      "base.Language",
      "base.ParsedParameter",
      "base.ParsedFunction",
      "base.ParsedClass",
      "base.ParsedModule",
      "base.ParseResult",
      "factory.ParserFactory",
      "factory.create_parser_factory",
      "python.PythonParser"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/base.py": [
      "abc.ABC",
      "abc.abstractmethod",
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "pathlib.Path",
      "enum.Enum"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/css.py": [
      "pathlib.Path",
      "typing.List",
      "typing.Dict",
      "typing.Optional",
      "sys",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult",
      "base.ParsedModule",
      "base.ParsedFunction"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/factory.py": [
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "typing.Type",
      "collections.defaultdict",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/go.py": [
      "pathlib.Path",
      "typing.List",
      "typing.Optional",
      "sys",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult",
      "base.ParsedModule",
      "base.ParsedClass",
      "base.ParsedFunction",
      "base.ParsedParameter"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/html.py": [
      "pathlib.Path",
      "typing.List",
      "typing.Dict",
      "typing.Optional",
      "sys",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult",
      "base.ParsedModule",
      "base.ParsedFunction"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/javascript.py": [
      "pathlib.Path",
      "typing.List",
      "typing.Optional",
      "sys",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult",
      "base.ParsedModule",
      "base.ParsedClass",
      "base.ParsedFunction",
      "base.ParsedParameter"
    ],
    "src/claude_skills/claude_skills/code_doc/parsers/python.py": [
      "ast",
      "sys",
      "pathlib.Path",
      "typing.List",
      "collections.defaultdict",
      "base.BaseParser",
      "base.Language",
      "base.ParseResult",
      "base.ParsedModule",
      "base.ParsedClass",
      "base.ParsedFunction",
      "base.ParsedParameter",
      "ast_analysis.CrossReferenceGraph",
      "ast_analysis.CallSite",
      "ast_analysis.InstantiationSite",
      "ast_analysis.ReferenceType",
      "ast_analysis.DynamicPattern",
      "ast_analysis.DynamicPatternWarning",
      "ast_analysis.create_cross_reference_graph"
    ],
    "src/claude_skills/claude_skills/code_doc/schema.py": [
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.List",
      "typing.Optional",
      "typing.Dict",
      "typing.Any",
      "parsers.base.ParsedFunction",
      "parsers.base.ParsedClass"
    ],
    "src/claude_skills/claude_skills/common/__init__.py": [
      "spec.load_json_spec",
      "spec.save_json_spec",
      "spec.backup_json_spec",
      "spec.get_node",
      "spec.update_node",
      "spec.extract_frontmatter",
      "progress.recalculate_progress",
      "progress.update_parent_status",
      "progress.get_progress_summary",
      "progress.list_phases",
      "paths.find_specs_directory",
      "paths.validate_path",
      "paths.validate_and_normalize_paths",
      "paths.normalize_path",
      "paths.batch_check_paths_exist",
      "paths.find_files_by_pattern",
      "paths.ensure_directory",
      "paths.ensure_reports_directory",
      "paths.generate_reports_readme_content",
      "paths.ensure_reviews_directory",
      "paths.generate_reviews_readme_content",
      "paths.ensure_backups_directory",
      "paths.generate_backups_readme_content",
      "paths.ensure_human_readable_directory",
      "paths.generate_human_readable_readme_content",
      "printer.PrettyPrinter",
      "validation.EnhancedError",
      "validation.SpecValidationResult",
      "validation.JsonSpecValidationResult",
      "validation.validate_status",
      "validation.validate_node_type",
      "validation.validate_spec_id_format",
      "validation.validate_iso8601_date",
      "validation.normalize_message_text",
      "hierarchy_validation.validate_spec_hierarchy",
      "hierarchy_validation.validate_structure",
      "hierarchy_validation.validate_hierarchy",
      "hierarchy_validation.validate_nodes",
      "hierarchy_validation.validate_task_counts",
      "hierarchy_validation.validate_dependencies",
      "hierarchy_validation.validate_metadata",
      "reporting.generate_spec_report",
      "reporting.generate_json_spec_report",
      "reporting.generate_combined_report",
      "dependency_analysis.analyze_dependencies",
      "dependency_analysis.DEFAULT_BOTTLENECK_THRESHOLD",
      "dependency_analysis.has_dependency_cycle",
      "dependency_analysis.validate_dependency_graph",
      "dependency_analysis.get_dependency_chain",
      "dependency_analysis.find_blocking_tasks",
      "dependency_analysis.find_circular_dependencies",
      "query_operations.query_tasks",
      "query_operations.get_task",
      "query_operations.list_phases",
      "query_operations.check_complete",
      "query_operations.list_blockers",
      "metrics.track_metrics",
      "metrics.capture_metrics",
      "metrics.record_metric",
      "metrics.get_metrics_file_path",
      "metrics.is_metrics_enabled",
      "doc_helper.check_doc_query_available",
      "doc_helper.check_sdd_integration_available",
      "doc_helper.get_task_context_from_docs",
      "doc_helper.should_generate_docs",
      "doc_helper.ensure_documentation_exists",
      "integrations.validate_spec_before_proceed",
      "integrations.execute_verify_task",
      "integrations.get_session_state"
    ],
    "src/claude_skills/claude_skills/common/dependency_analysis.py": [
      "dataclasses.dataclass",
      "typing.Dict",
      "typing.Iterable",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "typing.Tuple"
    ],
    "src/claude_skills/claude_skills/common/doc_helper.py": [
      "json",
      "subprocess",
      "shutil",
      "typing.Optional",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/common/hierarchy_validation.py": [
      "re",
      "pathlib.Path",
      "typing.Dict",
      "typing.Iterable",
      "typing.List",
      "typing.Tuple",
      "typing.Optional",
      "typing.Set",
      "claude_skills.common.EnhancedError",
      "claude_skills.common.JsonSpecValidationResult",
      "claude_skills.common.validate_status",
      "claude_skills.common.validate_node_type",
      "claude_skills.common.validate_spec_id_format",
      "claude_skills.common.validate_iso8601_date",
      "claude_skills.common.normalize_message_text"
    ],
    "src/claude_skills/claude_skills/common/integrations.py": [
      "json",
      "subprocess",
      "time",
      "typing.Optional",
      "pathlib.Path",
      "datetime.datetime",
      "hierarchy_validation.validate_spec_hierarchy"
    ],
    "src/claude_skills/claude_skills/common/metrics.py": [
      "os",
      "sys",
      "json",
      "time",
      "shlex",
      "functools",
      "pathlib.Path",
      "datetime.datetime",
      "typing.Optional",
      "typing.Dict",
      "typing.Any",
      "contextlib.contextmanager"
    ],
    "src/claude_skills/claude_skills/common/paths.py": [
      "sys",
      "pathlib.Path",
      "typing.Optional",
      "typing.List",
      "typing.Dict"
    ],
    "src/claude_skills/claude_skills/common/printer.py": [
      "sys"
    ],
    "src/claude_skills/claude_skills/common/progress.py": [
      "typing.Dict",
      "typing.List"
    ],
    "src/claude_skills/claude_skills/common/query_operations.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "typing.List",
      "spec.load_json_spec",
      "spec.get_node",
      "progress.list_phases",
      "printer.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/common/reporting.py": [
      "pathlib.Path",
      "datetime.datetime",
      "typing.List",
      "claude_skills.common.SpecValidationResult",
      "claude_skills.common.JsonSpecValidationResult"
    ],
    "src/claude_skills/claude_skills/common/spec.py": [
      "sys",
      "json",
      "shutil",
      "datetime.datetime",
      "datetime.timezone",
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "typing.Any",
      "typing.Union",
      "paths.find_spec_file",
      "paths.ensure_backups_directory"
    ],
    "src/claude_skills/claude_skills/common/spec_analysis.py": [
      "json",
      "re",
      "pathlib.Path",
      "typing.Dict",
      "typing.Optional",
      "spec.extract_frontmatter"
    ],
    "src/claude_skills/claude_skills/common/validation.py": [
      "re",
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "src/claude_skills/claude_skills/dev_tools/generate_docs.py": [
      "argparse",
      "importlib",
      "sys",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Tuple",
      "typing.Optional",
      "io",
      "contextlib.redirect_stdout",
      "contextlib.redirect_stderr"
    ],
    "src/claude_skills/claude_skills/dev_tools/sdd_start_helper.py": [
      "argparse",
      "json",
      "os",
      "sys",
      "pathlib.Path",
      "datetime.datetime",
      "common.integrations.get_session_state"
    ],
    "src/claude_skills/claude_skills/dev_tools/setup_project_permissions.py": [
      "argparse",
      "json",
      "sys",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/doc_query/cli.py": [
      "__future__.annotations",
      "argparse",
      "json",
      "sys",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.metrics.track_metrics",
      "claude_skills.doc_query.doc_query_lib.DocumentationQuery",
      "claude_skills.doc_query.doc_query_lib.QueryResult",
      "claude_skills.doc_query.doc_query_lib.check_docs_exist",
      "claude_skills.doc_query.doc_query_lib.check_documentation_staleness",
      "claude_skills.doc_query.workflows.trace_entry.trace_execution_flow",
      "claude_skills.doc_query.workflows.trace_entry.format_text_output",
      "claude_skills.doc_query.workflows.trace_entry.format_json_output",
      "claude_skills.doc_query.workflows.trace_data.trace_data_lifecycle",
      "claude_skills.doc_query.workflows.trace_data.format_text_output",
      "claude_skills.doc_query.workflows.trace_data.format_json_output",
      "claude_skills.doc_query.workflows.impact_analysis.analyze_impact",
      "claude_skills.doc_query.workflows.impact_analysis.format_text_output",
      "claude_skills.doc_query.workflows.impact_analysis.format_json_output",
      "claude_skills.doc_query.workflows.refactor_candidates.find_refactor_candidates",
      "claude_skills.doc_query.workflows.refactor_candidates.format_text_output",
      "claude_skills.doc_query.workflows.refactor_candidates.format_json_output"
    ],
    "src/claude_skills/claude_skills/doc_query/doc_query_lib.py": [
      "json",
      "re",
      "textwrap",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union",
      "typing.Any",
      "typing.Iterable",
      "dataclasses.dataclass"
    ],
    "src/claude_skills/claude_skills/doc_query/sdd_integration.py": [
      "re",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "doc_query_lib.DocumentationQuery",
      "doc_query_lib.QueryResult"
    ],
    "src/claude_skills/claude_skills/doc_query/workflows/__init__.py": [
      "trace_entry.trace_execution_flow",
      "trace_data.trace_data_lifecycle",
      "impact_analysis.analyze_impact",
      "refactor_candidates.find_refactor_candidates"
    ],
    "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py": [
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Set",
      "typing.Tuple",
      "typing.Optional",
      "json"
    ],
    "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py": [
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Set",
      "typing.Tuple",
      "typing.Optional",
      "json"
    ],
    "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py": [
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Set",
      "typing.Tuple",
      "typing.Optional",
      "json"
    ],
    "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py": [
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Set",
      "typing.Tuple",
      "typing.Optional",
      "json"
    ],
    "src/claude_skills/claude_skills/run_tests/cli.py": [
      "__future__.annotations",
      "argparse",
      "json",
      "sys",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.metrics.track_metrics",
      "claude_skills.run_tests.tool_checking.print_tool_status",
      "claude_skills.run_tests.tool_checking.get_tool_status_dict",
      "claude_skills.run_tests.tool_checking.FAILURE_TYPES",
      "claude_skills.run_tests.consultation.consult_with_auto_routing",
      "claude_skills.run_tests.consultation.consult_multi_agent",
      "claude_skills.run_tests.consultation.run_consultation",
      "claude_skills.run_tests.consultation.print_routing_matrix",
      "claude_skills.run_tests.consultation.should_auto_trigger_consensus",
      "claude_skills.run_tests.consultation.get_consensus_pair_for_failure",
      "claude_skills.run_tests.consultation.FAILURE_TYPES",
      "claude_skills.run_tests.consultation.MULTI_AGENT_PAIRS",
      "claude_skills.run_tests.consultation.get_available_tools",
      "claude_skills.run_tests.test_discovery.print_discovery_report",
      "claude_skills.run_tests.pytest_runner.run_pytest",
      "claude_skills.run_tests.pytest_runner.list_presets",
      "claude_skills.run_tests.pytest_runner.get_presets",
      "claude_skills.run_tests.pytest_runner.validate_preset"
    ],
    "src/claude_skills/claude_skills/run_tests/consultation.py": [
      "subprocess",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "typing.NamedTuple",
      "concurrent.futures.ThreadPoolExecutor",
      "concurrent.futures.as_completed",
      "time",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.run_tests.tool_checking.check_tool_availability",
      "claude_skills.run_tests.tool_checking.get_available_tools",
      "claude_skills.run_tests.tool_checking.get_config_path"
    ],
    "src/claude_skills/claude_skills/run_tests/pytest_runner.py": [
      "subprocess",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/run_tests/test_discovery.py": [
      "re",
      "collections.defaultdict",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "typing.Tuple",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/run_tests/tool_checking.py": [
      "shutil",
      "yaml",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/sdd_next/__init__.py": [
      "discovery.get_next_task",
      "discovery.get_task_info",
      "discovery.check_dependencies",
      "discovery.prepare_task",
      "project.detect_project",
      "project.find_tests",
      "project.check_environment",
      "project.find_related_files",
      "validation.validate_spec",
      "validation.find_circular_deps",
      "validation.validate_paths",
      "validation.spec_stats",
      "workflow.init_environment",
      "workflow.find_pattern"
    ],
    "src/claude_skills/claude_skills/sdd_next/cli.py": [
      "json",
      "sys",
      "argparse",
      "pathlib.Path",
      "typing.List",
      "os",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.get_progress_summary",
      "claude_skills.common.list_phases",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.ensure_reports_directory",
      "claude_skills.common.query_tasks",
      "claude_skills.common.check_complete",
      "claude_skills.common.list_blockers",
      "claude_skills.sdd_next.discovery.get_next_task",
      "claude_skills.sdd_next.discovery.get_task_info",
      "claude_skills.sdd_next.discovery.check_dependencies",
      "claude_skills.sdd_next.discovery.prepare_task",
      "claude_skills.sdd_next.project.detect_project",
      "claude_skills.sdd_next.project.find_tests",
      "claude_skills.sdd_next.project.check_environment",
      "claude_skills.sdd_next.project.find_related_files",
      "claude_skills.sdd_next.validation.validate_spec",
      "claude_skills.sdd_next.validation.find_circular_deps",
      "claude_skills.sdd_next.validation.validate_paths",
      "claude_skills.sdd_next.validation.spec_stats",
      "claude_skills.sdd_next.workflow.init_environment",
      "claude_skills.sdd_next.workflow.find_pattern"
    ],
    "src/claude_skills/claude_skills/sdd_next/discovery.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "typing.Tuple",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.get_node",
      "claude_skills.common.validate_spec_before_proceed",
      "claude_skills.common.get_task_context_from_docs",
      "claude_skills.common.check_doc_query_available"
    ],
    "src/claude_skills/claude_skills/sdd_next/project.py": [
      "json",
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "src/claude_skills/claude_skills/sdd_next/validation.py": [
      "json",
      "pathlib.Path",
      "typing.Dict",
      "typing.Optional",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.find_circular_dependencies",
      "claude_skills.common.validate_and_normalize_paths",
      "claude_skills.common.validate_spec_hierarchy",
      "claude_skills.common.spec_analysis.get_json_spec_metadata"
    ],
    "src/claude_skills/claude_skills/sdd_next/workflow.py": [
      "pathlib.Path",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.ensure_directory"
    ],
    "src/claude_skills/claude_skills/sdd_plan/__init__.py": [
      "claude_skills.sdd_plan.templates.list_templates",
      "claude_skills.sdd_plan.templates.get_template",
      "claude_skills.sdd_plan.templates.generate_spec_from_template",
      "claude_skills.sdd_plan.templates.get_template_description",
      "claude_skills.sdd_plan.templates.infer_task_category",
      "claude_skills.sdd_plan.planner.analyze_codebase",
      "claude_skills.sdd_plan.planner.create_spec_interactive",
      "claude_skills.sdd_plan.planner.find_specs_directory",
      "claude_skills.sdd_plan.planner.get_project_context"
    ],
    "src/claude_skills/claude_skills/sdd_plan/cli.py": [
      "argparse",
      "sys",
      "json",
      "pathlib.Path",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.ensure_reports_directory",
      "claude_skills.sdd_plan.list_templates",
      "claude_skills.sdd_plan.get_template_description",
      "claude_skills.sdd_plan.create_spec_interactive",
      "claude_skills.sdd_plan.analyze_codebase",
      "claude_skills.sdd_plan.get_project_context"
    ],
    "src/claude_skills/claude_skills/sdd_plan/planner.py": [
      "json",
      "subprocess",
      "pathlib.Path",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "datetime.datetime"
    ],
    "src/claude_skills/claude_skills/sdd_plan/templates.py": [
      "typing.Dict",
      "typing.Any",
      "datetime.datetime",
      "datetime.timezone"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/__init__.py": [
      "claude_skills.sdd_plan_review.reviewer.check_tool_available",
      "claude_skills.sdd_plan_review.reviewer.detect_available_tools",
      "claude_skills.sdd_plan_review.reviewer.review_with_tools",
      "claude_skills.sdd_plan_review.prompts.generate_review_prompt",
      "claude_skills.sdd_plan_review.synthesis.parse_response",
      "claude_skills.sdd_plan_review.synthesis.build_consensus",
      "claude_skills.sdd_plan_review.reporting.generate_markdown_report",
      "claude_skills.sdd_plan_review.reporting.generate_json_report"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/cli.py": [
      "argparse",
      "sys",
      "json",
      "pathlib.Path",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.ensure_reviews_directory",
      "claude_skills.sdd_plan_review.check_tool_available",
      "claude_skills.sdd_plan_review.detect_available_tools",
      "claude_skills.sdd_plan_review.review_with_tools",
      "claude_skills.sdd_plan_review.reporting.generate_markdown_report",
      "claude_skills.sdd_plan_review.reporting.generate_json_report"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/prompts.py": [
      "typing.Dict",
      "typing.Any"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/reporting.py": [
      "datetime.datetime",
      "datetime.timezone",
      "typing.Dict",
      "typing.Any",
      "typing.List"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/reviewer.py": [
      "subprocess",
      "json",
      "time",
      "tempfile",
      "pathlib.Path",
      "typing.Dict",
      "typing.Any",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "concurrent.futures.ThreadPoolExecutor",
      "concurrent.futures.as_completed",
      "concurrent.futures.wait",
      "claude_skills.sdd_plan_review.prompts.generate_review_prompt",
      "claude_skills.sdd_plan_review.synthesis.parse_response",
      "claude_skills.sdd_plan_review.synthesis.build_consensus"
    ],
    "src/claude_skills/claude_skills/sdd_plan_review/synthesis.py": [
      "json",
      "re",
      "typing.Dict",
      "typing.Any",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "statistics.mean",
      "statistics.median"
    ],
    "src/claude_skills/claude_skills/sdd_render/__init__.py": [
      "renderer.SpecRenderer"
    ],
    "src/claude_skills/claude_skills/sdd_render/cli.py": [
      "json",
      "pathlib.Path",
      "typing.Optional",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.ensure_human_readable_directory",
      "claude_skills.common.PrettyPrinter",
      "renderer.SpecRenderer"
    ],
    "src/claude_skills/claude_skills/sdd_render/renderer.py": [
      "typing.Dict",
      "typing.Any",
      "typing.List",
      "typing.Optional",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/sdd_update/__init__.py": [
      "status.update_task_status",
      "status.mark_task_blocked",
      "status.unblock_task",
      "journal.add_journal_entry",
      "journal.update_metadata",
      "verification.add_verification_result",
      "lifecycle.move_spec",
      "lifecycle.complete_spec",
      "time_tracking.track_time",
      "time_tracking.generate_time_report",
      "validation.validate_spec",
      "validation.get_status_report",
      "validation.audit_spec",
      "query.query_tasks",
      "query.get_task",
      "query.list_phases",
      "query.check_complete",
      "query.phase_time",
      "query.list_blockers"
    ],
    "src/claude_skills/claude_skills/sdd_update/cli.py": [
      "argparse",
      "json",
      "sys",
      "pathlib.Path",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.PrettyPrinter",
      "claude_skills.common.execute_verify_task",
      "claude_skills.common.load_json_spec",
      "claude_skills.sdd_update.status.update_task_status",
      "claude_skills.sdd_update.status.mark_task_blocked",
      "claude_skills.sdd_update.status.unblock_task",
      "claude_skills.sdd_update.workflow.complete_task_workflow",
      "claude_skills.sdd_update.journal.add_journal_entry",
      "claude_skills.sdd_update.journal.update_metadata",
      "claude_skills.sdd_update.journal.bulk_journal_tasks",
      "claude_skills.sdd_update.journal.sync_metadata_from_state",
      "claude_skills.sdd_update.journal.add_revision_entry",
      "claude_skills.sdd_update.verification.add_verification_result",
      "claude_skills.sdd_update.verification.format_verification_summary",
      "claude_skills.sdd_update.lifecycle.move_spec",
      "claude_skills.sdd_update.lifecycle.complete_spec",
      "claude_skills.sdd_update.time_tracking.track_time",
      "claude_skills.sdd_update.time_tracking.generate_time_report",
      "claude_skills.sdd_update.validation.validate_spec",
      "claude_skills.sdd_update.validation.get_status_report",
      "claude_skills.sdd_update.validation.audit_spec",
      "claude_skills.sdd_update.validation.reconcile_state",
      "claude_skills.sdd_update.validation.detect_unjournaled_tasks",
      "claude_skills.sdd_update.query.query_tasks",
      "claude_skills.sdd_update.query.get_task",
      "claude_skills.sdd_update.query.list_phases",
      "claude_skills.sdd_update.query.check_complete",
      "claude_skills.sdd_update.query.phase_time",
      "claude_skills.sdd_update.query.list_blockers"
    ],
    "src/claude_skills/claude_skills/sdd_update/journal.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Tuple",
      "datetime.datetime",
      "datetime.timezone",
      "string.Template",
      "claude_skills.common.printer.PrettyPrinter",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec",
      "claude_skills.common.spec.update_node",
      "claude_skills.common.paths.find_specs_directory"
    ],
    "src/claude_skills/claude_skills/sdd_update/lifecycle.py": [
      "shutil",
      "subprocess",
      "pathlib.Path",
      "typing.Optional",
      "datetime.datetime",
      "datetime.timezone",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec",
      "claude_skills.common.paths.ensure_directory",
      "claude_skills.common.paths.find_spec_file",
      "claude_skills.common.printer.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/sdd_update/query.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "typing.List",
      "claude_skills.common.query_operations.query_tasks",
      "claude_skills.common.query_operations.get_task",
      "claude_skills.common.query_operations.list_phases",
      "claude_skills.common.query_operations.check_complete",
      "claude_skills.common.query_operations.list_blockers",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.printer.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/sdd_update/status.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.List",
      "datetime.datetime",
      "datetime.timezone",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec",
      "claude_skills.common.spec.update_node",
      "claude_skills.common.progress.recalculate_progress",
      "claude_skills.common.printer.PrettyPrinter",
      "claude_skills.common.execute_verify_task"
    ],
    "src/claude_skills/claude_skills/sdd_update/time_tracking.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec",
      "claude_skills.common.spec.update_node",
      "claude_skills.common.printer.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/sdd_update/validation.py": [
      "pathlib.Path",
      "typing.Optional",
      "typing.Dict",
      "typing.List",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.progress.get_progress_summary",
      "claude_skills.common.progress.list_phases",
      "claude_skills.common.progress.get_task_counts_by_status",
      "claude_skills.common.printer.PrettyPrinter",
      "claude_skills.common.dependency_analysis.find_circular_dependencies",
      "claude_skills.common.hierarchy_validation.validate_spec_hierarchy"
    ],
    "src/claude_skills/claude_skills/sdd_update/verification.py": [
      "pathlib.Path",
      "typing.Optional",
      "datetime.datetime",
      "datetime.timezone",
      "claude_skills.common.printer.PrettyPrinter",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec",
      "claude_skills.common.spec.update_node",
      "claude_skills.common.paths.find_specs_directory"
    ],
    "src/claude_skills/claude_skills/sdd_update/workflow.py": [
      "__future__.annotations",
      "copy",
      "json",
      "datetime.datetime",
      "datetime.timezone",
      "pathlib.Path",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple",
      "claude_skills.common.printer.PrettyPrinter",
      "claude_skills.common.spec.load_json_spec",
      "journal.add_journal_entry",
      "journal.add_revision_entry",
      "journal.mark_task_journaled",
      "journal.sync_metadata_from_state",
      "journal._build_journal_entry",
      "journal._ensure_journal_container",
      "status.update_task_status",
      "time_tracking.track_time"
    ],
    "src/claude_skills/claude_skills/sdd_validate/__init__.py": [
      "formatting.NormalizedValidationResult",
      "formatting.format_validation_summary",
      "formatting.normalize_validation_result",
      "fix.FixAction",
      "fix.FixReport",
      "fix.collect_fix_actions",
      "fix.apply_fix_actions",
      "stats.SpecStatistics",
      "stats.calculate_statistics",
      "stats.render_statistics",
      "reporting.generate_report",
      "diff.DiffReport",
      "diff.compute_diff",
      "diff.format_diff_markdown",
      "diff.format_diff_json"
    ],
    "src/claude_skills/claude_skills/sdd_validate/cli.py": [
      "argparse",
      "json",
      "sys",
      "pathlib.Path",
      "dataclasses.asdict",
      "typing.Any",
      "typing.Dict"
    ],
    "src/claude_skills/claude_skills/sdd_validate/diff.py": [
      "__future__.annotations",
      "copy",
      "json",
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "src/claude_skills/claude_skills/sdd_validate/fix.py": [
      "__future__.annotations",
      "re",
      "copy",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "json",
      "datetime.datetime",
      "datetime.timezone",
      "pathlib.Path",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.Iterable",
      "typing.List",
      "typing.Optional",
      "typing.Sequence",
      "typing.Set",
      "claude_skills.common.backup_json_spec",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.recalculate_progress",
      "claude_skills.common.save_json_spec",
      "claude_skills.common.validate_status",
      "claude_skills.common.validate_spec_hierarchy",
      "claude_skills.common.validation.EnhancedError",
      "claude_skills.common.validation.JsonSpecValidationResult",
      "claude_skills.sdd_plan.templates.infer_task_category",
      "claude_skills.sdd_validate.formatting.normalize_validation_result"
    ],
    "src/claude_skills/claude_skills/sdd_validate/formatting.py": [
      "__future__.annotations",
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing.Any",
      "typing.Dict",
      "typing.Iterable",
      "typing.List",
      "typing.Optional",
      "typing.Sequence",
      "typing.Tuple",
      "claude_skills.common.validation.EnhancedError",
      "claude_skills.common.validation.JsonSpecValidationResult"
    ],
    "src/claude_skills/claude_skills/sdd_validate/reporting.py": [
      "__future__.annotations",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "claude_skills.common.JsonSpecValidationResult",
      "claude_skills.sdd_validate.formatting.NormalizedValidationResult",
      "claude_skills.sdd_validate.formatting.normalize_validation_result"
    ],
    "src/claude_skills/claude_skills/sdd_validate/stats.py": [
      "__future__.annotations",
      "dataclasses.dataclass",
      "pathlib.Path",
      "typing.Any",
      "typing.Dict"
    ],
    "src/claude_skills/claude_skills/tests/conftest.py": [
      "json",
      "copy",
      "pytest",
      "tempfile",
      "shutil",
      "pathlib.Path",
      "datetime.datetime",
      "typing.Dict",
      "typing.Any",
      "typing.Optional"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_doc_cli.py": [
      "__future__.annotations",
      "os",
      "subprocess",
      "sys",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_sdd_next_cli.py": [
      "sys",
      "pytest",
      "subprocess",
      "json",
      "shutil",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_sdd_update_cli.py": [
      "sys",
      "pytest",
      "subprocess",
      "json",
      "shutil",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_cli.py": [
      "json",
      "pytest",
      "subprocess",
      "sys",
      "shutil",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_sdd_validate_new_features.py": [
      "json",
      "tempfile",
      "pathlib.Path",
      "pytest",
      "claude_skills.sdd_validate.collect_fix_actions",
      "claude_skills.sdd_validate.apply_fix_actions",
      "claude_skills.sdd_validate.compute_diff",
      "claude_skills.sdd_validate.format_diff_markdown",
      "claude_skills.common.validate_spec_hierarchy"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_skills_dev_cli.py": [
      "__future__.annotations",
      "os",
      "subprocess",
      "sys",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_task_category_workflow.py": [
      "json",
      "tempfile",
      "pathlib.Path",
      "pytest",
      "claude_skills.sdd_plan.templates.generate_spec_from_template",
      "claude_skills.common.hierarchy_validation.validate_spec_hierarchy",
      "claude_skills.sdd_validate.fix.collect_fix_actions",
      "claude_skills.sdd_validate.fix.apply_fix_actions"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_test_cli.py": [
      "__future__.annotations",
      "os",
      "subprocess",
      "sys",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/integration/test_unified_cli.py": [
      "sys",
      "pytest",
      "subprocess",
      "json",
      "shutil",
      "pathlib.Path"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/conftest.py": [
      "pytest",
      "pathlib.Path",
      "unittest.mock.MagicMock"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_ai_consultation.py": [
      "pytest",
      "pathlib.Path",
      "unittest.mock.MagicMock",
      "unittest.mock.patch",
      "claude_skills.code_doc.ai_consultation.format_architecture_research_prompt",
      "claude_skills.code_doc.ai_consultation.format_ai_context_research_prompt",
      "claude_skills.code_doc.ai_consultation.get_best_tool",
      "claude_skills.code_doc.ai_consultation.run_consultation",
      "claude_skills.code_doc.ai_consultation.DOC_TYPE_ROUTING"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_detectors.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.detectors.detect_framework",
      "claude_skills.code_doc.detectors.identify_key_files",
      "claude_skills.code_doc.detectors.detect_layers",
      "claude_skills.code_doc.detectors.suggest_reading_order",
      "claude_skills.code_doc.detectors.extract_readme",
      "claude_skills.code_doc.detectors.create_context_summary"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_base.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language",
      "claude_skills.code_doc.parsers.base.ParsedParameter",
      "claude_skills.code_doc.parsers.base.ParsedFunction",
      "claude_skills.code_doc.parsers.base.ParsedClass",
      "claude_skills.code_doc.parsers.base.ParsedModule",
      "claude_skills.code_doc.parsers.base.ParseResult",
      "claude_skills.code_doc.parsers.base.BaseParser"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_css.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_factory.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language",
      "claude_skills.code_doc.parsers.factory.ParserFactory",
      "claude_skills.code_doc.parsers.factory.create_parser_factory"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_go.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_html.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_javascript.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_code_doc/test_parsers_python.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.code_doc.parsers.base.Language",
      "claude_skills.code_doc.parsers.python.PythonParser"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_dev_tools/test_sdd_start_helper.py": [
      "pytest",
      "json",
      "sys",
      "pathlib.Path",
      "unittest.mock.patch",
      "unittest.mock.MagicMock",
      "io.StringIO",
      "sdd_start_helper"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_doc_query/conftest.py": [
      "json",
      "pathlib.Path",
      "typing.Dict",
      "pytest"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_doc_query/test_lib.py": [
      "pytest",
      "claude_skills.doc_query.doc_query_lib.DocumentationQuery"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_doc_helper.py": [
      "pytest",
      "unittest.mock.patch",
      "unittest.mock.Mock",
      "unittest.mock.MagicMock",
      "subprocess",
      "claude_skills.common.doc_helper.check_doc_query_available",
      "claude_skills.common.doc_helper.check_sdd_integration_available",
      "claude_skills.common.doc_helper.get_task_context_from_docs",
      "claude_skills.common.doc_helper.should_generate_docs",
      "claude_skills.common.doc_helper.ensure_documentation_exists"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_integrations.py": [
      "pytest",
      "unittest.mock.patch",
      "unittest.mock.Mock",
      "unittest.mock.MagicMock",
      "subprocess",
      "json",
      "pathlib.Path",
      "claude_skills.common.integrations.validate_spec_before_proceed",
      "claude_skills.common.integrations.execute_verify_task",
      "claude_skills.common.integrations.get_session_state",
      "claude_skills.common.validation.EnhancedError",
      "claude_skills.common.validation.JsonSpecValidationResult",
      "claude_skills.common.spec.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_paths.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.common.find_specs_directory",
      "claude_skills.common.validate_path"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_printer.py": [
      "pytest",
      "io.StringIO",
      "claude_skills.common.PrettyPrinter"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_progress.py": [
      "pytest",
      "claude_skills.common.recalculate_progress",
      "claude_skills.common.update_parent_status",
      "claude_skills.common.get_progress_summary",
      "claude_skills.common.list_phases",
      "claude_skills.common.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_common/test_spec.py": [
      "json",
      "pathlib.Path",
      "pytest",
      "claude_skills.common.extract_frontmatter",
      "claude_skills.common.load_json_spec",
      "claude_skills.common.save_json_spec",
      "claude_skills.common.backup_json_spec",
      "claude_skills.common.get_node"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_next/conftest.py": [
      "pytest"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_discovery.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_next.discovery.get_next_task",
      "claude_skills.sdd_next.discovery.get_task_info",
      "claude_skills.sdd_next.discovery.check_dependencies",
      "claude_skills.sdd_next.discovery.prepare_task",
      "claude_skills.common.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_project.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_next.project.detect_project",
      "claude_skills.sdd_next.project.find_tests",
      "claude_skills.sdd_next.project.check_environment",
      "claude_skills.sdd_next.project.find_related_files"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_validation.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_next.validation.validate_spec",
      "claude_skills.sdd_next.validation.find_circular_deps",
      "claude_skills.sdd_next.validation.validate_paths",
      "claude_skills.sdd_next.validation.spec_stats",
      "claude_skills.common.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_next/test_workflow.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_next.workflow.init_environment",
      "claude_skills.sdd_next.workflow.find_pattern"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/conftest.py": [
      "pytest"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_hierarchy_validation.py": [
      "pytest",
      "json",
      "pathlib.Path",
      "claude_skills.common.hierarchy_validation.validate_structure",
      "claude_skills.common.hierarchy_validation.validate_hierarchy",
      "claude_skills.common.hierarchy_validation.validate_nodes",
      "claude_skills.common.hierarchy_validation.validate_task_counts",
      "claude_skills.common.hierarchy_validation.validate_dependencies",
      "claude_skills.common.hierarchy_validation.validate_metadata",
      "claude_skills.common.hierarchy_validation.validate_spec_hierarchy"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_plan/test_templates.py": [
      "pytest",
      "claude_skills.sdd_plan.templates.infer_task_category",
      "claude_skills.sdd_plan.templates.list_templates",
      "claude_skills.sdd_plan.templates.get_template"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_update/conftest.py": [
      "pytest"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_journal.py": [
      "pytest",
      "json",
      "pathlib.Path",
      "datetime.datetime",
      "claude_skills.sdd_update.journal.add_journal_entry",
      "claude_skills.sdd_update.journal.add_revision_entry",
      "claude_skills.sdd_update.journal.bulk_journal_tasks",
      "claude_skills.sdd_update.journal.sync_metadata_from_state",
      "claude_skills.sdd_update.journal.update_metadata",
      "claude_skills.common.spec.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_lifecycle.py": [
      "pytest",
      "json",
      "pathlib.Path",
      "claude_skills.sdd_update.lifecycle.move_spec",
      "claude_skills.sdd_update.lifecycle.complete_spec",
      "claude_skills.common.spec.load_json_spec",
      "claude_skills.common.spec.save_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_query_operations.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_update.query.query_tasks",
      "claude_skills.sdd_update.query.get_task",
      "claude_skills.sdd_update.query.list_phases",
      "claude_skills.sdd_update.query.check_complete",
      "claude_skills.sdd_update.query.phase_time",
      "claude_skills.sdd_update.query.list_blockers",
      "claude_skills.common.query_operations.get_journal_entries",
      "claude_skills.common.query_operations.get_task_journal"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_update/test_verification.py": [
      "pytest",
      "pathlib.Path",
      "claude_skills.sdd_update.verification.add_verification_result",
      "claude_skills.sdd_update.verification.format_verification_summary",
      "claude_skills.common.spec.load_json_spec"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_fix.py": [
      "json",
      "pytest",
      "pathlib.Path",
      "unittest.mock.patch",
      "unittest.mock.mock_open",
      "claude_skills.common.validation.EnhancedError",
      "claude_skills.common.validation.JsonSpecValidationResult",
      "claude_skills.sdd_validate.fix.collect_fix_actions",
      "claude_skills.sdd_validate.fix.apply_fix_actions",
      "claude_skills.sdd_validate.fix.FixAction",
      "claude_skills.sdd_validate.fix.FixReport",
      "claude_skills.sdd_validate.fix._build_counts_action",
      "claude_skills.sdd_validate.fix._build_metadata_action",
      "claude_skills.sdd_validate.fix._build_task_category_action",
      "claude_skills.sdd_validate.fix._build_placeholder_file_path_action",
      "claude_skills.sdd_validate.fix._build_hierarchy_action",
      "claude_skills.sdd_validate.fix._build_date_action",
      "claude_skills.sdd_validate.fix._build_status_action",
      "claude_skills.sdd_validate.fix._normalize_timestamp",
      "claude_skills.sdd_validate.fix._normalize_status"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_formatting.py": [
      "pytest",
      "claude_skills.common.validation.JsonSpecValidationResult",
      "claude_skills.sdd_validate.formatting.normalize_validation_result",
      "claude_skills.sdd_validate.formatting.format_validation_summary",
      "claude_skills.sdd_validate.formatting.NormalizedValidationResult"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_reporting.py": [
      "json",
      "pytest",
      "claude_skills.common.validation.JsonSpecValidationResult",
      "claude_skills.sdd_validate.reporting.generate_report"
    ],
    "src/claude_skills/claude_skills/tests/unit/test_sdd_validate/test_stats.py": [
      "json",
      "pytest",
      "claude_skills.sdd_validate.stats.calculate_statistics",
      "claude_skills.sdd_validate.stats.render_statistics",
      "claude_skills.sdd_validate.stats.SpecStatistics"
    ]
  }
}