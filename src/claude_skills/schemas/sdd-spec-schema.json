{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://claude-skills.dev/schemas/sdd-spec-v1.json",
  "title": "SDD Spec File Schema",
  "description": "Schema for SDD (Spec-Driven Development) JSON specification files",
  "type": "object",
  "required": ["spec_id", "title", "generated", "last_updated", "hierarchy"],
  "properties": {
    "spec_id": {
      "type": "string",
      "pattern": "^[\\w-]+-\\d{4}-\\d{2}-\\d{2}-\\d{3}$",
      "description": "Unique specification identifier: {feature}-{YYYY-MM-DD}-{nnn}"
    },
    "title": {
      "type": "string",
      "minLength": 1,
      "description": "Human-readable specification title"
    },
    "generated": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when spec was generated"
    },
    "last_updated": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of last update"
    },
    "metadata": {
      "type": "object",
      "description": "Optional spec-level metadata",
      "properties": {
        "estimated_hours": { "type": "number", "minimum": 0 },
        "owner": { "type": "string" },
        "status": { "type": "string", "enum": ["active", "archived", "completed"] }
      }
    },
    "hierarchy": {
      "type": "object",
      "description": "Task hierarchy tree",
      "patternProperties": {
        "^(spec-root|phase-\\d+|task-\\d+-\\d+|verify-\\d+-\\d+)$": {
          "$ref": "#/definitions/node"
        }
      }
    }
  },
  "definitions": {
    "node": {
      "type": "object",
      "required": ["id", "type", "title", "status", "parent", "children", "total_tasks", "completed_tasks"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Node identifier matching the key in hierarchy"
        },
        "type": {
          "type": "string",
          "enum": ["spec", "phase", "group", "task", "subtask", "verify"],
          "description": "Node type in hierarchy"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable title"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "in_progress", "completed", "blocked"],
          "description": "Current status"
        },
        "parent": {
          "type": ["string", "null"],
          "description": "Parent node ID (null only for spec-root)"
        },
        "children": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Array of child node IDs"
        },
        "total_tasks": {
          "type": "integer",
          "minimum": 0,
          "description": "Total tasks in this subtree"
        },
        "completed_tasks": {
          "type": "integer",
          "minimum": 0,
          "description": "Completed tasks in this subtree"
        },
        "dependencies": {
          "type": "object",
          "properties": {
            "blocked_by": { "type": "array", "items": { "type": "string" } },
            "depends": { "type": "array", "items": { "type": "string" } },
            "blocks": { "type": "array", "items": { "type": "string" } }
          }
        },
        "metadata": {
          "type": "object",
          "description": "Node-specific metadata",
          "properties": {
            "task_category": {
              "type": "string",
              "enum": ["investigation", "implementation", "refactoring", "decision", "research"],
              "description": "Category of task work. Optional field for backward compatibility. Values: 'investigation' (exploring/analyzing existing code), 'implementation' (writing new functionality), 'refactoring' (improving code structure without changing behavior), 'decision' (architectural/design choices), 'research' (gathering information, reading docs). Default behavior when omitted: inferred from task context."
            },
            "file_path": {
              "type": "string",
              "description": "Path to the primary file being modified by this task. DESIGN PRINCIPLE: Tasks are atomic - each task should modify exactly ONE file. This enables: (1) precise dependency tracking, (2) granular progress monitoring, (3) parallel implementation, (4) straightforward verification, (5) easy rollback. MULTI-FILE SCENARIOS: When a feature requires changes across multiple files, decompose into multiple tasks (each with its own file_path) with explicit dependencies, or use subtasks under a parent task. VALIDATION: Required for implementation/refactoring tasks. Optional for investigation/decision/research tasks (use placeholder values like 'investigation', 'decision', 'research' when no specific file). EXAMPLES: 'src/auth/middleware.js', 'models/user.py', 'docs/api.md'"
            },
            "verification_type": {
              "type": "string",
              "enum": ["auto", "manual"],
              "description": "Type of verification (auto=automated, manual=human review)"
            },
            "skill": {
              "type": "string",
              "description": "Skill to invoke for automated verification (e.g., run-tests, code-doc, sdd-validate)"
            },
            "command": {
              "type": "string",
              "description": "Command or arguments to pass to the skill/tool"
            },
            "on_failure": {
              "$ref": "#/definitions/on_failure_actions",
              "description": "Actions to take when verification fails"
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when task was started (automatically populated by sdd-update)"
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when task was completed (automatically populated by sdd-update)"
            },
            "actual_hours": {
              "type": "number",
              "minimum": 0,
              "description": "Actual time spent on task in hours (enables variance analysis against estimated_hours)"
            }
          }
        }
      }
    },
    "on_failure_actions": {
      "type": "object",
      "description": "Configurable actions to take when verification fails",
      "properties": {
        "consult": {
          "type": "boolean",
          "description": "Whether to trigger AI consultation for debugging (default: false)",
          "default": false
        },
        "revert_status": {
          "type": "string",
          "enum": ["pending", "in_progress", "blocked"],
          "description": "Status to revert the parent task to on failure (default: in_progress)",
          "default": "in_progress"
        },
        "max_retries": {
          "type": "integer",
          "minimum": 0,
          "maximum": 5,
          "description": "Maximum number of automatic retry attempts (default: 0)",
          "default": 0
        },
        "notify": {
          "type": "string",
          "enum": ["log", "email", "slack", "none"],
          "description": "Notification method on failure (default: log)",
          "default": "log"
        },
        "continue_on_failure": {
          "type": "boolean",
          "description": "Whether to continue with other verifications if this one fails (default: false)",
          "default": false
        }
      },
      "additionalProperties": false
    }
  }
}
