{
  "spec_id": "doc-query-enhancements-2025-10-24-001",
  "generated": "2025-10-24T00:00:00Z",
  "last_updated": "2025-10-24T17:40:00Z",
  "metadata": {
    "title": "Doc-Query CLI Enhancement",
    "description": "Enhance doc-query skill with workflow automation, cross-reference tracking, and improved UX to reduce manual command chaining from 6-8 steps to 1 step for common workflows",
    "status": "approved",
    "priority": "high",
    "estimated_hours": 230,
    "complexity": "high",
    "objectives": [
      "Fix critical reverse dependency support",
      "Add cross-reference data (callers/callees) to schema v2.0",
      "Implement 4 core wrapper commands reducing workflows by 80%",
      "Add native pattern filtering to eliminate grep dependencies",
      "Improve impact analysis accuracy from ~60% to ~95%"
    ],
    "success_criteria": [
      "All P0 blockers resolved (reverse deps + cross-refs)",
      "trace-entry, trace-data, impact, refactor-candidates commands working",
      "Workflows reduced from 6-8 commands to 1 command",
      "Native filtering working on list-modules, complexity commands",
      "Impact analysis uses cross-refs instead of search fallback"
    ],
    "security_considerations": [
      "All generated outputs (dot files, JSON) sanitized to prevent injection",
      "Local developer tool - no network exposure or remote data transmission",
      "No sensitive data handling - reads source code only",
      "Output sanitization tested with crafted function names containing special characters"
    ],
    "review": {
      "status": "approved",
      "score": 8.8,
      "date": "2025-10-24",
      "reviewer": "gemini-2.5-pro",
      "recommendation": "APPROVE with timeline revision",
      "key_revisions": [
        "Phase 2 estimate increased from 80 to 110 hours",
        "Added dynamic Python mitigation strategy",
        "Added security considerations"
      ]
    }
  },
  "hierarchy": {
    "spec-root": {
      "type": "spec",
      "title": "Doc-Query CLI Enhancement",
      "status": "pending",
      "parent": null,
      "children": [
        "phase-1",
        "phase-2",
        "phase-3",
        "phase-4"
      ],
      "total_tasks": 46,
      "completed_tasks": 0,
      "metadata": {}
    },
    "phase-1": {
      "type": "phase",
      "title": "P0: Foundation - Critical Fixes",
      "status": "pending",
      "parent": "spec-root",
      "children": [
        "phase-1-files",
        "phase-1-verify"
      ],
      "total_tasks": 21,
      "completed_tasks": 0,
      "metadata": {
        "purpose": "Fix critical blockers: reverse dependency support and cross-reference generation",
        "risk_level": "high",
        "estimated_hours": 40,
        "dependencies": "None - foundational work"
      },
      "dependencies": {
        "blocks": [
          "phase-2"
        ],
        "blocked_by": [],
        "depends": []
      }
    },
    "phase-1-files": {
      "type": "group",
      "title": "File Modifications",
      "status": "pending",
      "parent": "phase-1",
      "children": [
        "task-1-1",
        "task-1-2",
        "task-1-3",
        "task-1-4",
        "task-1-5"
      ],
      "total_tasks": 16,
      "completed_tasks": 0,
      "metadata": {},
      "dependencies": {
        "blocks": [
          "phase-1-verify"
        ],
        "blocked_by": [],
        "depends": []
      }
    },
    "task-1-1": {
      "type": "task",
      "title": "Verify reverse dependency support",
      "status": "pending",
      "parent": "phase-1-files",
      "children": [
        "task-1-1-1",
        "task-1-1-2",
        "task-1-1-3"
      ],
      "dependencies": {
        "blocks": [
          "task-1-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "description": "Inspect documentation.json schema and test reverse dependency functionality",
        "estimated_hours": 4,
        "file_path": "investigation"
      }
    },
    "task-1-1-1": {
      "type": "subtask",
      "title": "Inspect documentation.json schema for reverse dependency data",
      "status": "pending",
      "parent": "task-1-1",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-1-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "actions": [
          "Check if imported_by field exists in modules",
          "Verify reverse dependency tracking in current schema"
        ]
      }
    },
    "task-1-1-2": {
      "type": "subtask",
      "title": "Test sdd doc dependencies --reverse on real codebase",
      "status": "pending",
      "parent": "task-1-1",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-1-3"
        ],
        "blocked_by": [
          "task-1-1-1"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "actions": [
          "Run dependencies --reverse on multiple modules",
          "Verify completeness and accuracy of results"
        ]
      }
    },
    "task-1-1-3": {
      "type": "subtask",
      "title": "Document findings and determine if fix needed",
      "status": "pending",
      "parent": "task-1-1",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-1-1-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "actions": [
          "Create report of reverse dependency status",
          "Identify gaps if any",
          "Estimate effort to fix"
        ]
      }
    },
    "task-1-2": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
      "status": "pending",
      "parent": "phase-1-files",
      "children": [
        "task-1-2-1",
        "task-1-2-2",
        "task-1-2-3",
        "task-1-2-4"
      ],
      "dependencies": {
        "blocks": [
          "task-1-3"
        ],
        "blocked_by": [
          "task-1-1"
        ],
        "depends": []
      },
      "total_tasks": 4,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/code_doc/ast_analysis.py",
        "description": "Add cross-reference tracking during AST analysis to capture caller/callee relationships",
        "estimated_hours": 16
      }
    },
    "task-1-2-1": {
      "type": "subtask",
      "title": "Implement function call tracking during AST traversal",
      "status": "pending",
      "parent": "task-1-2",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-2-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add call tracking in AST visitor",
          "Capture function call expressions",
          "Store caller/callee relationships",
          "Track call locations (file, line)"
        ]
      }
    },
    "task-1-2-2": {
      "type": "subtask",
      "title": "Implement import tracking for class instantiation",
      "status": "pending",
      "parent": "task-1-2",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-2-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Track import statements",
          "Capture class instantiation points",
          "Record imported_by relationships",
          "Store instantiated_by data"
        ]
      }
    },
    "task-1-2-3": {
      "type": "subtask",
      "title": "Build bidirectional reference graph",
      "status": "pending",
      "parent": "task-1-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-1-2-1",
          "task-1-2-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Create caller/callee graph structure",
          "Maintain bidirectional references",
          "Support reverse lookups"
        ]
      }
    },
    "task-1-2-4": {
      "type": "subtask",
      "title": "Add warning system for dynamic Python patterns",
      "status": "pending",
      "parent": "task-1-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Detect decorators, monkey-patching, and reflection during AST analysis",
          "Log warnings when dynamic patterns are found that may affect cross-reference accuracy",
          "Document limitations in generated documentation.json metadata",
          "Add coverage statistics for dynamic vs static call detection"
        ],
        "rationale": "Dynamic Python features (decorators, monkey-patching, reflection) can bypass static AST analysis, leading to incomplete cross-reference data. Explicit warnings help users understand accuracy limits."
      }
    },
    "task-1-3": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/code_doc/schema.py",
      "status": "pending",
      "parent": "phase-1-files",
      "children": [
        "task-1-3-1",
        "task-1-3-2",
        "task-1-3-3"
      ],
      "dependencies": {
        "blocks": [
          "task-1-4"
        ],
        "blocked_by": [
          "task-1-2"
        ],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/code_doc/schema.py",
        "description": "Update schema to v2.0 with cross-reference fields",
        "estimated_hours": 8
      }
    },
    "task-1-3-1": {
      "type": "subtask",
      "title": "Add callers and calls fields to function schema",
      "status": "pending",
      "parent": "task-1-3",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-3-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add callers array with name, file, line, call_type",
          "Add calls array with name, file, line, call_type",
          "Add optional call_count field"
        ]
      }
    },
    "task-1-3-2": {
      "type": "subtask",
      "title": "Add usage tracking fields to class schema",
      "status": "pending",
      "parent": "task-1-3",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-3-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add instantiated_by array",
          "Add imported_by array",
          "Add property_access tracking (optional for v2.0)"
        ]
      }
    },
    "task-1-3-3": {
      "type": "subtask",
      "title": "Update schema version to 2.0",
      "status": "pending",
      "parent": "task-1-3",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-1-3-1",
          "task-1-3-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Update schema_version field",
          "Add migration notes",
          "Document backward compatibility approach"
        ]
      }
    },
    "task-1-4": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "status": "pending",
      "parent": "phase-1-files",
      "children": [
        "task-1-4-1",
        "task-1-4-2",
        "task-1-4-3"
      ],
      "dependencies": {
        "blocks": [
          "task-1-5"
        ],
        "blocked_by": [
          "task-1-3"
        ],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
        "description": "Add query functions for cross-references",
        "estimated_hours": 8
      }
    },
    "task-1-4-1": {
      "type": "subtask",
      "title": "Implement get_callers() function",
      "status": "pending",
      "parent": "task-1-4",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-4-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Query callers from function data",
          "Return formatted caller list",
          "Support filtering options"
        ]
      }
    },
    "task-1-4-2": {
      "type": "subtask",
      "title": "Implement get_callees() function",
      "status": "pending",
      "parent": "task-1-4",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-1-4-3"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Query calls from function data",
          "Return formatted callee list",
          "Support filtering options"
        ]
      }
    },
    "task-1-4-3": {
      "type": "subtask",
      "title": "Implement build_call_graph() function",
      "status": "pending",
      "parent": "task-1-4",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-1-4-1",
          "task-1-4-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Recursively build call graph",
          "Support max depth parameter",
          "Return graph structure for visualization"
        ]
      }
    },
    "task-1-5": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/cli.py",
      "status": "pending",
      "parent": "phase-1-files",
      "children": [
        "task-1-5-1",
        "task-1-5-2",
        "task-1-5-3"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-1-4"
        ],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/cli.py",
        "description": "Add CLI commands for cross-references",
        "estimated_hours": 4
      }
    },
    "task-1-5-1": {
      "type": "subtask",
      "title": "Add 'sdd doc callers' command",
      "status": "pending",
      "parent": "task-1-5",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Create callers CLI command",
          "Add --format text|json option",
          "Add --docs-path parameter"
        ]
      }
    },
    "task-1-5-2": {
      "type": "subtask",
      "title": "Add 'sdd doc callees' command",
      "status": "pending",
      "parent": "task-1-5",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Create callees CLI command",
          "Add --format text|json option",
          "Add --docs-path parameter"
        ]
      }
    },
    "task-1-5-3": {
      "type": "subtask",
      "title": "Add 'sdd doc call-graph' command",
      "status": "pending",
      "parent": "task-1-5",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Create call-graph CLI command",
          "Add --max-depth parameter",
          "Add --format dot|json option"
        ]
      }
    },
    "phase-1-verify": {
      "type": "group",
      "title": "Verification",
      "status": "pending",
      "parent": "phase-1",
      "children": [
        "verify-1-1",
        "verify-1-2",
        "verify-1-3",
        "verify-1-4",
        "verify-1-5"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "phase-1-files"
        ],
        "depends": []
      },
      "total_tasks": 5,
      "completed_tasks": 0,
      "metadata": {}
    },
    "verify-1-1": {
      "type": "verify",
      "title": "Reverse dependencies work correctly",
      "status": "pending",
      "parent": "phase-1-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "sdd doc dependencies [module] --reverse",
        "expected": "Returns all modules that import the target module"
      }
    },
    "verify-1-2": {
      "type": "verify",
      "title": "Cross-reference data present in documentation.json",
      "status": "pending",
      "parent": "phase-1-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "expected": "Functions have callers and calls arrays, classes have instantiated_by and imported_by",
        "command": ""
      }
    },
    "verify-1-3": {
      "type": "verify",
      "title": "New CLI commands work",
      "status": "pending",
      "parent": "phase-1-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "auto",
        "command": "sdd doc callers [function] && sdd doc callees [function] && sdd doc call-graph [function]",
        "expected": "All three commands return valid output"
      }
    },
    "verify-1-4": {
      "type": "verify",
      "title": "Schema v2.0 compatibility",
      "status": "pending",
      "parent": "phase-1-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "expected": "Documentation generation produces v2.0 schema with all cross-reference fields",
        "command": ""
      }
    },
    "verify-1-5": {
      "type": "verify",
      "title": "Cross-reference accuracy on dynamic Python codebase",
      "status": "pending",
      "parent": "phase-1-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "Test code-doc skill on codebase with decorators, monkey-patching, and dynamic calls",
        "expected": "Warnings logged for dynamic patterns; known limitations documented in output; static call detection coverage > 80%",
        "rationale": "Addresses review feedback on dynamic Python analysis risk - ensures mitigation strategy works as intended"
      }
    },
    "phase-2": {
      "type": "phase",
      "title": "P1: Core Wrapper Commands",
      "status": "pending",
      "parent": "spec-root",
      "children": [
        "phase-2-files",
        "phase-2-verify"
      ],
      "dependencies": {
        "blocks": [
          "phase-3"
        ],
        "blocked_by": [
          "phase-1"
        ],
        "depends": []
      },
      "total_tasks": 18,
      "completed_tasks": 0,
      "metadata": {
        "purpose": "Implement 4 high-impact wrapper commands that automate common workflows",
        "risk_level": "medium",
        "estimated_hours": 110,
        "dependencies": "Requires Phase 1 cross-reference data",
        "revision_note": "Increased from 80h based on review feedback - complex graph traversal and data-flow analysis require more buffer"
      }
    },
    "phase-2-files": {
      "type": "group",
      "title": "File Modifications",
      "status": "pending",
      "parent": "phase-2",
      "children": [
        "task-2-1",
        "task-2-2",
        "task-2-3",
        "task-2-4",
        "task-2-5"
      ],
      "total_tasks": 13,
      "completed_tasks": 0,
      "metadata": {},
      "dependencies": {
        "blocks": [
          "phase-2-verify"
        ],
        "blocked_by": [],
        "depends": []
      }
    },
    "task-2-1": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py (new file)",
      "status": "pending",
      "parent": "phase-2-files",
      "children": [
        "task-2-1-1",
        "task-2-1-2",
        "task-2-1-3"
      ],
      "dependencies": {
        "blocks": [
          "task-2-5"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/workflows/trace_entry.py",
        "description": "Implement trace-entry workflow command",
        "estimated_hours": 12,
        "is_new_file": true
      }
    },
    "task-2-1-1": {
      "type": "subtask",
      "title": "Implement call chain traversal logic",
      "status": "pending",
      "parent": "task-2-1",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-1-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Find entry function",
          "Build call chain with max depth",
          "Track visited nodes",
          "Identify architectural layers"
        ]
      }
    },
    "task-2-1-2": {
      "type": "subtask",
      "title": "Implement output formatting",
      "status": "pending",
      "parent": "task-2-1",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-1-3"
        ],
        "blocked_by": [
          "task-2-1-1"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Tree visualization with layers",
          "Complexity highlighting",
          "Hot spots identification",
          "Dependencies summary"
        ]
      }
    },
    "task-2-1-3": {
      "type": "subtask",
      "title": "Add CLI integration",
      "status": "pending",
      "parent": "task-2-1",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-2-1-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add sdd doc trace-entry command",
          "Support --max-depth, --format options"
        ]
      }
    },
    "task-2-2": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py (new file)",
      "status": "pending",
      "parent": "phase-2-files",
      "children": [
        "task-2-2-1",
        "task-2-2-2",
        "task-2-2-3"
      ],
      "dependencies": {
        "blocks": [
          "task-2-5"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/workflows/trace_data.py",
        "description": "Implement trace-data workflow command",
        "estimated_hours": 12,
        "is_new_file": true
      }
    },
    "task-2-2-1": {
      "type": "subtask",
      "title": "Implement lifecycle operation detection",
      "status": "pending",
      "parent": "task-2-2",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-2-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Find class definition",
          "Detect creation patterns",
          "Detect read/update/delete operations",
          "Build data flow graph"
        ]
      }
    },
    "task-2-2-2": {
      "type": "subtask",
      "title": "Implement output formatting",
      "status": "pending",
      "parent": "task-2-2",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-2-3"
        ],
        "blocked_by": [
          "task-2-2-1"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Lifecycle visualization",
          "Usage map by layer",
          "Property access analysis",
          "Mutation hot spots"
        ]
      }
    },
    "task-2-2-3": {
      "type": "subtask",
      "title": "Add CLI integration",
      "status": "pending",
      "parent": "task-2-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-2-2-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add sdd doc trace-data command",
          "Support --include-properties, --format options"
        ]
      }
    },
    "task-2-3": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py (new file)",
      "status": "pending",
      "parent": "phase-2-files",
      "children": [
        "task-2-3-1",
        "task-2-3-2",
        "task-2-3-3"
      ],
      "dependencies": {
        "blocks": [
          "task-2-5"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/workflows/impact_analysis.py",
        "description": "Implement impact analysis workflow command",
        "estimated_hours": 16,
        "is_new_file": true
      }
    },
    "task-2-3-1": {
      "type": "subtask",
      "title": "Implement blast radius calculation",
      "status": "pending",
      "parent": "task-2-3",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-3-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Get direct dependents using cross-refs",
          "Calculate indirect dependents (2nd degree)",
          "Find tests covering entity",
          "Calculate risk score"
        ]
      }
    },
    "task-2-3-2": {
      "type": "subtask",
      "title": "Implement output formatting with recommendations",
      "status": "pending",
      "parent": "task-2-3",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-3-3"
        ],
        "blocked_by": [
          "task-2-3-1"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Blast radius visualization",
          "Risk matrix display",
          "Test coverage report",
          "Actionable recommendations",
          "Change checklist generation"
        ]
      }
    },
    "task-2-3-3": {
      "type": "subtask",
      "title": "Add CLI integration",
      "status": "pending",
      "parent": "task-2-3",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-2-3-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add sdd doc impact command",
          "Support --type, --max-depth, --include-tests, --format options"
        ]
      }
    },
    "task-2-4": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py (new file)",
      "status": "pending",
      "parent": "phase-2-files",
      "children": [
        "task-2-4-1",
        "task-2-4-2",
        "task-2-4-3"
      ],
      "dependencies": {
        "blocks": [
          "task-2-5"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/workflows/refactor_candidates.py",
        "description": "Implement refactor-candidates workflow command",
        "estimated_hours": 12,
        "is_new_file": true
      }
    },
    "task-2-4-1": {
      "type": "subtask",
      "title": "Implement priority scoring algorithm",
      "status": "pending",
      "parent": "task-2-4",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-4-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Find high-complexity functions",
          "Get dependent count for each",
          "Calculate priority score (complexity \u00d7 dependents)",
          "Categorize risk level"
        ]
      }
    },
    "task-2-4-2": {
      "type": "subtask",
      "title": "Implement output formatting",
      "status": "pending",
      "parent": "task-2-4",
      "children": [],
      "dependencies": {
        "blocks": [
          "task-2-4-3"
        ],
        "blocked_by": [
          "task-2-4-1"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Ranked table by priority score",
          "Priority matrix distribution",
          "Recommended action plan",
          "Export options (json, csv)"
        ]
      }
    },
    "task-2-4-3": {
      "type": "subtask",
      "title": "Add CLI integration",
      "status": "pending",
      "parent": "task-2-4",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-2-4-2"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add sdd doc refactor-candidates command",
          "Support --threshold, --min-dependents, --format options"
        ]
      }
    },
    "task-2-5": {
      "type": "task",
      "title": "skills/doc-query/SKILL.md",
      "status": "pending",
      "parent": "phase-2-files",
      "children": [
        "task-2-5-1"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-2-1",
          "task-2-2",
          "task-2-3",
          "task-2-4"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "skills/doc-query/SKILL.md",
        "description": "Update documentation with new wrapper commands",
        "estimated_hours": 4
      }
    },
    "task-2-5-1": {
      "type": "subtask",
      "title": "Add documentation for wrapper commands",
      "status": "pending",
      "parent": "task-2-5",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add examples for trace-entry",
          "Add examples for trace-data",
          "Add examples for impact",
          "Add examples for refactor-candidates",
          "Update workflow sections to reference new commands"
        ]
      }
    },
    "phase-2-verify": {
      "type": "group",
      "title": "Verification",
      "status": "pending",
      "parent": "phase-2",
      "children": [
        "verify-2-1",
        "verify-2-2",
        "verify-2-3",
        "verify-2-4",
        "verify-2-5"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "phase-2-files"
        ],
        "depends": []
      },
      "total_tasks": 5,
      "completed_tasks": 0,
      "metadata": {}
    },
    "verify-2-1": {
      "type": "verify",
      "title": "trace-entry reduces workflow from 6 commands to 1",
      "status": "pending",
      "parent": "phase-2-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "sdd doc trace-entry [function]",
        "expected": "Complete execution flow with layers, complexity, dependencies in single output"
      }
    },
    "verify-2-2": {
      "type": "verify",
      "title": "trace-data shows complete lifecycle",
      "status": "pending",
      "parent": "phase-2-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "sdd doc trace-data [class]",
        "expected": "Creation, reading, updating, deletion operations all identified with usage map"
      }
    },
    "verify-2-3": {
      "type": "verify",
      "title": "impact analysis uses cross-refs not search",
      "status": "pending",
      "parent": "phase-2-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "sdd doc impact [function]",
        "expected": "Accurate dependent count using callers, not search fallback. Risk assessment included."
      }
    },
    "verify-2-4": {
      "type": "verify",
      "title": "refactor-candidates automates prioritization",
      "status": "pending",
      "parent": "phase-2-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "sdd doc refactor-candidates --threshold 10",
        "expected": "Ranked list with priority scores, risk levels, and action plan"
      }
    },
    "verify-2-5": {
      "type": "verify",
      "title": "Output sanitization prevents injection attacks",
      "status": "pending",
      "parent": "phase-2-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "manual",
        "command": "Test with crafted function names containing special characters: '; DROP TABLE;', '<script>alert(1)</script>', '../../../etc/passwd', '${evil}'",
        "expected": "All outputs (dot files, JSON, text) properly escape/sanitize special characters; no command injection possible",
        "rationale": "Addresses security consideration from review - ensures generated outputs cannot be exploited via crafted identifiers"
      }
    },
    "phase-3": {
      "type": "phase",
      "title": "P2: Refinements - Native Filtering",
      "status": "pending",
      "parent": "spec-root",
      "children": [
        "phase-3-files",
        "phase-3-verify"
      ],
      "dependencies": {
        "blocks": [
          "phase-4"
        ],
        "blocked_by": [
          "phase-2"
        ],
        "depends": []
      },
      "total_tasks": 6,
      "completed_tasks": 0,
      "metadata": {
        "purpose": "Add native pattern filtering to eliminate grep dependencies",
        "risk_level": "low",
        "estimated_hours": 24,
        "dependencies": "Independent of previous phases but builds on them"
      }
    },
    "phase-3-files": {
      "type": "group",
      "title": "File Modifications",
      "status": "pending",
      "parent": "phase-3",
      "children": [
        "task-3-1",
        "task-3-2"
      ],
      "total_tasks": 4,
      "completed_tasks": 0,
      "metadata": {},
      "dependencies": {
        "blocks": [
          "phase-3-verify"
        ],
        "blocked_by": [],
        "depends": []
      }
    },
    "task-3-1": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
      "status": "pending",
      "parent": "phase-3-files",
      "children": [
        "task-3-1-1"
      ],
      "dependencies": {
        "blocks": [
          "task-3-2"
        ],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/doc_query_lib.py",
        "description": "Add pattern filtering helper function",
        "estimated_hours": 4
      }
    },
    "task-3-1-1": {
      "type": "subtask",
      "title": "Add apply_pattern_filter() helper function",
      "status": "pending",
      "parent": "task-3-1",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Create regex pattern matcher",
          "Support both string and compiled regex",
          "Return filtered results",
          "Handle edge cases (invalid regex, etc)"
        ]
      }
    },
    "task-3-2": {
      "type": "task",
      "title": "src/claude_skills/claude_skills/doc_query/cli.py",
      "status": "pending",
      "parent": "phase-3-files",
      "children": [
        "task-3-2-1",
        "task-3-2-2",
        "task-3-2-3"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "task-3-1"
        ],
        "depends": []
      },
      "total_tasks": 3,
      "completed_tasks": 0,
      "metadata": {
        "file_path": "src/claude_skills/claude_skills/doc_query/cli.py",
        "description": "Add --pattern flag to list commands",
        "estimated_hours": 8
      }
    },
    "task-3-2-1": {
      "type": "subtask",
      "title": "Add --pattern to list-modules command",
      "status": "pending",
      "parent": "task-3-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add --pattern option to CLI",
          "Apply filtering before output",
          "Preserve JSON output compatibility"
        ]
      }
    },
    "task-3-2-2": {
      "type": "subtask",
      "title": "Add --pattern to list-classes and list-functions commands",
      "status": "pending",
      "parent": "task-3-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add --pattern option to both commands",
          "Apply filtering logic",
          "Maintain consistent interface"
        ]
      }
    },
    "task-3-2-3": {
      "type": "subtask",
      "title": "Add --module-pattern to complexity command",
      "status": "pending",
      "parent": "task-3-2",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "changes": [
          "Add --module-pattern option",
          "Filter by module path before complexity analysis",
          "Preserve --json flag functionality"
        ]
      }
    },
    "phase-3-verify": {
      "type": "group",
      "title": "Verification",
      "status": "pending",
      "parent": "phase-3",
      "children": [
        "verify-3-1",
        "verify-3-2"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "phase-3-files"
        ],
        "depends": []
      },
      "total_tasks": 2,
      "completed_tasks": 0,
      "metadata": {}
    },
    "verify-3-1": {
      "type": "verify",
      "title": "Pattern filtering works on all list commands",
      "status": "pending",
      "parent": "phase-3-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "auto",
        "command": "sdd doc list-modules --pattern '(main|index)' && sdd doc list-classes --pattern '.*Service' && sdd doc complexity --module-pattern '*auth*'",
        "expected": "All commands filter correctly without requiring grep"
      }
    },
    "verify-3-2": {
      "type": "verify",
      "title": "JSON output preserved with filtering",
      "status": "pending",
      "parent": "phase-3-verify",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "verification_type": "auto",
        "command": "sdd doc list-modules --pattern 'doc' --json | jq .",
        "expected": "Valid JSON output that can be piped to jq"
      }
    },
    "phase-4": {
      "type": "phase",
      "title": "P3: Advanced Features (Future)",
      "status": "pending",
      "parent": "spec-root",
      "children": [
        "phase-4-files"
      ],
      "dependencies": {
        "blocks": [],
        "blocked_by": [
          "phase-3"
        ],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "purpose": "Framework detection, interactive mode, and architecture detection - deferred based on user feedback",
        "risk_level": "medium",
        "estimated_hours": 56,
        "dependencies": "Builds on all previous phases",
        "note": "Placeholder phase - implementation deferred to future based on P0-P2 feedback"
      }
    },
    "phase-4-files": {
      "type": "group",
      "title": "Placeholder Tasks",
      "status": "pending",
      "parent": "phase-4",
      "children": [
        "task-4-1"
      ],
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {}
    },
    "task-4-1": {
      "type": "task",
      "title": "Future: Architecture detection, interactive mode, framework-aware queries",
      "status": "pending",
      "parent": "phase-4-files",
      "children": [],
      "dependencies": {
        "blocks": [],
        "blocked_by": [],
        "depends": []
      },
      "total_tasks": 1,
      "completed_tasks": 0,
      "metadata": {
        "description": "Placeholder for P3 features - to be planned based on feedback from P0-P2 implementation",
        "estimated_hours": 56,
        "deferred": true,
        "file_path": "tbd"
      }
    }
  }
}